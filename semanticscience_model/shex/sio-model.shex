BASE <http://semanticscience.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>


<1DCartesianPoint> CLOSED {
    (  $<1DCartesianPoint_tes> (  &<Point_tes> ;
          rdf:type [ <Point> ] ?
       ) ;
       rdf:type [ <1DCartesianPoint> ] ?
    )
}

<1DExtentQuantity>  (
    CLOSED {
       (  $<1DExtentQuantity_tes> (  &<SpatialQuantity_tes> ;
             rdf:type [ <SpatialQuantity> ] ?
          ) ;
          rdf:type [ <1DExtentQuantity> ] ?
       )
    } OR @<Depth> OR @<Height> OR @<Length> OR @<Width>
)

<2DCartesianPoint> CLOSED {
    (  $<2DCartesianPoint_tes> (  &<Point_tes> ;
          rdf:type [ <Point> ] ?
       ) ;
       rdf:type [ <2DCartesianPoint> ] ?
    )
}

<2DExtentQuantity>  (
    CLOSED {
       (  $<2DExtentQuantity_tes> (  &<SpatialQuantity_tes> ;
             rdf:type [ <SpatialQuantity> ] ?
          ) ;
          rdf:type [ <2DExtentQuantity> ] ?
       )
    } OR @<Area> OR @<LengthOfPerimeter>
)

<3%27SpliceSite> CLOSED {
    (  $<3%27SpliceSite_tes> (  &<SpliceSite_tes> ;
          rdf:type [ <SpliceSite> ] ?
       ) ;
       rdf:type [ <3%27SpliceSite> ] ?
    )
}

<3%27UntranslatedRegion> CLOSED {
    (  $<3%27UntranslatedRegion_tes> (  &<GeneComponent_tes> ;
          rdf:type [ <GeneComponent> ] ?
       ) ;
       rdf:type [ <3%27UntranslatedRegion> ] ?
    )
}

<3DCartesianCoordinate> CLOSED {
    (  $<3DCartesianCoordinate_tes> (  &<CartesianCoordinate_tes> ;
          rdf:type [ <CartesianCoordinate> ] ?
       ) ;
       rdf:type [ <3DCartesianCoordinate> ] ?
    )
}

<3DCartesianPoint> CLOSED {
    (  $<3DCartesianPoint_tes> (  &<Point_tes> ;
          rdf:type [ <Point> ] ?
       ) ;
       rdf:type [ <3DCartesianPoint> ] ?
    )
}

<3DExtentQuantity>  (
    CLOSED {
       (  $<3DExtentQuantity_tes> (  &<SpatialQuantity_tes> ;
             rdf:type [ <SpatialQuantity> ] ?
          ) ;
          rdf:type [ <3DExtentQuantity> ] ?
       )
    } OR @<Concentration> OR @<Density> OR @<Volume>
)

<3dStructureModel> CLOSED {
    (  $<3dStructureModel_tes> (  &<TertiaryStructureDescriptor_tes> ;
          rdf:type [ <TertiaryStructureDescriptor> ] ?
       ) ;
       rdf:type [ <3dStructureModel> ] ?
    )
}

<5%27SpliceSite> CLOSED {
    (  $<5%27SpliceSite_tes> (  &<SpliceSite_tes> ;
          rdf:type [ <SpliceSite> ] ?
       ) ;
       rdf:type [ <5%27SpliceSite> ] ?
    )
}

<5%27UntranslatedRegion> CLOSED {
    (  $<5%27UntranslatedRegion_tes> (  &<GeneComponent_tes> ;
          rdf:type [ <GeneComponent> ] ?
       ) ;
       rdf:type [ <5%27UntranslatedRegion> ] ?
    )
}

<Abnormal>  (
    CLOSED {
       (  $<Abnormal_tes> (  &<Normality_tes> ;
             rdf:type [ <Normality> ] ?
          ) ;
          rdf:type [ <Abnormal> ] ?
       )
    } OR @<Decreased> OR @<Increased>
)

<Aborted> CLOSED {
    (  $<Aborted_tes> (  &<ProcessStatus_tes> ;
          rdf:type [ <ProcessStatus> ] ?
       ) ;
       rdf:type [ <Aborted> ] ?
    )
}

<AbstractRole>  (
    CLOSED {
       (  $<AbstractRole_tes> (  &<Role_tes> ;
             rdf:type [ <Role> ] ?
          ) ;
          rdf:type [ <AbstractRole> ] ?
       )
    } OR @<ComparativeRole> OR @<PositionalRole>
)

<AbstractSection> CLOSED {
    (  $<AbstractSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <AbstractSection> ] ?
    )
}

<Academic>  (
    CLOSED {
       (  $<Academic_tes> (  &<Person_tes> ;
             rdf:type [ <Person> ] ?
          ) ;
          rdf:type [ <Academic> ] ?
       )
    } OR @<Professor> OR @<Student>
)

<AcademicDepartment> CLOSED {
    (  $<AcademicDepartment_tes> (  &<AcademicOrganization_tes> ;
          rdf:type [ <AcademicOrganization> ] ?
       ) ;
       rdf:type [ <AcademicDepartment> ] ?
    )
}

<AcademicOrganization>  (
    CLOSED {
       (  $<AcademicOrganization_tes> (  &<Organization_tes> ;
             rdf:type [ <Organization> ] ?
          ) ;
          rdf:type [ <AcademicOrganization> ] ?
       )
    } OR @<AcademicDepartment> OR @<University>
)

<AcademicRole>  (
    CLOSED {
       (  $<AcademicRole_tes> (  &<OccupationalRole_tes> ;
             rdf:type [ <OccupationalRole> ] ?
          ) ;
          rdf:type [ <AcademicRole> ] ?
       )
    } OR @<DepartmentChairRole> OR @<ProfessorRole> OR @<StudentAdvisorRole> OR @<StudentRole>
)

<Acid> CLOSED {
    (  $<Acid_tes> (  &<LiquidSolutionComponent_tes> ;
          rdf:type [ <LiquidSolutionComponent> ] ?
       ) ;
       rdf:type [ <Acid> ] ?
    )
}

<Acid-baseReaction> CLOSED {
    (  $<Acid-baseReaction_tes> (  &<ChemicalReaction_tes> ;
          rdf:type [ <ChemicalReaction> ] ?
       ) ;
       rdf:type [ <Acid-baseReaction> ] ?
    )
}

<AcknowledgementsSection> CLOSED {
    (  $<AcknowledgementsSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <AcknowledgementsSection> ] ?
    )
}

<ACollectionOfDuplicates> CLOSED {
    (  $<ACollectionOfDuplicates_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <ACollectionOfDuplicates> ] ?
    )
}

<ACollectionOfReplicates> CLOSED {
    (  $<ACollectionOfReplicates_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <ACollectionOfReplicates> ] ?
    )
}

<ActiniumAtom> CLOSED {
    (  $<ActiniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ActiniumAtom> ] ?
    )
}

<ActionSpecification>  (
    CLOSED {
       (  $<ActionSpecification_tes> (  &<Specification_tes> ;
             rdf:type [ <Specification> ] ?
          ) ;
          rdf:type [ <ActionSpecification> ] ?
       )
    } OR @<ExperimentalProtocol> OR @<Pathway> OR @<Plan> OR @<Recipe>
)

<Activator> CLOSED {
    (  $<Activator_tes> (  &<MolecularRegulator_tes> ;
          rdf:type [ <MolecularRegulator> ] ?
       ) ;
       rdf:type [ <Activator> ] ?
    )
}

<ActivatorRole> CLOSED {
    (  $<ActivatorRole_tes> (  &<RegulatorRole_tes> ;
          rdf:type [ <RegulatorRole> ] ?
       ) ;
       rdf:type [ <ActivatorRole> ] ?
    )
}

<ActiveIngredient> CLOSED {
    (  $<ActiveIngredient_tes> (  &<PharmaceuticalIngredient_tes> ;
          rdf:type [ <PharmaceuticalIngredient> ] ?
       ) ;
       rdf:type [ <ActiveIngredient> ] ?
    )
}

<ActiveMovement>  (
    CLOSED {
       (  $<ActiveMovement_tes> (  &<Movement_tes> ;
             rdf:type [ <Movement> ] ?
          ) ;
          rdf:type [ <ActiveMovement> ] ?
       )
    } OR @<Locomotion>
)

<ActiveSite> CLOSED {
    (  $<ActiveSite_tes> (  &<MolecularSite_tes> ;
          rdf:type [ <MolecularSite> ] ?
       ) ;
       rdf:type [ <ActiveSite> ] ?
    )
}

<ActiveTransport>  (
    CLOSED {
       (  $<ActiveTransport_tes> (  &<MembraneTransport_tes> ;
             rdf:type [ <MembraneTransport> ] ?
          ) ;
          rdf:type [ <ActiveTransport> ] ?
       )
    } OR @<PrimaryActiveTransport> OR @<SecondaryActiveTransport>
)

<AdditionReaction>  (
    CLOSED {
       (  $<AdditionReaction_tes> (  &<OrganicReaction_tes> ;
             rdf:type [ <OrganicReaction> ] ?
          ) ;
          rdf:type [ <AdditionReaction> ] ?
       )
    } OR @<Non-polarAdditionReaction> OR @<PolarAdditionReaction>
)

<Address> CLOSED {
    (  $<Address_tes> (  &<PositionalIdentifier_tes> ;
          rdf:type [ <PositionalIdentifier> ] ?
       ) ;
       rdf:type [ <Address> ] ?
    )
}

<AdministrativeRole>  (
    CLOSED {
       (  $<AdministrativeRole_tes> (  &<OccupationalRole_tes> ;
             rdf:type [ <OccupationalRole> ] ?
          ) ;
          rdf:type [ <AdministrativeRole> ] ?
       )
    } OR @<SecretaryRole>
)

<Affection> CLOSED {
    (  $<Affection_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Affection> ] ?
    )
}

<Affiliation> CLOSED {
    (  $<Affiliation_tes> (  &<SocialRelation_tes> ;
          rdf:type [ <SocialRelation> ] ?
       ) ;
       rdf:type [ <Affiliation> ] ?
    )
}

<Age> CLOSED {
    (  $<Age_tes> (  &<DimensionalQuantity_tes> ;
          rdf:type [ <DimensionalQuantity> ] ?
       ) ;
       rdf:type [ <Age> ] ?
    )
}

<AggregatedCarbonNanorods> CLOSED {
    (  $<AggregatedCarbonNanorods_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <AggregatedCarbonNanorods> ] ?
    )
}

<Agreement>  (
    CLOSED {
       (  $<Agreement_tes> (  &<AgreementQuality_tes> ;
             rdf:type [ <AgreementQuality> ] ?
          ) ;
          rdf:type [ <Agreement> ] ?
       )
    } OR @<Consensus> OR @<FullAgreement>
)

<AgreementQuality>  (
    CLOSED {
       (  $<AgreementQuality_tes> (  &<InformationalQuality_tes> ;
             rdf:type [ <InformationalQuality> ] ?
          ) ;
          rdf:type [ <AgreementQuality> ] ?
       )
    } OR @<Agreement> OR @<Disagreement>
)

<Algorithm>  (
    CLOSED {
       (  $<Algorithm_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Algorithm> ] ?
       )
    } OR @<Workflow>
)

<ALittleQuantifier> CLOSED {
    (  $<ALittleQuantifier_tes> (  &<QuantityModifier_tes> ;
          rdf:type [ <QuantityModifier> ] ?
       ) ;
       rdf:type [ <ALittleQuantifier> ] ?
    )
}

<Alive>  (
    CLOSED {
       (  $<Alive_tes> (  &<LifeStatus_tes> ;
             rdf:type [ <LifeStatus> ] ?
          ) ;
          rdf:type [ <Alive> ] ?
       )
    } OR @<Healthy> OR @<Sick>
)

<Allele> CLOSED {
    (  $<Allele_tes> (  &<Gene_tes> ;
          rdf:type [ <Gene> ] ?
       ) ;
       rdf:type [ <Allele> ] ?
    )
}

<AllostericSite> CLOSED {
    (  $<AllostericSite_tes> (  &<BindingSite_tes> ;
          rdf:type [ <BindingSite> ] ?
       ) ;
       rdf:type [ <AllostericSite> ] ?
    )
}

<Allotrope>  (
    CLOSED {
       (  $<Allotrope_tes> (  &<ChemicalElement_tes> ;
             rdf:type [ <ChemicalElement> ] ?
          ) ;
          rdf:type [ <Allotrope> ] ?
       )
    } OR @<CarbonAllotrope>
)

<AlphaHelix> CLOSED {
    (  $<AlphaHelix_tes> (  &<AminoAcidPolymerSubmolecule_tes> ;
          rdf:type [ <AminoAcidPolymerSubmolecule> ] ?
       ) ;
       rdf:type [ <AlphaHelix> ] ?
    )
}

<Altitude> CLOSED {
    (  $<Altitude_tes> (  &<Position_tes> ;
          rdf:type [ <Position> ] ?
       ) ;
       rdf:type [ <Altitude> ] ?
    )
}

<AluminiumAtom> CLOSED {
    (  $<AluminiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <AluminiumAtom> ] ?
    )
}

<Always> CLOSED {
    (  $<Always_tes> (  &<TemporalQualifier_tes> ;
          rdf:type [ <TemporalQualifier> ] ?
       ) ;
       rdf:type [ <Always> ] ?
    )
}

<AmericiumAtom> CLOSED {
    (  $<AmericiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <AmericiumAtom> ] ?
    )
}

<AminoAcid> CLOSED {
    (  $<AminoAcid_tes> (  &<OrganicMolecule_tes> ;
          rdf:type [ <OrganicMolecule> ] ?
       ) ;
       rdf:type [ <AminoAcid> ] ?
    )
}

<AminoAcidPolymer>  (
    CLOSED {
       (  $<AminoAcidPolymer_tes> (  &<OrganicPolymer_tes> ;
             rdf:type [ <OrganicPolymer> ] ?
          ) ;
          rdf:type [ <AminoAcidPolymer> ] ?
       )
    } OR @<Oligopeptide> OR @<Peptide> OR @<Polypeptide> OR @<Protein>
)

<AminoAcidPolymerSubmolecule>  (
    CLOSED {
       (  $<AminoAcidPolymerSubmolecule_tes> (  &<OrganicSubmolecule_tes> ;
             rdf:type [ <OrganicSubmolecule> ] ?
          ) ;
          rdf:type [ <AminoAcidPolymerSubmolecule> ] ?
       )
    } OR @<AlphaHelix> OR @<AminoAcidResidue> OR @<BetaStrand> OR @<Post-translationalModification> OR @<ProteinDomain>
)

<AminoAcidResidue> CLOSED {
    (  $<AminoAcidResidue_tes> (  &<AminoAcidPolymerSubmolecule_tes> ;
          rdf:type [ <AminoAcidPolymerSubmolecule> ] ?
       ) ;
       rdf:type [ <AminoAcidResidue> ] ?
    )
}

<AmorphousCarbon> CLOSED {
    (  $<AmorphousCarbon_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <AmorphousCarbon> ] ?
    )
}

<Anabolism> CLOSED {
    (  $<Anabolism_tes> (  &<Metabolism_tes> ;
          rdf:type [ <Metabolism> ] ?
       ) ;
       rdf:type [ <Anabolism> ] ?
    )
}

<Analyte> CLOSED {
    (  $<Analyte_tes> (  &<ChemicalSubstance_tes> ;
          rdf:type [ <ChemicalSubstance> ] ?
       ) ;
       rdf:type [ <Analyte> ] ?
    )
}

<AnatomicalEntity> CLOSED {
    (  $<AnatomicalEntity_tes> (  &<SpecializedObject_tes> ;
          rdf:type [ <SpecializedObject> ] ?
       ) ;
       rdf:type [ <AnatomicalEntity> ] ?
    )
}

<Anger>  (
    CLOSED {
       (  $<Anger_tes> (  &<Disgust_tes> ;
             rdf:type [ <Disgust> ] ?
          ) ;
          rdf:type [ <Anger> ] ?
       )
    } OR @<Rage>
)

<Angst> CLOSED {
    (  $<Angst_tes> (  &<Anxiety_tes> ;
          rdf:type [ <Anxiety> ] ?
       ) ;
       rdf:type [ <Angst> ] ?
    )
}

<Anion> CLOSED {
    (  $<Anion_tes> (  &<Ion_tes> ;
          rdf:type [ <Ion> ] ?
       ) ;
       rdf:type [ <Anion> ] ?
    )
}

<Annotation> CLOSED {
    (  $<Annotation_tes> (  &<Description_tes> ;
          rdf:type [ <Description> ] ?
       ) ;
       rdf:type [ <Annotation> ] ?
    )
}

<Annoyance>  (
    CLOSED {
       (  $<Annoyance_tes> (  &<NegativeEmotion_tes> ;
             rdf:type [ <NegativeEmotion> ] ?
          ) ;
          rdf:type [ <Annoyance> ] ?
       )
    } OR @<Frustration>
)

<Answer> CLOSED {
    (  $<Answer_tes> (  &<Description_tes> ;
          rdf:type [ <Description> ] ?
       ) ;
       rdf:type [ <Answer> ] ?
    )
}

<Antibody> CLOSED {
    (  $<Antibody_tes> (  &<ProteinComplex_tes> ;
          rdf:type [ <ProteinComplex> ] ?
       ) ;
       rdf:type [ <Antibody> ] ?
    )
}

<Antigen> CLOSED {
    (  $<Antigen_tes> (  &<Molecule_tes> ;
          rdf:type [ <Molecule> ] ?
       ) ;
       rdf:type [ <Antigen> ] ?
    )
}

<AntimonyAtom> CLOSED {
    (  $<AntimonyAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <AntimonyAtom> ] ?
    )
}

<AntiportEnabledSecondaryActiveTransport> CLOSED {
    (  $<AntiportEnabledSecondaryActiveTransport_tes> (  &<SecondaryActiveTransport_tes> ;
          rdf:type [ <SecondaryActiveTransport> ] ?
       ) ;
       rdf:type [ <AntiportEnabledSecondaryActiveTransport> ] ?
    )
}

<Antonym> CLOSED {
    (  $<Antonym_tes> (  &<TermVariant_tes> ;
          rdf:type [ <TermVariant> ] ?
       ) ;
       rdf:type [ <Antonym> ] ?
    )
}

<Anxiety>  (
    CLOSED {
       (  $<Anxiety_tes> (  &<Apprehension_tes> ;
             rdf:type [ <Apprehension> ] ?
          ) ;
          rdf:type [ <Anxiety> ] ?
       )
    } OR @<Angst>
)

<ApartmentNumber> CLOSED {
    (  $<ApartmentNumber_tes> (  &<PositionalIdentifier_tes> ;
          rdf:type [ <PositionalIdentifier> ] ?
       ) ;
       rdf:type [ <ApartmentNumber> ] ?
    )
}

<Apathy> CLOSED {
    (  $<Apathy_tes> (  &<Indifference_tes> ;
          rdf:type [ <Indifference> ] ?
       ) ;
       rdf:type [ <Apathy> ] ?
    )
}

<Apprehension>  (
    CLOSED {
       (  $<Apprehension_tes> (  &<NegativeEmotion_tes> ;
             rdf:type [ <NegativeEmotion> ] ?
          ) ;
          rdf:type [ <Apprehension> ] ?
       )
    } OR @<Anxiety> OR @<Fear> OR @<Worry>
)

<Arc> CLOSED {
    (  $<Arc_tes> (  &<Curve_tes> ;
          rdf:type [ <Curve> ] ?
       ) ;
       rdf:type [ <Arc> ] ?
    )
}

<Area>  (
    CLOSED {
       (  $<Area_tes> (  &<2DExtentQuantity_tes> ;
             rdf:type [ <2DExtentQuantity> ] ?
          ) ;
          rdf:type [ <Area> ] ?
       )
    } OR @<SurfaceArea>
)

<ArgonAtom> CLOSED {
    (  $<ArgonAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ArgonAtom> ] ?
    )
}

<Argument>  (
    CLOSED {
       (  $<Argument_tes> (  &<Proposition_tes> ;
             rdf:type [ <Proposition> ] ?
          ) ;
          rdf:type [ <Argument> ] ?
       )
    } OR @<DeductiveArgument> OR @<InductiveArgument> OR @<InvalidArgument> OR @<ValidArgument>
)

<AromaticBond> CLOSED {
    (  $<AromaticBond_tes> (  &<CovalentBond_tes> ;
          rdf:type [ <CovalentBond> ] ?
       ) ;
       rdf:type [ <AromaticBond> ] ?
    )
}

<AromaticRing> CLOSED {
    (  $<AromaticRing_tes> (  &<Ring_tes> ;
          rdf:type [ <Ring> ] ?
       ) ;
       rdf:type [ <AromaticRing> ] ?
    )
}

<Arousal> CLOSED {
    (  $<Arousal_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Arousal> ] ?
    )
}

<ArrowedLineSegment>  (
    CLOSED {
       (  $<ArrowedLineSegment_tes> (  &<DirectedLineSegment_tes> ;
             rdf:type [ <DirectedLineSegment> ] ?
          ) ;
          rdf:type [ <ArrowedLineSegment> ] ?
       )
    } OR @<DoubleArrowedLineSegment> OR @<SingleArrowedLineSegment>
)

<ArsenicAtom> CLOSED {
    (  $<ArsenicAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ArsenicAtom> ] ?
    )
}

<Article>  (
    CLOSED {
       (  $<Article_tes> (  &<Publication_tes> ;
             rdf:type [ <Publication> ] ?
          ) ;
          rdf:type [ <Article> ] ?
       )
    } OR @<PeerReviewedArticle>
)

<AspectRatio> CLOSED {
    (  $<AspectRatio_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <AspectRatio> ] ?
    )
}

<Assay> CLOSED {
    (  $<Assay_tes> (  &<Procedure_tes> ;
          rdf:type [ <Procedure> ] ?
       ) ;
       rdf:type [ <Assay> ] ?
    )
}

<AssertionalQualifier>  (
    CLOSED {
       (  $<AssertionalQualifier_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <AssertionalQualifier> ] ?
       )
    } OR @<Negative> OR @<Positive>
)

<AssertionOvopub> CLOSED {
    (  $<AssertionOvopub_tes> (  &<Ovopub_tes> ;
          rdf:type [ <Ovopub> ] ?
       ) ;
       rdf:type [ <AssertionOvopub> ] ?
    )
}

<Association>  (
    CLOSED {
       (  $<Association_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Association> ] ?
       )
    } OR @<Chemical-diseaseAssociation> OR @<Chemical-geneAssocation> OR @<Chemical-pathwayAssociation> OR
    @<DatabaseCross-reference> OR @<EpimerAssociation> OR @<Gene-diseaseAssociation> OR @<StatisticalAssociation>
)

<AstatineAtom> CLOSED {
    (  $<AstatineAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <AstatineAtom> ] ?
    )
}

<Atom>  (
    CLOSED {
       (  $<Atom_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ? ;
             <isCovalentlyConnectedTotransitive> @<Atom> ?
          ) ;
          rdf:type [ <Atom> ] ?
       )
    } OR @<ActiniumAtom> OR @<AluminiumAtom> OR @<AmericiumAtom> OR @<AntimonyAtom> OR @<ArgonAtom> OR @<ArsenicAtom> OR
    @<AstatineAtom> OR @<BariumAtom> OR @<BerkeliumAtom> OR @<BerylliumAtom> OR @<BismuthAtom> OR @<BohriumAtom> OR @<BoronAtom> OR
    @<BromineAtom> OR @<CadmiumAtom> OR @<CaesiumAtom> OR @<CalciumAtom> OR @<CaliforniumAtom> OR @<CarbonAtom> OR @<CeriumAtom> OR
    @<ChlorineAtom> OR @<ChromiumAtom> OR @<CobaltAtom> OR @<CoperniciumAtom> OR @<CopperAtom> OR @<CuriumAtom> OR
    @<DarmstadtiumAtom> OR @<DubniumAtom> OR @<DysprosiumAtom> OR @<EinsteiniumAtom> OR @<ErbiumAtom> OR @<EuropiumAtom> OR
    @<FermiumAtom> OR @<FluorineAtom> OR @<FranciumAtom> OR @<GadoliniumAtom> OR @<GalliumAtom> OR @<GermaniumAtom> OR @<GoldAtom>
    OR @<HafniumAtom> OR @<HassiumAtom> OR @<HeliumAtom> OR @<HolmiumAtom> OR @<HydrogenAtom> OR @<IndiumAtom> OR @<IodineAtom> OR
    @<IridiumAtom> OR @<IronAtom> OR @<KryptonAtom> OR @<LanthanumAtom> OR @<LawrenciumAtom> OR @<LeadAtom> OR @<LithiumAtom> OR
    @<LutetiumAtom> OR @<MagnesiumAtom> OR @<ManganeseAtom> OR @<MeitneriumAtom> OR @<MendeleviumAtom> OR @<MercuryAtom> OR
    @<MolybdemumAtom> OR @<NeodymiumAtom> OR @<NeonAtom> OR @<NeptuniumAtom> OR @<NickelAtom> OR @<NiobiumAtom> OR @<NitrogenAtom>
    OR @<NobeliumAtom> OR @<OsmiumAtom> OR @<OxygenAtom> OR @<PalladiumAtom> OR @<PhosphorusAtom> OR @<PlatinumAtom> OR
    @<PlutoniumAtom> OR @<PoloniumAtom> OR @<PotassiumAtom> OR @<PraseodymiumAtom> OR @<PromethiumAtom> OR @<ProtactiniumAtom> OR
    @<RadiumAtom> OR @<RadonAtom> OR @<RheniumAtom> OR @<RhodiumAtom> OR @<RoentgeniumAtom> OR @<RubidiumAtom> OR @<RutheniumAtom>
    OR @<RutherfordiumAtom> OR @<SamariumAtom> OR @<ScandiumAtom> OR @<SeaborgiumAtom> OR @<SeleniumAtom> OR @<SiliconAtom> OR
    @<SilverAtom> OR @<SodiumAtom> OR @<StrontiumAtom> OR @<SulfurAtom> OR @<TantalumAtom> OR @<TechnetiumAtom> OR @<TelluriumAtom>
    OR @<TerbiumAtom> OR @<ThalliumAtom> OR @<ThoriumAtom> OR @<ThuliumAtom> OR @<TinAtom> OR @<TitaniumAtom> OR @<TungstenAtom> OR
    @<UnunhexiumAtom> OR @<UnunoctiumAtom> OR @<UnunpentiumAtom> OR @<UnunquadiumAtom> OR @<UnunseptiumAtom> OR @<UnutriumAtom> OR
    @<UraniumAtom> OR @<VanadiumAtom> OR @<XenonAtom> OR @<YtterbiumAtom> OR @<YttriumAtom> OR @<ZincAtom> OR @<ZirconiumAtom>
)

<Attribute>  (
    CLOSED {
       (  $<Attribute_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ?
          ) ;
          rdf:type [ <Attribute> ] ?
       )
    } OR @<Quality> OR @<RealizableEntity>
)

<AudioRecording> CLOSED {
    (  $<AudioRecording_tes> (  &<Media_tes> ;
          rdf:type [ <Media> ] ?
       ) ;
       rdf:type [ <AudioRecording> ] ?
    )
}

<AuthorContributionSection> CLOSED {
    (  $<AuthorContributionSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <AuthorContributionSection> ] ?
    )
}

<AuthorList> CLOSED {
    (  $<AuthorList_tes> (  &<OrderedList_tes> ;
          rdf:type [ <OrderedList> ] ?
       ) ;
       rdf:type [ <AuthorList> ] ?
    )
}

<AuthorRole> CLOSED {
    (  $<AuthorRole_tes> (  &<PublishingRole_tes> ;
          rdf:type [ <PublishingRole> ] ?
       ) ;
       rdf:type [ <AuthorRole> ] ?
    )
}

<AuthorSection> CLOSED {
    (  $<AuthorSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <AuthorSection> ] ?
    )
}

<Awe> CLOSED {
    (  $<Awe_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Awe> ] ?
    )
}

<Axis>  (
    CLOSED {
       (  $<Axis_tes> (  &<DirectedLineSegment_tes> ;
             rdf:type [ <DirectedLineSegment> ] ?
          ) ;
          rdf:type [ <Axis> ] ?
       )
    } OR @<CategoryAxis> OR @<ValueAxis>
)

<Bar> CLOSED {
    (  $<Bar_tes> (  &<Rectangle_tes> ;
          rdf:type [ <Rectangle> ] ?
       ) ;
       rdf:type [ <Bar> ] ?
    )
}

<BarGraph>  (
    CLOSED {
       (  $<BarGraph_tes> (  &<StatisticalGraph_tes> ;
             rdf:type [ <StatisticalGraph> ] ?
          ) ;
          rdf:type [ <BarGraph> ] ?
       )
    } OR @<HorizontalBarGraph> OR @<StackedBarGraph> OR @<VerticalBarGraph>
)

<BariumAtom> CLOSED {
    (  $<BariumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BariumAtom> ] ?
    )
}

<Base> CLOSED {
    (  $<Base_tes> (  &<LiquidSolutionComponent_tes> ;
          rdf:type [ <LiquidSolutionComponent> ] ?
       ) ;
       rdf:type [ <Base> ] ?
    )
}

<BasePair> CLOSED {
    (  $<BasePair_tes> (  &<WeakSubmolecularComponent_tes> ;
          rdf:type [ <WeakSubmolecularComponent> ] ?
       ) ;
       rdf:type [ <BasePair> ] ?
    )
}

<BaseStack> CLOSED {
    (  $<BaseStack_tes> (  &<WeakSubmolecularComponent_tes> ;
          rdf:type [ <WeakSubmolecularComponent> ] ?
       ) ;
       rdf:type [ <BaseStack> ] ?
    )
}

<Behaviour>  (
    CLOSED {
       (  $<Behaviour_tes> (  &<Process_tes> ;
             rdf:type [ <Process> ] ?
          ) ;
          rdf:type [ <Behaviour> ] ?
       )
    } OR @<Emotion>
)

<Belief>  (
    CLOSED {
       (  $<Belief_tes> (  &<Proposition_tes> ;
             rdf:type [ <Proposition> ] ?
          ) ;
          rdf:type [ <Belief> ] ?
       )
    } OR @<Opinion>
)

<Bent> CLOSED {
    (  $<Bent_tes> (  &<Curvature_tes> ;
          rdf:type [ <Curvature> ] ?
       ) ;
       rdf:type [ <Bent> ] ?
    )
}

<BerkeliumAtom> CLOSED {
    (  $<BerkeliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BerkeliumAtom> ] ?
    )
}

<BerylliumAtom> CLOSED {
    (  $<BerylliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BerylliumAtom> ] ?
    )
}

<BetaStrand> CLOSED {
    (  $<BetaStrand_tes> (  &<AminoAcidPolymerSubmolecule_tes> ;
          rdf:type [ <AminoAcidPolymerSubmolecule> ] ?
       ) ;
       rdf:type [ <BetaStrand> ] ?
    )
}

<BibliographySection> CLOSED {
    (  $<BibliographySection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <BibliographySection> ] ?
    )
}

<Bill> CLOSED {
    (  $<Bill_tes> (  &<LegalDocument_tes> ;
          rdf:type [ <LegalDocument> ] ?
       ) ;
       rdf:type [ <Bill> ] ?
    )
}

<BinaryCompound>  (
    CLOSED {
       (  $<BinaryCompound_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <BinaryCompound> ] ?
       )
    } OR @<IonicCompound>
)

<BinaryScale> CLOSED {
    (  $<BinaryScale_tes> (  &<MeasurementScale_tes> ;
          rdf:type [ <MeasurementScale> ] ?
       ) ;
       rdf:type [ <BinaryScale> ] ?
    )
}

<BindingSite>  (
    CLOSED {
       (  $<BindingSite_tes> (  &<MolecularSite_tes> ;
             rdf:type [ <MolecularSite> ] ?
          ) ;
          rdf:type [ <BindingSite> ] ?
       )
    } OR @<AllostericSite>
)

<BiochemicalActivation> CLOSED {
    (  $<BiochemicalActivation_tes> (  &<RegulationOfCatalyticCapability_tes> ;
          rdf:type [ <RegulationOfCatalyticCapability> ] ?
       ) ;
       rdf:type [ <BiochemicalActivation> ] ?
    )
}

<BiochemicalInhibition> CLOSED {
    (  $<BiochemicalInhibition_tes> (  &<RegulationOfCatalyticCapability_tes> ;
          rdf:type [ <RegulationOfCatalyticCapability> ] ?
       ) ;
       rdf:type [ <BiochemicalInhibition> ] ?
    )
}

<BiochemicalPathway>  (
    CLOSED {
       (  $<BiochemicalPathway_tes> (  &<ChemicalReactionPathway_tes> ;
             rdf:type [ <ChemicalReactionPathway> ] ?
          ) ;
          rdf:type [ <BiochemicalPathway> ] ?
       )
    } OR @<MetabolicPathway> OR @<RegulatoryPathway>
)

<BiochemicalReaction> CLOSED {
    (  $<BiochemicalReaction_tes> (  &<CatalyzedReaction_tes> ;
          rdf:type [ <CatalyzedReaction> ] ?
       ) ;
       rdf:type [ <BiochemicalReaction> ] ?
    )
}

<BioinformaticData> CLOSED {
    (  $<BioinformaticData_tes> (  &<BiologicalData_tes> ;
          rdf:type [ <BiologicalData> ] ?
       ) ;
       rdf:type [ <BioinformaticData> ] ?
    )
}

<Biologic> CLOSED {
    (  $<Biologic_tes> (  &<PharmaceuticalDrug_tes> ;
          rdf:type [ <PharmaceuticalDrug> ] ?
       ) ;
       rdf:type [ <Biologic> ] ?
    )
}

<BiologicalData>  (
    CLOSED {
       (  $<BiologicalData_tes> (  &<ScientificData_tes> ;
             rdf:type [ <ScientificData> ] ?
          ) ;
          rdf:type [ <BiologicalData> ] ?
       )
    } OR @<BioinformaticData> OR @<GeneticData> OR @<MedicalData>
)

<BiologicalEntity>  (
    CLOSED {
       (  $<BiologicalEntity_tes> (  &<HeterogeneousSubstance_tes> ;
             rdf:type [ <HeterogeneousSubstance> ] ?
          ) ;
          rdf:type [ <BiologicalEntity> ] ?
       )
    } OR @<BiologicalFluid> OR @<Cell> OR @<CellLine> OR @<Genome> OR @<Organ> OR @<Organism> OR @<SubcellularEntity> OR @<Tissue>
)

<BiologicalFluid> CLOSED {
    (  $<BiologicalFluid_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <BiologicalFluid> ] ?
    )
}

<BiologicalQuality>  (
    CLOSED {
       (  $<BiologicalQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <BiologicalQuality> ] ?
       )
    } OR @<BiologicalSex> OR @<CellularQuality> OR @<Disease> OR @<Ethnicity> OR @<LifeStatus> OR @<ParentalTransmission> OR
    @<Phenotype> OR @<Race> OR @<Zygosity>
)

<BiologicalReproduction> CLOSED {
    (  $<BiologicalReproduction_tes> (  &<Reproducing_tes> ;
          rdf:type [ <Reproducing> ] ?
       ) ;
       rdf:type [ <BiologicalReproduction> ] ?
    )
}

<BiologicalSex>  (
    CLOSED {
       (  $<BiologicalSex_tes> (  &<BiologicalQuality_tes> ;
             rdf:type [ <BiologicalQuality> ] ?
          ) ;
          rdf:type [ <BiologicalSex> ] ?
       )
    } OR @<Female> OR @<Intersex> OR @<Male>
)

<BiomolecularStructureDescriptor>  (
    CLOSED {
       (  $<BiomolecularStructureDescriptor_tes> (  &<MolecularStructureDescriptor_tes> ;
             rdf:type [ <MolecularStructureDescriptor> ] ?
          ) ;
          rdf:type [ <BiomolecularStructureDescriptor> ] ?
       )
    } OR @<PrimaryStructureDescriptor> OR @<QuaternaryStructure> OR @<SecondaryStructureDescriptor> OR
    @<TertiaryStructureDescriptor>
)

<Biopolymer> CLOSED {
    (  $<Biopolymer_tes> (  &<OrganicPolymer_tes> ;
          rdf:type [ <OrganicPolymer> ] ?
       ) ;
       rdf:type [ <Biopolymer> ] ?
    )
}

<BiopolymerSequence>  (
    CLOSED {
       (  $<BiopolymerSequence_tes> (  &<PrimaryStructureDescriptor_tes> ;
             rdf:type [ <PrimaryStructureDescriptor> ] ?
          ) ;
          rdf:type [ <BiopolymerSequence> ] ?
       )
    } OR @<NucleicAcidSequence> OR @<ProteinSequence> OR @<SequenceAssembly>
)

<Biosynthesis>  (
    CLOSED {
       (  $<Biosynthesis_tes> (  &<ChemicalSynthesis_tes> ;
             rdf:type [ <ChemicalSynthesis> ] ?
          ) ;
          rdf:type [ <Biosynthesis> ] ?
       )
    } OR @<Transcription> OR @<Translation>
)

<Birthing> CLOSED {
    (  $<Birthing_tes> (  &<Creating_tes> ;
          rdf:type [ <Creating> ] ?
       ) ;
       rdf:type [ <Birthing> ] ?
    )
}

<BismuthAtom> CLOSED {
    (  $<BismuthAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BismuthAtom> ] ?
    )
}

<BlockHistogram> CLOSED {
    (  $<BlockHistogram_tes> (  &<Histogram_tes> ;
          rdf:type [ <Histogram> ] ?
       ) ;
       rdf:type [ <BlockHistogram> ] ?
    )
}

<Blog> CLOSED {
    (  $<Blog_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ?
       ) ;
       rdf:type [ <Blog> ] ?
    )
}

<BohriumAtom> CLOSED {
    (  $<BohriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BohriumAtom> ] ?
    )
}

<Boldness> CLOSED {
    (  $<Boldness_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Boldness> ] ?
    )
}

<Book>  (
    CLOSED {
       (  $<Book_tes> (  &<Publication_tes> ;
             rdf:type [ <Publication> ] ?
          ) ;
          rdf:type [ <Book> ] ?
       )
    } OR @<BookVolume> OR @<ConferenceProceedings>
)

<Booklet> CLOSED {
    (  $<Booklet_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <Booklet> ] ?
    )
}

<BookSection> CLOSED {
    (  $<BookSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <BookSection> ] ?
    )
}

<BookSeries> CLOSED {
    (  $<BookSeries_tes> (  &<CollectionOfDocuments_tes> ;
          rdf:type [ <CollectionOfDocuments> ] ?
       ) ;
       rdf:type [ <BookSeries> ] ?
    )
}

<BookVolume> CLOSED {
    (  $<BookVolume_tes> (  &<Book_tes> ;
          rdf:type [ <Book> ] ?
       ) ;
       rdf:type [ <BookVolume> ] ?
    )
}

<Boredom> CLOSED {
    (  $<Boredom_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Boredom> ] ?
    )
}

<BoronAtom> CLOSED {
    (  $<BoronAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BoronAtom> ] ?
    )
}

<BottomValueAxis> CLOSED {
    (  $<BottomValueAxis_tes> (  &<ValueAxis_tes> ;
          rdf:type [ <ValueAxis> ] ?
       ) ;
       rdf:type [ <BottomValueAxis> ] ?
    )
}

<Boxplot> CLOSED {
    (  $<Boxplot_tes> (  &<Line-barGraph_tes> ;
          rdf:type [ <Line-barGraph> ] ?
       ) ;
       rdf:type [ <Boxplot> ] ?
    )
}

<BrandName> CLOSED {
    (  $<BrandName_tes> (  &<Name_tes> ;
          rdf:type [ <Name> ] ?
       ) ;
       rdf:type [ <BrandName> ] ?
    )
}

<Brief> CLOSED {
    (  $<Brief_tes> (  &<LegalDocument_tes> ;
          rdf:type [ <LegalDocument> ] ?
       ) ;
       rdf:type [ <Brief> ] ?
    )
}

<BromineAtom> CLOSED {
    (  $<BromineAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <BromineAtom> ] ?
    )
}

<BrownianMotion> CLOSED {
    (  $<BrownianMotion_tes> (  &<Diffusion_tes> ;
          rdf:type [ <Diffusion> ] ?
       ) ;
       rdf:type [ <BrownianMotion> ] ?
    )
}

<BubbleChart> CLOSED {
    (  $<BubbleChart_tes> (  &<Chart_tes> ;
          rdf:type [ <Chart> ] ?
       ) ;
       rdf:type [ <BubbleChart> ] ?
    )
}

<Buffer> CLOSED {
    (  $<Buffer_tes> (  &<LiquidSolutionComponent_tes> ;
          rdf:type [ <LiquidSolutionComponent> ] ?
       ) ;
       rdf:type [ <Buffer> ] ?
    )
}

<BufferRole> CLOSED {
    (  $<BufferRole_tes> (  &<ChemicalSubstanceRole_tes> ;
          rdf:type [ <ChemicalSubstanceRole> ] ?
       ) ;
       rdf:type [ <BufferRole> ] ?
    )
}

<CadmiumAtom> CLOSED {
    (  $<CadmiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CadmiumAtom> ] ?
    )
}

<CaesiumAtom> CLOSED {
    (  $<CaesiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CaesiumAtom> ] ?
    )
}

<CalciumAtom> CLOSED {
    (  $<CalciumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CalciumAtom> ] ?
    )
}

<CaliforniumAtom> CLOSED {
    (  $<CaliforniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CaliforniumAtom> ] ?
    )
}

<Cancelled> CLOSED {
    (  $<Cancelled_tes> (  &<NotStarted_tes> ;
          rdf:type [ <NotStarted> ] ?
       ) ;
       rdf:type [ <Cancelled> ] ?
    )
}

<Capability>  (
    CLOSED {
       (  $<Capability_tes> (  &<RealizableEntity_tes> ;
             rdf:type [ <RealizableEntity> ] ? ;
             <isCapabilityOf> @<Entity> ?
          ) ;
          rdf:type [ <Capability> ] ?
       )
    } OR @<Disposition> OR @<Dysfunction> OR @<Function> OR @<ToBeInteractedWith> OR @<ToBreathe> OR @<ToInteractWith>
)

<Carbohydrate> CLOSED {
    (  $<Carbohydrate_tes> (  &<OrganicPolymer_tes> ;
          rdf:type [ <OrganicPolymer> ] ?
       ) ;
       rdf:type [ <Carbohydrate> ] ?
    )
}

<CarbohydrateResidue> CLOSED {
    (  $<CarbohydrateResidue_tes> (  &<OrganicSubmolecule_tes> ;
          rdf:type [ <OrganicSubmolecule> ] ?
       ) ;
       rdf:type [ <CarbohydrateResidue> ] ?
    )
}

<CarbonAllotrope>  (
    CLOSED {
       (  $<CarbonAllotrope_tes> (  &<Allotrope_tes> ;
             rdf:type [ <Allotrope> ] ?
          ) ;
          rdf:type [ <CarbonAllotrope> ] ?
       )
    } OR @<AggregatedCarbonNanorods> OR @<AmorphousCarbon> OR @<CarbonNanofoam> OR @<Chaoite> OR @<Diamond> OR @<Fullerene> OR
    @<GlassyCarbon> OR @<Graphite> OR @<Ionsdaleite>
)

<CarbonAtom> CLOSED {
    (  $<CarbonAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CarbonAtom> ] ?
    )
}

<CarbonNanofoam> CLOSED {
    (  $<CarbonNanofoam_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <CarbonNanofoam> ] ?
    )
}

<CartesianCoordinate>  (
    CLOSED {
       (  $<CartesianCoordinate_tes> (  &<Coordinate_tes> ;
             rdf:type [ <Coordinate> ] ?
          ) ;
          rdf:type [ <CartesianCoordinate> ] ?
       )
    } OR @<3DCartesianCoordinate> OR @<XCartesianCoordinate> OR @<YCartesianCoordinate> OR @<ZCartesianCoordinate>
)

<CartesianCoordinateAxis>  (
    CLOSED {
       (  $<CartesianCoordinateAxis_tes> (  &<ValueAxis_tes> ;
             rdf:type [ <ValueAxis> ] ?
          ) ;
          rdf:type [ <CartesianCoordinateAxis> ] ?
       )
    } OR @<X-axis> OR @<Y-axis> OR @<Z-axis>
)

<CartesianCoordinateSystem> CLOSED {
    (  $<CartesianCoordinateSystem_tes> (  &<CoordinateSystem_tes> ;
          rdf:type [ <CoordinateSystem> ] ?
       ) ;
       rdf:type [ <CartesianCoordinateSystem> ] ?
    )
}

<Catabolism> CLOSED {
    (  $<Catabolism_tes> (  &<Metabolism_tes> ;
          rdf:type [ <Metabolism> ] ?
       ) ;
       rdf:type [ <Catabolism> ] ?
    )
}

<Catalog> CLOSED {
    (  $<Catalog_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <Catalog> ] ?
    )
}

<Catalyst> CLOSED {
    (  $<Catalyst_tes> (  &<ChemicalSubstance_tes> ;
          rdf:type [ <ChemicalSubstance> ] ?
       ) ;
       rdf:type [ <Catalyst> ] ?
    )
}

<CatalyticRole> CLOSED {
    (  $<CatalyticRole_tes> (  &<RegulatorRole_tes> ;
          rdf:type [ <RegulatorRole> ] ?
       ) ;
       rdf:type [ <CatalyticRole> ] ?
    )
}

<CatalyzedReaction>  (
    CLOSED {
       (  $<CatalyzedReaction_tes> (  &<ChemicalReaction_tes> ;
             rdf:type [ <ChemicalReaction> ] ?
          ) ;
          rdf:type [ <CatalyzedReaction> ] ?
       )
    } OR @<BiochemicalReaction>
)

<Category> CLOSED {
    (  $<Category_tes> (  &<Concept_tes> ;
          rdf:type [ <Concept> ] ?
       ) ;
       rdf:type [ <Category> ] ?
    )
}

<CategoryAxis>  (
    CLOSED {
       (  $<CategoryAxis_tes> (  &<Axis_tes> ;
             rdf:type [ <Axis> ] ?
          ) ;
          rdf:type [ <CategoryAxis> ] ?
       )
    } OR @<PrimaryCategoryAxis> OR @<SecondaryCategoryAxis>
)

<Cation> CLOSED {
    (  $<Cation_tes> (  &<Ion_tes> ;
          rdf:type [ <Ion> ] ?
       ) ;
       rdf:type [ <Cation> ] ?
    )
}

<CationPiInteraction> CLOSED {
    (  $<CationPiInteraction_tes> (  &<IonicInteraction_tes> ;
          rdf:type [ <IonicInteraction> ] ?
       ) ;
       rdf:type [ <CationPiInteraction> ] ?
    )
}

<Cell>  (
    CLOSED {
       (  $<Cell_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ?
          ) ;
          rdf:type [ <Cell> ] ?
       )
    } OR @<UnicellularOrganism>
)

<Cellinformational>  (
    CLOSED {
       (  $<Cellinformational_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <Cellinformational> ] ?
       )
    } OR @<ReferencingCell> OR @<ReferentCell> OR @<UniqueCell>
)

<CellLine> CLOSED {
    (  $<CellLine_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <CellLine> ] ?
    )
}

<CellularOrganism>  (
    CLOSED {
       (  $<CellularOrganism_tes> (  &<Organism_tes> ;
             rdf:type [ <Organism> ] ?
          ) ;
          rdf:type [ <CellularOrganism> ] ?
       )
    } OR @<MulticellularOrganism>
)

<CellularPhoneNumber> CLOSED {
    (  $<CellularPhoneNumber_tes> (  &<TelephoneNumber_tes> ;
          rdf:type [ <TelephoneNumber> ] ?
       ) ;
       rdf:type [ <CellularPhoneNumber> ] ?
    )
}

<CellularQuality>  (
    CLOSED {
       (  $<CellularQuality_tes> (  &<BiologicalQuality_tes> ;
             rdf:type [ <BiologicalQuality> ] ?
          ) ;
          rdf:type [ <CellularQuality> ] ?
       )
    } OR @<Ploidy>
)

<CenterOfMass> CLOSED {
    (  $<CenterOfMass_tes> (  &<Position_tes> ;
          rdf:type [ <Position> ] ?
       ) ;
       rdf:type [ <CenterOfMass> ] ?
    )
}

<CentralityMeasure>  (
    CLOSED {
       (  $<CentralityMeasure_tes> (  &<Quantity_tes> ;
             rdf:type [ <Quantity> ] ?
          ) ;
          rdf:type [ <CentralityMeasure> ] ?
       )
    } OR @<Mean> OR @<Median> OR @<Mode>
)

<CentrifugationPellet> CLOSED {
    (  $<CentrifugationPellet_tes> (  &<CentrifugationSubstance_tes> ;
          rdf:type [ <CentrifugationSubstance> ] ?
       ) ;
       rdf:type [ <CentrifugationPellet> ] ?
    )
}

<CentrifugationSubstance>  (
    CLOSED {
       (  $<CentrifugationSubstance_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <CentrifugationSubstance> ] ?
       )
    } OR @<CentrifugationPellet> OR @<Supernatant>
)

<Century> CLOSED {
    (  $<Century_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Century> ] ?
    )
}

<CeriumAtom> CLOSED {
    (  $<CeriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CeriumAtom> ] ?
    )
}

<Chaoite> CLOSED {
    (  $<Chaoite_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <Chaoite> ] ?
    )
}

<Chapter> CLOSED {
    (  $<Chapter_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <Chapter> ] ?
    )
}

<Character> CLOSED {
    (  $<Character_tes> (  &<LanguageEntity_tes> ;
          rdf:type [ <LanguageEntity> ] ?
       ) ;
       rdf:type [ <Character> ] ?
    )
}

<CharacterPosition> CLOSED {
    (  $<CharacterPosition_tes> (  &<OrdinalPosition_tes> ;
          rdf:type [ <OrdinalPosition> ] ?
       ) ;
       rdf:type [ <CharacterPosition> ] ?
    )
}

<Charged>  (
    CLOSED {
       (  $<Charged_tes> (  &<ChargeQuality_tes> ;
             rdf:type [ <ChargeQuality> ] ?
          ) ;
          rdf:type [ <Charged> ] ?
       )
    } OR @<CompleteCharge> OR @<PartialCharge>
)

<ChargeQuality>  (
    CLOSED {
       (  $<ChargeQuality_tes> (  &<ChemicalQuality_tes> ;
             rdf:type [ <ChemicalQuality> ] ?
          ) ;
          rdf:type [ <ChargeQuality> ] ?
       )
    } OR @<Charged> OR @<Uncharged>
)

<Chart>  (
    CLOSED {
       (  $<Chart_tes> (  &<Figure_tes> ;
             rdf:type [ <Figure> ] ?
          ) ;
          rdf:type [ <Chart> ] ?
       )
    } OR @<BubbleChart> OR @<Flowchart> OR @<GanttChart> OR @<Heatmap> OR @<Histogram> OR @<Map> OR @<MatrixChart> OR
    @<MereologicalChart> OR @<NetworkDiagram> OR @<StatisticalGraph> OR @<TextualChart> OR @<VennDiagram>
)

<Chemical-diseaseAssociation> CLOSED {
    (  $<Chemical-diseaseAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ?
       ) ;
       rdf:type [ <Chemical-diseaseAssociation> ] ?
    )
}

<Chemical-geneAssocation> CLOSED {
    (  $<Chemical-geneAssocation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ?
       ) ;
       rdf:type [ <Chemical-geneAssocation> ] ?
    )
}

<Chemical-pathwayAssociation> CLOSED {
    (  $<Chemical-pathwayAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ?
       ) ;
       rdf:type [ <Chemical-pathwayAssociation> ] ?
    )
}

<ChemicalComplex>  (
    CLOSED {
       (  $<ChemicalComplex_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <ChemicalComplex> ] ?
       )
    } OR @<MolecularComplex>
)

<ChemicalData> CLOSED {
    (  $<ChemicalData_tes> (  &<ScientificData_tes> ;
          rdf:type [ <ScientificData> ] ?
       ) ;
       rdf:type [ <ChemicalData> ] ?
    )
}

<ChemicalDegradationPathway> CLOSED {
    (  $<ChemicalDegradationPathway_tes> (  &<ChemicalReactionPathway_tes> ;
          rdf:type [ <ChemicalReactionPathway> ] ?
       ) ;
       rdf:type [ <ChemicalDegradationPathway> ] ?
    )
}

<ChemicalDestruction>  (
    CLOSED {
       (  $<ChemicalDestruction_tes> (  &<Destroying_tes> ;
             rdf:type [ <Destroying> ] ?
          ) ;
          rdf:type [ <ChemicalDestruction> ] ?
       )
    } OR @<DecreasedChemicalDestruction> OR @<IncreasedChemicalDestruction> OR @<MolecularComplexDissociation>
)

<ChemicalEffect>  (
    CLOSED {
       (  $<ChemicalEffect_tes> (  &<ChemicalInteraction_tes> ;
             rdf:type [ <ChemicalInteraction> ] ?
          ) ;
          rdf:type [ <ChemicalEffect> ] ?
       )
    } OR @<DrugDrugInteraction>
)

<ChemicalElement>  (
    CLOSED {
       (  $<ChemicalElement_tes> (  &<HomogeneousSubstance_tes> ;
             rdf:type [ <HomogeneousSubstance> ] ?
          ) ;
          rdf:type [ <ChemicalElement> ] ?
       )
    } OR @<Allotrope>
)

<ChemicalEntity>  (
    CLOSED {
       (  $<ChemicalEntity_tes> (  &<MaterialEntity_tes> ;
             rdf:type [ <MaterialEntity> ] ?
          ) ;
          rdf:type [ <ChemicalEntity> ] ?
       )
    } OR @<Atom> OR @<ChemicalSubstance> OR @<Ion> OR @<Molecule> OR @<SubmolecularEntity>
)

<ChemicalEntityRole>  (
    CLOSED {
       (  $<ChemicalEntityRole_tes> (  &<ProcessualRole_tes> ;
             rdf:type [ <ProcessualRole> ] ?
          ) ;
          rdf:type [ <ChemicalEntityRole> ] ?
       )
    } OR @<ChemicalSubstanceRole> OR @<MolecularEntityRole>
)

<ChemicalExposure> CLOSED {
    (  $<ChemicalExposure_tes> (  &<ChemicalInteraction_tes> ;
          rdf:type [ <ChemicalInteraction> ] ?
       ) ;
       rdf:type [ <ChemicalExposure> ] ?
    )
}

<ChemicalFunctionalGroup>  (
    CLOSED {
       (  $<ChemicalFunctionalGroup_tes> (  &<Submolecule_tes> ;
             rdf:type [ <Submolecule> ] ?
          ) ;
          rdf:type [ <ChemicalFunctionalGroup> ] ?
       )
    } OR @<Ring>
)

<ChemicalIdentifier>  (
    CLOSED {
       (  $<ChemicalIdentifier_tes> (  &<PhysicalEntityIdentifier_tes> ;
             rdf:type [ <PhysicalEntityIdentifier> ] ?
          ) ;
          rdf:type [ <ChemicalIdentifier> ] ?
       )
    } OR @<MolecularIdentifier>
)

<ChemicalInteraction>  (
    CLOSED {
       (  $<ChemicalInteraction_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <ChemicalInteraction> ] ?
       )
    } OR @<ChemicalEffect> OR @<ChemicalExposure> OR @<ChemicalReaction> OR @<Metabolism>
)

<ChemicalNotation>  (
    CLOSED {
       (  $<ChemicalNotation_tes> (  &<Notation_tes> ;
             rdf:type [ <Notation> ] ?
          ) ;
          rdf:type [ <ChemicalNotation> ] ?
       )
    } OR @<InCHINotation>
)

<ChemicalQuality>  (
    CLOSED {
       (  $<ChemicalQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <ChemicalQuality> ] ?
       )
    } OR @<ChargeQuality> OR @<CodingFrameOffset> OR @<MolecularOrbital> OR @<MolecularStructureDescriptor> OR @<PolarQuality> OR
    @<Toxicity>
)

<ChemicalReaction>  (
    CLOSED {
       (  $<ChemicalReaction_tes> (  &<ChemicalInteraction_tes> ;
             rdf:type [ <ChemicalInteraction> ] ?
          ) ;
          rdf:type [ <ChemicalReaction> ] ?
       )
    } OR @<Acid-baseReaction> OR @<CatalyzedReaction> OR @<InorganicReaction> OR @<IsomerizationReaction> OR
    @<MolecularModification> OR @<OrganicReaction> OR @<RedoxReaction>
)

<ChemicalReactionPathway>  (
    CLOSED {
       (  $<ChemicalReactionPathway_tes> (  &<Pathway_tes> ;
             rdf:type [ <Pathway> ] ?
          ) ;
          rdf:type [ <ChemicalReactionPathway> ] ?
       )
    } OR @<BiochemicalPathway> OR @<ChemicalDegradationPathway> OR @<ChemicalSynthesisPathway>
)

<ChemicalSalt>  (
    CLOSED {
       (  $<ChemicalSalt_tes> (  &<HeterogeneousSubstance_tes> ;
             rdf:type [ <HeterogeneousSubstance> ] ?
          ) ;
          rdf:type [ <ChemicalSalt> ] ?
       )
    } OR @<StrongChemicalSalt> OR @<WeakChemicalSalt>
)

<ChemicalStructure>  (
    CLOSED {
       (  $<ChemicalStructure_tes> (  &<Structure_tes> ;
             rdf:type [ <Structure> ] ?
          ) ;
          rdf:type [ <ChemicalStructure> ] ?
       )
    } OR @<ElectronicStructure> OR @<MolecularStructure>
)

<ChemicalSubstance>  (
    CLOSED {
       (  $<ChemicalSubstance_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ?
          ) ;
          rdf:type [ <ChemicalSubstance> ] ?
       )
    } OR @<Analyte> OR @<BinaryCompound> OR @<Catalyst> OR @<CentrifugationSubstance> OR @<ChemicalComplex> OR @<Drug> OR
    @<HeterogeneousSubstance> OR @<HomogeneousSubstance> OR @<Ingredient>
)

<ChemicalSubstanceRole>  (
    CLOSED {
       (  $<ChemicalSubstanceRole_tes> (  &<ChemicalEntityRole_tes> ;
             rdf:type [ <ChemicalEntityRole> ] ?
          ) ;
          rdf:type [ <ChemicalSubstanceRole> ] ?
       )
    } OR @<BufferRole> OR @<HostRole> OR @<ReagentRole> OR @<ToxicRole>
)

<ChemicalSynthesis>  (
    CLOSED {
       (  $<ChemicalSynthesis_tes> (  &<Creating_tes> ;
             rdf:type [ <Creating> ] ?
          ) ;
          rdf:type [ <ChemicalSynthesis> ] ?
       )
    } OR @<Biosynthesis> OR @<MolecularComplexFormation>
)

<ChemicalSynthesisPathway> CLOSED {
    (  $<ChemicalSynthesisPathway_tes> (  &<ChemicalReactionPathway_tes> ;
          rdf:type [ <ChemicalReactionPathway> ] ?
       ) ;
       rdf:type [ <ChemicalSynthesisPathway> ] ?
    )
}

<ChemicalTransport>  (
    CLOSED {
       (  $<ChemicalTransport_tes> (  &<Transporting_tes> ;
             rdf:type [ <Transporting> ] ?
          ) ;
          rdf:type [ <ChemicalTransport> ] ?
       )
    } OR @<MembraneTransport>
)

<ChlorineAtom> CLOSED {
    (  $<ChlorineAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ChlorineAtom> ] ?
    )
}

<ChromiumAtom> CLOSED {
    (  $<ChromiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ChromiumAtom> ] ?
    )
}

<Chromosome> CLOSED {
    (  $<Chromosome_tes> (  &<MolecularComplex_tes> ;
          rdf:type [ <MolecularComplex> ] ?
       ) ;
       rdf:type [ <Chromosome> ] ?
    )
}

<CircularlyHelical> CLOSED {
    (  $<CircularlyHelical_tes> (  &<Helicity_tes> ;
          rdf:type [ <Helicity> ] ?
       ) ;
       rdf:type [ <CircularlyHelical> ] ?
    )
}

<Circumference> CLOSED {
    (  $<Circumference_tes> (  &<LengthOfPerimeter_tes> ;
          rdf:type [ <LengthOfPerimeter> ] ?
       ) ;
       rdf:type [ <Circumference> ] ?
    )
}

<CisRegulatoryElement> CLOSED {
    (  $<CisRegulatoryElement_tes> (  &<NucleicAcidPart_tes> ;
          rdf:type [ <NucleicAcidPart> ] ?
       ) ;
       rdf:type [ <CisRegulatoryElement> ] ?
    )
}

<Citation> CLOSED {
    (  $<Citation_tes> (  &<DocumentComponent_tes> ;
          rdf:type [ <DocumentComponent> ] ?
       ) ;
       rdf:type [ <Citation> ] ?
    )
}

<City> CLOSED {
    (  $<City_tes> (  &<GeopoliticalRegion_tes> ;
          rdf:type [ <GeopoliticalRegion> ] ?
       ) ;
       rdf:type [ <City> ] ?
    )
}

<Class> CLOSED {
    (  $<Class_tes> (  &<Set_tes> ;
          rdf:type [ <Set> ] ?
       ) ;
       rdf:type [ <Class> ] ?
    )
}

<Clause> CLOSED {
    (  $<Clause_tes> (  &<Sentence_tes> ;
          rdf:type [ <Sentence> ] ?
       ) ;
       rdf:type [ <Clause> ] ?
    )
}

<ClinicalTrial> CLOSED {
    (  $<ClinicalTrial_tes> (  &<InterventionStudy_tes> ;
          rdf:type [ <InterventionStudy> ] ?
       ) ;
       rdf:type [ <ClinicalTrial> ] ?
    )
}

<ClosedInterval> CLOSED {
    (  $<ClosedInterval_tes> (  &<LeftClosedInterval_tes> ;
          rdf:type [ <LeftClosedInterval> ] ?
       ) ;
       rdf:type [ <ClosedInterval> ] ?
    )
}

<Co-enzymeRole>  (
    CLOSED {
       (  $<Co-enzymeRole_tes> (  &<SubstrateRole_tes> ;
             rdf:type [ <SubstrateRole> ] ?
          ) ;
          rdf:type [ <Co-enzymeRole> ] ?
       )
    } OR @<Co-substrateRole> OR @<ProstheticGroupRole>
)

<Co-substrateRole> CLOSED {
    (  $<Co-substrateRole_tes> (  &<Co-enzymeRole_tes> ;
          rdf:type [ <Co-enzymeRole> ] ?
       ) ;
       rdf:type [ <Co-substrateRole> ] ?
    )
}

<CobaltAtom> CLOSED {
    (  $<CobaltAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CobaltAtom> ] ?
    )
}

<CodingFrameOffset> CLOSED {
    (  $<CodingFrameOffset_tes> (  &<ChemicalQuality_tes> ;
          rdf:type [ <ChemicalQuality> ] ?
       ) ;
       rdf:type [ <CodingFrameOffset> ] ?
    )
}

<CodingSequence> CLOSED {
    (  $<CodingSequence_tes> (  &<NucleicAcidSequence_tes> ;
          rdf:type [ <NucleicAcidSequence> ] ?
       ) ;
       rdf:type [ <CodingSequence> ] ?
    )
}

<CofactorRole> CLOSED {
    (  $<CofactorRole_tes> (  &<MolecularEntityRole_tes> ;
          rdf:type [ <MolecularEntityRole> ] ?
       ) ;
       rdf:type [ <CofactorRole> ] ?
    )
}

<Collection>  (
    CLOSED {
       (  $<Collection_tes> (  &<Set_tes> ;
             rdf:type [ <Set> ] ? ;
             <hasMember> @<Entity> ?
          ) ;
          rdf:type [ <Collection> ] ?
       )
    } OR @<ACollectionOfDuplicates> OR @<ACollectionOfReplicates> OR @<Catalog> OR @<CollectionOf3dMolecularStructureModels> OR
    @<CollectionOfDocuments> OR @<CollectionOfPoints> OR @<ProteinFamily> OR @<SequenceAlignment> OR @<UnigeneCluster>
)

<CollectionItem>  (
    CLOSED {
       (  $<CollectionItem_tes> (  &<SetItem_tes> ;
             rdf:type [ <SetItem> ] ?
          ) ;
          rdf:type [ <CollectionItem> ] ?
       )
    } OR @<Duplicate> OR @<Replicate>
)

<CollectionOf3dMolecularStructureModels> CLOSED {
    (  $<CollectionOf3dMolecularStructureModels_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <CollectionOf3dMolecularStructureModels> ] ?
    )
}

<CollectionOfDocuments>  (
    CLOSED {
       (  $<CollectionOfDocuments_tes> (  &<Collection_tes> ;
             rdf:type [ <Collection> ] ?
          ) ;
          rdf:type [ <CollectionOfDocuments> ] ?
       )
    } OR @<BookSeries> OR @<Periodical> OR @<Website>
)

<CollectionOfPoints> CLOSED {
    (  $<CollectionOfPoints_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <CollectionOfPoints> ] ?
    )
}

<CollectionOvopub> CLOSED {
    (  $<CollectionOvopub_tes> (  &<Ovopub_tes> ;
          rdf:type [ <Ovopub> ] ?
       ) ;
       rdf:type [ <CollectionOvopub> ] ?
    )
}

<Collective>  (
    CLOSED {
       (  $<Collective_tes> (  &<SocialStructure_tes> ;
             rdf:type [ <SocialStructure> ] ?
          ) ;
          rdf:type [ <Collective> ] ?
       )
    } OR @<Community> OR @<Family> OR @<Organization> OR @<Population> OR @<StudyGroup>
)

<Column>  (
    CLOSED {
       (  $<Column_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <Column> ] ?
       )
    } OR @<DatabaseColumn>
)

<Comment> CLOSED {
    (  $<Comment_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Comment> ] ?
    )
}

<CommonName> CLOSED {
    (  $<CommonName_tes> (  &<Name_tes> ;
          rdf:type [ <Name> ] ?
       ) ;
       rdf:type [ <CommonName> ] ?
    )
}

<Communicating>  (
    CLOSED {
       (  $<Communicating_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <Communicating> ] ?
       )
    } OR @<Conversing> OR @<Gesturing> OR @<Speech>
)

<CommunicationDevice>  (
    CLOSED {
       (  $<CommunicationDevice_tes> (  &<Device_tes> ;
             rdf:type [ <Device> ] ?
          ) ;
          rdf:type [ <CommunicationDevice> ] ?
       )
    } OR @<RadioReceiver> OR @<Telephone>
)

<Community> CLOSED {
    (  $<Community_tes> (  &<Collective_tes> ;
          rdf:type [ <Collective> ] ?
       ) ;
       rdf:type [ <Community> ] ?
    )
}

<ComparativeRole>  (
    CLOSED {
       (  $<ComparativeRole_tes> (  &<AbstractRole_tes> ;
             rdf:type [ <AbstractRole> ] ?
          ) ;
          rdf:type [ <ComparativeRole> ] ?
       )
    } OR @<DuplicateRole> OR @<ReplicateRole> OR @<VariantRole>
)

<Comparing> CLOSED {
    (  $<Comparing_tes> (  &<Interacting_tes> ;
          rdf:type [ <Interacting> ] ?
       ) ;
       rdf:type [ <Comparing> ] ?
    )
}

<CompleteCharge>  (
    CLOSED {
       (  $<CompleteCharge_tes> (  &<Charged_tes> ;
             rdf:type [ <Charged> ] ?
          ) ;
          rdf:type [ <CompleteCharge> ] ?
       )
    } OR @<NegativeCharge> OR @<PositiveCharge>
)

<Completed> CLOSED {
    (  $<Completed_tes> (  &<ProcessStatus_tes> ;
          rdf:type [ <ProcessStatus> ] ?
       ) ;
       rdf:type [ <Completed> ] ?
    )
}

<CompletelyQuantifier> CLOSED {
    (  $<CompletelyQuantifier_tes> (  &<QuantityModifier_tes> ;
          rdf:type [ <QuantityModifier> ] ?
       ) ;
       rdf:type [ <CompletelyQuantifier> ] ?
    )
}

<CompositionalQuality>  (
    CLOSED {
       (  $<CompositionalQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <CompositionalQuality> ] ?
       )
    } OR @<Heterogeneous> OR @<Homogeneous>
)

<ComputationalEntity>  (
    CLOSED {
       (  $<ComputationalEntity_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <ComputationalEntity> ] ?
       )
    } OR @<Cellinformational> OR @<Column> OR @<DataItem> OR @<Database> OR @<DatabaseEntry> OR @<DatabaseKey> OR @<DatabaseTable>
    OR @<Namespace> OR @<Ovopub> OR @<Row> OR @<SoftwareEntity> OR @<UserAccount>
)

<Concentration> CLOSED {
    (  $<Concentration_tes> (  &<3DExtentQuantity_tes> ;
          rdf:type [ <3DExtentQuantity> ] ?
       ) ;
       rdf:type [ <Concentration> ] ?
    )
}

<Concept>  (
    CLOSED {
       (  $<Concept_tes> (  &<Term_tes> ;
             rdf:type [ <Term> ] ?
          ) ;
          rdf:type [ <Concept> ] ?
       )
    } OR @<Category>
)

<Conclusion>  (
    CLOSED {
       (  $<Conclusion_tes> (  &<Proposition_tes> ;
             rdf:type [ <Proposition> ] ?
          ) ;
          rdf:type [ <Conclusion> ] ?
       )
    } OR @<Diagnosis>
)

<ConferenceProceedings> CLOSED {
    (  $<ConferenceProceedings_tes> (  &<Book_tes> ;
          rdf:type [ <Book> ] ?
       ) ;
       rdf:type [ <ConferenceProceedings> ] ?
    )
}

<Conjunctionand> CLOSED {
    (  $<Conjunctionand_tes> (  &<LogicalOperator_tes> ;
          rdf:type [ <LogicalOperator> ] ?
       ) ;
       rdf:type [ <Conjunctionand> ] ?
    )
}

<Consensus> CLOSED {
    (  $<Consensus_tes> (  &<Agreement_tes> ;
          rdf:type [ <Agreement> ] ?
       ) ;
       rdf:type [ <Consensus> ] ?
    )
}

<Consonant> CLOSED {
    (  $<Consonant_tes> (  &<VerbalLanguageEntity_tes> ;
          rdf:type [ <VerbalLanguageEntity> ] ?
       ) ;
       rdf:type [ <Consonant> ] ?
    )
}

<ContainmentQuality>  (
    CLOSED {
       (  $<ContainmentQuality_tes> (  &<MereologicalQuality_tes> ;
             rdf:type [ <MereologicalQuality> ] ?
          ) ;
          rdf:type [ <ContainmentQuality> ] ?
       )
    } OR @<Empty> OR @<Full>
)

<Contempt> CLOSED {
    (  $<Contempt_tes> (  &<Disgust_tes> ;
          rdf:type [ <Disgust> ] ?
       ) ;
       rdf:type [ <Contempt> ] ?
    )
}

<Contentment>  (
    CLOSED {
       (  $<Contentment_tes> (  &<Happiness_tes> ;
             rdf:type [ <Happiness> ] ?
          ) ;
          rdf:type [ <Contentment> ] ?
       )
    } OR @<Satisfaction>
)

<ControlGroup> CLOSED {
    (  $<ControlGroup_tes> (  &<StudyGroup_tes> ;
          rdf:type [ <StudyGroup> ] ?
       ) ;
       rdf:type [ <ControlGroup> ] ?
    )
}

<ControlledObservationalCohortStudy> CLOSED {
    (  $<ControlledObservationalCohortStudy_tes> (  &<ObservationalStudy_tes> ;
          rdf:type [ <ObservationalStudy> ] ?
       ) ;
       rdf:type [ <ControlledObservationalCohortStudy> ] ?
    )
}

<ControlRole> CLOSED {
    (  $<ControlRole_tes> (  &<EvaluationRole_tes> ;
          rdf:type [ <EvaluationRole> ] ?
       ) ;
       rdf:type [ <ControlRole> ] ?
    )
}

<ControlVariable> CLOSED {
    (  $<ControlVariable_tes> (  &<Variable_tes> ;
          rdf:type [ <Variable> ] ?
       ) ;
       rdf:type [ <ControlVariable> ] ?
    )
}

<Conversing> CLOSED {
    (  $<Conversing_tes> (  &<Communicating_tes> ;
          rdf:type [ <Communicating> ] ?
       ) ;
       rdf:type [ <Conversing> ] ?
    )
}

<Coordinate>  (
    CLOSED {
       (  $<Coordinate_tes> (  &<Position_tes> ;
             rdf:type [ <Position> ] ?
          ) ;
          rdf:type [ <Coordinate> ] ?
       )
    } OR @<CartesianCoordinate> OR @<PolarCoordinate>
)

<CoordinateSystem>  (
    CLOSED {
       (  $<CoordinateSystem_tes> (  &<SpatialSpecification_tes> ;
             rdf:type [ <SpatialSpecification> ] ?
          ) ;
          rdf:type [ <CoordinateSystem> ] ?
       )
    } OR @<CartesianCoordinateSystem> OR @<CylindricalCoordinateSystem> OR @<PolarCoordinateSystem> OR @<SphericalCoordinateSystem>
)

<CoperniciumAtom> CLOSED {
    (  $<CoperniciumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CoperniciumAtom> ] ?
    )
}

<CopperAtom> CLOSED {
    (  $<CopperAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CopperAtom> ] ?
    )
}

<CopyNumberVariation> CLOSED {
    (  $<CopyNumberVariation_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <CopyNumberVariation> ] ?
    )
}

<CopyrightSection> CLOSED {
    (  $<CopyrightSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <CopyrightSection> ] ?
    )
}

<Corporation> CLOSED {
    (  $<Corporation_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <Corporation> ] ?
    )
}

<Correlation> CLOSED {
    (  $<Correlation_tes> (  &<StatisticalAssociation_tes> ;
          rdf:type [ <StatisticalAssociation> ] ?
       ) ;
       rdf:type [ <Correlation> ] ?
    )
}

<CorrespondenceSection> CLOSED {
    (  $<CorrespondenceSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <CorrespondenceSection> ] ?
    )
}

<Count>  (
    CLOSED {
       (  $<Count_tes> (  &<DimensionlessQuantity_tes> ;
             rdf:type [ <DimensionlessQuantity> ] ?
          ) ;
          rdf:type [ <Count> ] ?
       )
    } OR @<CopyNumberVariation> OR @<DifferenceInNumberOfObjectsProduced> OR @<EditionNumber> OR @<GenerationNumber> OR
    @<MemberCount> OR @<NumberOfObjectsConsumed> OR @<NumberOfObjectsProduced> OR @<PageNumber> OR @<PageTotal> OR @<VolumeNumber>
)

<Country> CLOSED {
    (  $<Country_tes> (  &<GeopoliticalRegion_tes> ;
          rdf:type [ <GeopoliticalRegion> ] ?
       ) ;
       rdf:type [ <Country> ] ?
    )
}

<CovalentBond>  (
    CLOSED {
       (  $<CovalentBond_tes> (  &<StrongSubmolecularComponent_tes> ;
             rdf:type [ <StrongSubmolecularComponent> ] ?
          ) ;
          rdf:type [ <CovalentBond> ] ?
       )
    } OR @<AromaticBond> OR @<DoubleBond> OR @<SingleBond> OR @<TripleBond>
)

<Creating>  (
    CLOSED {
       (  $<Creating_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <Creating> ] ?
       )
    } OR @<Birthing> OR @<ChemicalSynthesis> OR @<Evolving> OR @<Learning> OR @<Planning> OR @<Predicting> OR @<Reasoning> OR
    @<Reproducing>
)

<Criterion>  (
    CLOSED {
       (  $<Criterion_tes> (  &<DesignSpecification_tes> ;
             rdf:type [ <DesignSpecification> ] ?
          ) ;
          rdf:type [ <Criterion> ] ?
       )
    } OR @<ExclusionCriterion> OR @<InclusionCriterion>
)

<CrystalStructure> CLOSED {
    (  $<CrystalStructure_tes> (  &<MolecularStructure_tes> ;
          rdf:type [ <MolecularStructure> ] ?
       ) ;
       rdf:type [ <CrystalStructure> ] ?
    )
}

<Curiosity> CLOSED {
    (  $<Curiosity_tes> (  &<Desire_tes> ;
          rdf:type [ <Desire> ] ?
       ) ;
       rdf:type [ <Curiosity> ] ?
    )
}

<CuriumAtom> CLOSED {
    (  $<CuriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <CuriumAtom> ] ?
    )
}

<Curvature>  (
    CLOSED {
       (  $<Curvature_tes> (  &<Shape_tes> ;
             rdf:type [ <Shape> ] ?
          ) ;
          rdf:type [ <Curvature> ] ?
       )
    } OR @<Bent> OR @<Curved> OR @<Straight>
)

<Curve>  (
    CLOSED {
       (  $<Curve_tes> (  &<GeometricEntity_tes> ;
             rdf:type [ <GeometricEntity> ] ?
          ) ;
          rdf:type [ <Curve> ] ?
       )
    } OR @<Arc> OR @<CurveSegment> OR @<Line>
)

<Curved> CLOSED {
    (  $<Curved_tes> (  &<Curvature_tes> ;
          rdf:type [ <Curvature> ] ?
       ) ;
       rdf:type [ <Curved> ] ?
    )
}

<CurveSegment> CLOSED {
    (  $<CurveSegment_tes> (  &<Curve_tes> ;
          rdf:type [ <Curve> ] ?
       ) ;
       rdf:type [ <CurveSegment> ] ?
    )
}

<CylindricalCoordinateSystem> CLOSED {
    (  $<CylindricalCoordinateSystem_tes> (  &<CoordinateSystem_tes> ;
          rdf:type [ <CoordinateSystem> ] ?
       ) ;
       rdf:type [ <CylindricalCoordinateSystem> ] ?
    )
}

<DarmstadtiumAtom> CLOSED {
    (  $<DarmstadtiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <DarmstadtiumAtom> ] ?
    )
}

<DataAnalysis> CLOSED {
    (  $<DataAnalysis_tes> (  &<InformationProcessing_tes> ;
          rdf:type [ <InformationProcessing> ] ?
       ) ;
       rdf:type [ <DataAnalysis> ] ?
    )
}

<Database> CLOSED {
    (  $<Database_tes> (  &<ComputationalEntity_tes> ;
          rdf:type [ <ComputationalEntity> ] ?
       ) ;
       rdf:type [ <Database> ] ?
    )
}

<DatabaseColumn> CLOSED {
    (  $<DatabaseColumn_tes> (  &<Column_tes> ;
          rdf:type [ <Column> ] ?
       ) ;
       rdf:type [ <DatabaseColumn> ] ?
    )
}

<DatabaseCross-reference>  (
    CLOSED {
       (  $<DatabaseCross-reference_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ?
          ) ;
          rdf:type [ <DatabaseCross-reference> ] ?
       )
    } OR @<ExactCross-reference>
)

<DatabaseEntry> CLOSED {
    (  $<DatabaseEntry_tes> (  &<ComputationalEntity_tes> ;
          rdf:type [ <ComputationalEntity> ] ?
       ) ;
       rdf:type [ <DatabaseEntry> ] ?
    )
}

<DatabaseKey>  (
    CLOSED {
       (  $<DatabaseKey_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <DatabaseKey> ] ?
       )
    } OR @<ForeignDatabaseKey> OR @<PrimaryDatabaseKey>
)

<DatabaseRow> CLOSED {
    (  $<DatabaseRow_tes> (  &<Row_tes> ;
          rdf:type [ <Row> ] ?
       ) ;
       rdf:type [ <DatabaseRow> ] ?
    )
}

<DatabaseTable> CLOSED {
    (  $<DatabaseTable_tes> (  &<ComputationalEntity_tes> ;
          rdf:type [ <ComputationalEntity> ] ?
       ) ;
       rdf:type [ <DatabaseTable> ] ?
    )
}

<DataCollection> CLOSED {
    (  $<DataCollection_tes> (  &<InformationProcessing_tes> ;
          rdf:type [ <InformationProcessing> ] ?
       ) ;
       rdf:type [ <DataCollection> ] ?
    )
}

<DataCollectionDevice>  (
    CLOSED {
       (  $<DataCollectionDevice_tes> (  &<Device_tes> ;
             rdf:type [ <Device> ] ?
          ) ;
          rdf:type [ <DataCollectionDevice> ] ?
       )
    } OR @<MassSpectrometer> OR @<MicroarrayDevice> OR @<NmrDevice>
)

<DataItem>  (
    CLOSED {
       (  $<DataItem_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <DataItem> ] ?
       )
    } OR @<Dataset> OR @<Metadata> OR @<ScientificData>
)

<DataPoint>  (
    CLOSED {
       (  $<DataPoint_tes> (  &<Point_tes> ;
             rdf:type [ <Point> ] ?
          ) ;
          rdf:type [ <DataPoint> ] ?
       )
    } OR @<StationaryPoint>
)

<DataSeries> CLOSED {
    (  $<DataSeries_tes> (  &<List_tes> ;
          rdf:type [ <List> ] ?
       ) ;
       rdf:type [ <DataSeries> ] ?
    )
}

<Dataset>  (
    CLOSED {
       (  $<Dataset_tes> (  &<DataItem_tes> ;
             rdf:type [ <DataItem> ] ? ;
             <hasDataItem> @<Entity> ?
          ) ;
          rdf:type [ <Dataset> ] ?
       )
    } OR @<VersionedDataset>
)

<DataStorageDevice>  (
    CLOSED {
       (  $<DataStorageDevice_tes> (  &<Device_tes> ;
             rdf:type [ <Device> ] ?
          ) ;
          rdf:type [ <DataStorageDevice> ] ?
       )
    } OR @<HardDiskDrive>
)

<DataTransformation>  (
    CLOSED {
       (  $<DataTransformation_tes> (  &<InformationProcessing_tes> ;
             rdf:type [ <InformationProcessing> ] ?
          ) ;
          rdf:type [ <DataTransformation> ] ?
       )
    } OR @<ParameterizedDataTransformation>
)

<DateOfDatabaseSubmission> CLOSED {
    (  $<DateOfDatabaseSubmission_tes> (  &<TimeInstant_tes> ;
          rdf:type [ <TimeInstant> ] ?
       ) ;
       rdf:type [ <DateOfDatabaseSubmission> ] ?
    )
}

<DateOfIssue> CLOSED {
    (  $<DateOfIssue_tes> (  &<TimeInstant_tes> ;
          rdf:type [ <TimeInstant> ] ?
       ) ;
       rdf:type [ <DateOfIssue> ] ?
    )
}

<Day> CLOSED {
    (  $<Day_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Day> ] ?
    )
}

<Dead> CLOSED {
    (  $<Dead_tes> (  &<LifeStatus_tes> ;
          rdf:type [ <LifeStatus> ] ?
       ) ;
       rdf:type [ <Dead> ] ?
    )
}

<DecimalScale> CLOSED {
    (  $<DecimalScale_tes> (  &<NumericScale_tes> ;
          rdf:type [ <NumericScale> ] ?
       ) ;
       rdf:type [ <DecimalScale> ] ?
    )
}

<DecompositionReaction> CLOSED {
    (  $<DecompositionReaction_tes> (  &<InorganicReaction_tes> ;
          rdf:type [ <InorganicReaction> ] ?
       ) ;
       rdf:type [ <DecompositionReaction> ] ?
    )
}

<Decreased> CLOSED {
    (  $<Decreased_tes> (  &<Abnormal_tes> ;
          rdf:type [ <Abnormal> ] ?
       ) ;
       rdf:type [ <Decreased> ] ?
    )
}

<DecreasedChemicalDestruction> CLOSED {
    (  $<DecreasedChemicalDestruction_tes> (  &<ChemicalDestruction_tes> ;
          rdf:type [ <ChemicalDestruction> ] ?
       ) ;
       rdf:type [ <DecreasedChemicalDestruction> ] ?
    )
}

<DecreasedDurationOfProcessFromIncreasedRegulation> CLOSED {
    (  $<DecreasedDurationOfProcessFromIncreasedRegulation_tes> (  &<RegulationOfProcessDuration_tes> ;
          rdf:type [ <RegulationOfProcessDuration> ] ?
       ) ;
       rdf:type [ <DecreasedDurationOfProcessFromIncreasedRegulation> ] ?
    )
}

<DecreasedFrequencyOfProcessFromIncreasedRegulation> CLOSED {
    (  $<DecreasedFrequencyOfProcessFromIncreasedRegulation_tes> (  &<RegulationOfProcessFrequency_tes> ;
          rdf:type [ <RegulationOfProcessFrequency> ] ?
       ) ;
       rdf:type [ <DecreasedFrequencyOfProcessFromIncreasedRegulation> ] ?
    )
}

<DecreasedMolecularDegradationFromDecreasedRegulation> CLOSED {
    (  $<DecreasedMolecularDegradationFromDecreasedRegulation_tes> (  &<RegulationOfMolecularDegradation_tes> ;
          rdf:type [ <RegulationOfMolecularDegradation> ] ?
       ) ;
       rdf:type [ <DecreasedMolecularDegradationFromDecreasedRegulation> ] ?
    )
}

<DecreasedMolecularDegradationFromIncreasedRegulation> CLOSED {
    (  $<DecreasedMolecularDegradationFromIncreasedRegulation_tes> (  &<RegulationOfMolecularDegradation_tes> ;
          rdf:type [ <RegulationOfMolecularDegradation> ] ?
       ) ;
       rdf:type [ <DecreasedMolecularDegradationFromIncreasedRegulation> ] ?
    )
}

<DecreasedMolecularProductionFromDecreasedRegulation> CLOSED {
    (  $<DecreasedMolecularProductionFromDecreasedRegulation_tes> (  &<RegulationOfMolecularProduction_tes> ;
          rdf:type [ <RegulationOfMolecularProduction> ] ?
       ) ;
       rdf:type [ <DecreasedMolecularProductionFromDecreasedRegulation> ] ?
    )
}

<DecreasedMolecularProductionFromIncreasedRegulation> CLOSED {
    (  $<DecreasedMolecularProductionFromIncreasedRegulation_tes> (  &<RegulationOfMolecularProduction_tes> ;
          rdf:type [ <RegulationOfMolecularProduction> ] ?
       ) ;
       rdf:type [ <DecreasedMolecularProductionFromIncreasedRegulation> ] ?
    )
}

<DecreasedObjectConsumptionFromIncreasedRegulation> CLOSED {
    (  $<DecreasedObjectConsumptionFromIncreasedRegulation_tes> (  &<RegulationOfObjectConsumption_tes> ;
          rdf:type [ <RegulationOfObjectConsumption> ] ?
       ) ;
       rdf:type [ <DecreasedObjectConsumptionFromIncreasedRegulation> ] ?
    )
}

<DecreasedObjectProductionFromIncreasedRegulation> CLOSED {
    (  $<DecreasedObjectProductionFromIncreasedRegulation_tes> (  &<RegulationOfObjectProduction_tes> ;
          rdf:type [ <RegulationOfObjectProduction> ] ?
       ) ;
       rdf:type [ <DecreasedObjectProductionFromIncreasedRegulation> ] ?
    )
}

<DecreasedSpatialExtentOfProcessFromDecreasedRegulation> CLOSED {
    (  $<DecreasedSpatialExtentOfProcessFromDecreasedRegulation_tes> (  &<RegulationOfProcessSpatialExtent_tes> ;
          rdf:type [ <RegulationOfProcessSpatialExtent> ] ?
       ) ;
       rdf:type [ <DecreasedSpatialExtentOfProcessFromDecreasedRegulation> ] ?
    )
}

<DecreaseInNumberOfObjectsProduced> CLOSED {
    (  $<DecreaseInNumberOfObjectsProduced_tes> (  &<DifferenceInNumberOfObjectsProduced_tes> ;
          rdf:type [ <DifferenceInNumberOfObjectsProduced> ] ?
       ) ;
       rdf:type [ <DecreaseInNumberOfObjectsProduced> ] ?
    )
}

<DecreasingLine> CLOSED {
    (  $<DecreasingLine_tes> (  &<TrendLine_tes> ;
          rdf:type [ <TrendLine> ] ?
       ) ;
       rdf:type [ <DecreasingLine> ] ?
    )
}

<DeductiveArgument> CLOSED {
    (  $<DeductiveArgument_tes> (  &<Argument_tes> ;
          rdf:type [ <Argument> ] ?
       ) ;
       rdf:type [ <DeductiveArgument> ] ?
    )
}

<DefaultParameter> CLOSED {
    (  $<DefaultParameter_tes> (  &<Parameter_tes> ;
          rdf:type [ <Parameter> ] ?
       ) ;
       rdf:type [ <DefaultParameter> ] ?
    )
}

<Definition> CLOSED {
    (  $<Definition_tes> (  &<Description_tes> ;
          rdf:type [ <Description> ] ?
       ) ;
       rdf:type [ <Definition> ] ?
    )
}

<DeletionVariantRole> CLOSED {
    (  $<DeletionVariantRole_tes> (  &<SequenceVariantRole_tes> ;
          rdf:type [ <SequenceVariantRole> ] ?
       ) ;
       rdf:type [ <DeletionVariantRole> ] ?
    )
}

<Dendrogram> CLOSED {
    (  $<Dendrogram_tes> (  &<TreeDiagram_tes> ;
          rdf:type [ <TreeDiagram> ] ?
       ) ;
       rdf:type [ <Dendrogram> ] ?
    )
}

<Density> CLOSED {
    (  $<Density_tes> (  &<3DExtentQuantity_tes> ;
          rdf:type [ <3DExtentQuantity> ] ?
       ) ;
       rdf:type [ <Density> ] ?
    )
}

<DentistRole> CLOSED {
    (  $<DentistRole_tes> (  &<MedicalRole_tes> ;
          rdf:type [ <MedicalRole> ] ?
       ) ;
       rdf:type [ <DentistRole> ] ?
    )
}

<DeoxyribonucleicAcid>  (
    CLOSED {
       (  $<DeoxyribonucleicAcid_tes> (  &<NucleicAcid_tes> ;
             rdf:type [ <NucleicAcid> ] ?
          ) ;
          rdf:type [ <DeoxyribonucleicAcid> ] ?
       )
    } OR @<DeoxyribonucleicAcidTemplate>
)

<DeoxyribonucleicAcidPrimer> CLOSED {
    (  $<DeoxyribonucleicAcidPrimer_tes> (  &<Primer_tes> ;
          rdf:type [ <Primer> ] ?
       ) ;
       rdf:type [ <DeoxyribonucleicAcidPrimer> ] ?
    )
}

<DeoxyribonucleicAcidSequence> CLOSED {
    (  $<DeoxyribonucleicAcidSequence_tes> (  &<NucleicAcidSequence_tes> ;
          rdf:type [ <NucleicAcidSequence> ] ?
       ) ;
       rdf:type [ <DeoxyribonucleicAcidSequence> ] ?
    )
}

<DeoxyribonucleicAcidTemplate> CLOSED {
    (  $<DeoxyribonucleicAcidTemplate_tes> (  &<DeoxyribonucleicAcid_tes> ;
          rdf:type [ <DeoxyribonucleicAcid> ] ?
       ) ;
       rdf:type [ <DeoxyribonucleicAcidTemplate> ] ?
    )
}

<DeoxyribonucleotideResidue> CLOSED {
    (  $<DeoxyribonucleotideResidue_tes> (  &<NucleotideResidue_tes> ;
          rdf:type [ <NucleotideResidue> ] ?
       ) ;
       rdf:type [ <DeoxyribonucleotideResidue> ] ?
    )
}

<DepartmentChairRole> CLOSED {
    (  $<DepartmentChairRole_tes> (  &<AcademicRole_tes> ;
          rdf:type [ <AcademicRole> ] ?
       ) ;
       rdf:type [ <DepartmentChairRole> ] ?
    )
}

<DependentVariable> CLOSED {
    (  $<DependentVariable_tes> (  &<Variable_tes> ;
          rdf:type [ <Variable> ] ?
       ) ;
       rdf:type [ <DependentVariable> ] ?
    )
}

<Depression> CLOSED {
    (  $<Depression_tes> (  &<Sadness_tes> ;
          rdf:type [ <Sadness> ] ?
       ) ;
       rdf:type [ <Depression> ] ?
    )
}

<Depth>  (
    CLOSED {
       (  $<Depth_tes> (  &<1DExtentQuantity_tes> ;
             rdf:type [ <1DExtentQuantity> ] ?
          ) ;
          rdf:type [ <Depth> ] ?
       )
    } OR @<Thickness>
)

<Description>  (
    CLOSED {
       (  $<Description_tes> (  &<LanguageEntity_tes> ;
             rdf:type [ <LanguageEntity> ] ?
          ) ;
          rdf:type [ <Description> ] ?
       )
    } OR @<Annotation> OR @<Answer> OR @<Definition> OR @<History> OR @<Proposition> OR @<Specification> OR @<Syndrome>
)

<Descriptor>  (
    CLOSED {
       (  $<Descriptor_tes> (  &<Term_tes> ;
             rdf:type [ <Term> ] ?
          ) ;
          rdf:type [ <Descriptor> ] ?
       )
    } OR @<Keyword>
)

<Design> CLOSED {
    (  $<Design_tes> (  &<FunctionalSpecification_tes> ;
          rdf:type [ <FunctionalSpecification> ] ?
       ) ;
       rdf:type [ <Design> ] ?
    )
}

<DesignSpecification>  (
    CLOSED {
       (  $<DesignSpecification_tes> (  &<FunctionalSpecification_tes> ;
             rdf:type [ <FunctionalSpecification> ] ?
          ) ;
          rdf:type [ <DesignSpecification> ] ?
       )
    } OR @<Criterion>
)

<Desire>  (
    CLOSED {
       (  $<Desire_tes> (  &<Interest_tes> ;
             rdf:type [ <Interest> ] ?
          ) ;
          rdf:type [ <Desire> ] ?
       )
    } OR @<Curiosity> OR @<Intent> OR @<Lust> OR @<Passion>
)

<Despair> CLOSED {
    (  $<Despair_tes> (  &<Sadness_tes> ;
          rdf:type [ <Sadness> ] ?
       ) ;
       rdf:type [ <Despair> ] ?
    )
}

<Destroying>  (
    CLOSED {
       (  $<Destroying_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <Destroying> ] ?
       )
    } OR @<ChemicalDestruction> OR @<Dying>
)

<Device>  (
    CLOSED {
       (  $<Device_tes> (  &<HeterogeneousSubstance_tes> ;
             rdf:type [ <HeterogeneousSubstance> ] ?
          ) ;
          rdf:type [ <Device> ] ?
       )
    } OR @<CommunicationDevice> OR @<DataCollectionDevice> OR @<DataStorageDevice> OR @<Radar>
)

<Diagnosis> CLOSED {
    (  $<Diagnosis_tes> (  &<Conclusion_tes> ;
          rdf:type [ <Conclusion> ] ?
       ) ;
       rdf:type [ <Diagnosis> ] ?
    )
}

<DiagnosticOpinion> CLOSED {
    (  $<DiagnosticOpinion_tes> (  &<Opinion_tes> ;
          rdf:type [ <Opinion> ] ?
       ) ;
       rdf:type [ <DiagnosticOpinion> ] ?
    )
}

<DiagnosticTest> CLOSED {
    (  $<DiagnosticTest_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <DiagnosticTest> ] ?
    )
}

<Diamond> CLOSED {
    (  $<Diamond_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <Diamond> ] ?
    )
}

<Diary> CLOSED {
    (  $<Diary_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <Diary> ] ?
    )
}

<Diastereomer> CLOSED {
    (  $<Diastereomer_tes> (  &<Stereoisomer_tes> ;
          rdf:type [ <Stereoisomer> ] ?
       ) ;
       rdf:type [ <Diastereomer> ] ?
    )
}

<DifferenceInNumberOfObjectsProduced>  (
    CLOSED {
       (  $<DifferenceInNumberOfObjectsProduced_tes> (  &<Count_tes> ;
             rdf:type [ <Count> ] ?
          ) ;
          rdf:type [ <DifferenceInNumberOfObjectsProduced> ] ?
       )
    } OR @<DecreaseInNumberOfObjectsProduced> OR @<IncreaseInNumberOfObjectsProduced>
)

<DifferentialDiagnosis> CLOSED {
    (  $<DifferentialDiagnosis_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <DifferentialDiagnosis> ] ?
    )
}

<DifferentialEquation>  (
    CLOSED {
       (  $<DifferentialEquation_tes> (  &<Equation_tes> ;
             rdf:type [ <Equation> ] ?
          ) ;
          rdf:type [ <DifferentialEquation> ] ?
       )
    } OR @<OrdinaryDifferentialEquation> OR @<PartialDifferentialEquation>
)

<DifferentialGeneExpressionRatio>  (
    CLOSED {
       (  $<DifferentialGeneExpressionRatio_tes> (  &<Ratio_tes> ;
             rdf:type [ <Ratio> ] ?
          ) ;
          rdf:type [ <DifferentialGeneExpressionRatio> ] ?
       )
    } OR @<T-statisticBasedDecreasedDifferentialGeneExpression> OR @<T-statisticBasedIncreasedDifferentialGeneExpression>
)

<Diffusion>  (
    CLOSED {
       (  $<Diffusion_tes> (  &<PassiveMovement_tes> ;
             rdf:type [ <PassiveMovement> ] ?
          ) ;
          rdf:type [ <Diffusion> ] ?
       )
    } OR @<BrownianMotion> OR @<Osmosis>
)

<DiffusionEquation> CLOSED {
    (  $<DiffusionEquation_tes> (  &<MovementEquation_tes> ;
          rdf:type [ <MovementEquation> ] ?
       ) ;
       rdf:type [ <DiffusionEquation> ] ?
    )
}

<DimensionalQuantity>  (
    CLOSED {
       (  $<DimensionalQuantity_tes> (  &<Quantity_tes> ;
             rdf:type [ <Quantity> ] ?
          ) ;
          rdf:type [ <DimensionalQuantity> ] ?
       )
    } OR @<Age> OR @<Dose> OR @<GeneExpressionValue> OR @<ProteinExpressionValue> OR @<RateOfChange> OR @<SpatialQuantity> OR
    @<TimeMeasurement>
)

<DimensionlessQuantity>  (
    CLOSED {
       (  $<DimensionlessQuantity_tes> (  &<Quantity_tes> ;
             rdf:type [ <Quantity> ] ?
          ) ;
          rdf:type [ <DimensionlessQuantity> ] ?
       )
    } OR @<Count> OR @<PH> OR @<ProbabilityMeasure> OR @<Quantile> OR @<Ratio>
)

<Dipole-dipoleInteraction> CLOSED {
    (  $<Dipole-dipoleInteraction_tes> (  &<WeakSubmolecularComponent_tes> ;
          rdf:type [ <WeakSubmolecularComponent> ] ?
       ) ;
       rdf:type [ <Dipole-dipoleInteraction> ] ?
    )
}

<DirectedAcyclicGraph>  (
    CLOSED {
       (  $<DirectedAcyclicGraph_tes> (  &<NetworkDiagram_tes> ;
             rdf:type [ <NetworkDiagram> ] ?
          ) ;
          rdf:type [ <DirectedAcyclicGraph> ] ?
       )
    } OR @<TreeDiagram>
)

<DirectedLineSegment>  (
    CLOSED {
       (  $<DirectedLineSegment_tes> (  &<LineSegment_tes> ;
             rdf:type [ <LineSegment> ] ?
          ) ;
          rdf:type [ <DirectedLineSegment> ] ?
       )
    } OR @<ArrowedLineSegment> OR @<Axis>
)

<Disagreement>  (
    CLOSED {
       (  $<Disagreement_tes> (  &<AgreementQuality_tes> ;
             rdf:type [ <AgreementQuality> ] ?
          ) ;
          rdf:type [ <Disagreement> ] ?
       )
    } OR @<FullDisagreement>
)

<Disappointment> CLOSED {
    (  $<Disappointment_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Disappointment> ] ?
    )
}

<Discouragement> CLOSED {
    (  $<Discouragement_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Discouragement> ] ?
    )
}

<DiscussionSection> CLOSED {
    (  $<DiscussionSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <DiscussionSection> ] ?
    )
}

<Disease> CLOSED {
    (  $<Disease_tes> (  &<BiologicalQuality_tes> ;
          rdf:type [ <BiologicalQuality> ] ?
       ) ;
       rdf:type [ <Disease> ] ?
    )
}

<DisGeNETDiseaseSpecificity> CLOSED {
    (  $<DisGeNETDiseaseSpecificity_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <DisGeNETDiseaseSpecificity> ] ?
    )
}

<DisGeNETPleiotropyIndex> CLOSED {
    (  $<DisGeNETPleiotropyIndex_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <DisGeNETPleiotropyIndex> ] ?
    )
}

<Disgust>  (
    CLOSED {
       (  $<Disgust_tes> (  &<Hostility_tes> ;
             rdf:type [ <Hostility> ] ?
          ) ;
          rdf:type [ <Disgust> ] ?
       )
    } OR @<Anger> OR @<Contempt> OR @<Hate> OR @<Loathing> OR @<Resentment>
)

<Disjunctionor>  (
    CLOSED {
       (  $<Disjunctionor_tes> (  &<LogicalOperator_tes> ;
             rdf:type [ <LogicalOperator> ] ?
          ) ;
          rdf:type [ <Disjunctionor> ] ?
       )
    } OR @<ExclusiveDisjunctionxor>
)

<Disordered> CLOSED {
    (  $<Disordered_tes> (  &<StructuralQuality_tes> ;
          rdf:type [ <StructuralQuality> ] ?
       ) ;
       rdf:type [ <Disordered> ] ?
    )
}

<DisplacementReaction>  (
    CLOSED {
       (  $<DisplacementReaction_tes> (  &<InorganicReaction_tes> ;
             rdf:type [ <InorganicReaction> ] ?
          ) ;
          rdf:type [ <DisplacementReaction> ] ?
       )
    } OR @<DoubleDisplacementReaction> OR @<SingleDisplacementReaction>
)

<Disposition>  (
    CLOSED {
       (  $<Disposition_tes> (  &<Capability_tes> ;
             rdf:type [ <Capability> ] ? ;
             <isDispositionOf> @<Entity> ?
          ) ;
          rdf:type [ <Disposition> ] ?
       )
    } OR @<MutualDisposition>
)

<DissatisfiedQualifier> CLOSED {
    (  $<DissatisfiedQualifier_tes> (  &<SatisfactionQualifier_tes> ;
          rdf:type [ <SatisfactionQualifier> ] ?
       ) ;
       rdf:type [ <DissatisfiedQualifier> ] ?
    )
}

<DisulfideBond> CLOSED {
    (  $<DisulfideBond_tes> (  &<SingleBond_tes> ;
          rdf:type [ <SingleBond> ] ?
       ) ;
       rdf:type [ <DisulfideBond> ] ?
    )
}

<DnaGene> CLOSED {
    (  $<DnaGene_tes> (  &<Gene_tes> ;
          rdf:type [ <Gene> ] ?
       ) ;
       rdf:type [ <DnaGene> ] ?
    )
}

<Doctor> CLOSED {
    (  $<Doctor_tes> (  &<MedicalPractitioner_tes> ;
          rdf:type [ <MedicalPractitioner> ] ?
       ) ;
       rdf:type [ <Doctor> ] ?
    )
}

<DoctorRole> CLOSED {
    (  $<DoctorRole_tes> (  &<MedicalRole_tes> ;
          rdf:type [ <MedicalRole> ] ?
       ) ;
       rdf:type [ <DoctorRole> ] ?
    )
}

<Document>  (
    CLOSED {
       (  $<Document_tes> (  &<TextualEntity_tes> ;
             rdf:type [ <TextualEntity> ] ?
          ) ;
          rdf:type [ <Document> ] ?
       )
    } OR @<Booklet> OR @<Diary> OR @<Email> OR @<LegalDocument> OR @<Letter> OR @<Manuscript> OR @<Note> OR @<OntologyDocument> OR
    @<Publication> OR @<Record> OR @<Report> OR @<WebPage>
)

<DocumentComponent>  (
    CLOSED {
       (  $<DocumentComponent_tes> (  &<TextualEntity_tes> ;
             rdf:type [ <TextualEntity> ] ?
          ) ;
          rdf:type [ <DocumentComponent> ] ?
       )
    } OR @<Citation> OR @<DocumentSection> OR @<Reference>
)

<DocumentSection>  (
    CLOSED {
       (  $<DocumentSection_tes> (  &<DocumentComponent_tes> ;
             rdf:type [ <DocumentComponent> ] ?
          ) ;
          rdf:type [ <DocumentSection> ] ?
       )
    } OR @<AbstractSection> OR @<AcknowledgementsSection> OR @<AuthorContributionSection> OR @<AuthorSection> OR
    @<BibliographySection> OR @<BookSection> OR @<Chapter> OR @<CopyrightSection> OR @<CorrespondenceSection> OR
    @<DiscussionSection> OR @<IntroductionSection> OR @<MaterialsAndMethodsSection> OR @<MaterialsSection> OR @<MethodsSection> OR
    @<ResultsSection> OR @<TableOfContents>
)

<DocumentTitle> CLOSED {
    (  $<DocumentTitle_tes> (  &<Title_tes> ;
          rdf:type [ <Title> ] ?
       ) ;
       rdf:type [ <DocumentTitle> ] ?
    )
}

<DocumentVersion> CLOSED {
    (  $<DocumentVersion_tes> (  &<VersionLabel_tes> ;
          rdf:type [ <VersionLabel> ] ?
       ) ;
       rdf:type [ <DocumentVersion> ] ?
    )
}

<Dose>  (
    CLOSED {
       (  $<Dose_tes> (  &<DimensionalQuantity_tes> ;
             rdf:type [ <DimensionalQuantity> ] ?
          ) ;
          rdf:type [ <Dose> ] ?
       )
    } OR @<EffectiveDose>
)

<DoubleArrowedLineSegment> CLOSED {
    (  $<DoubleArrowedLineSegment_tes> (  &<ArrowedLineSegment_tes> ;
          rdf:type [ <ArrowedLineSegment> ] ?
       ) ;
       rdf:type [ <DoubleArrowedLineSegment> ] ?
    )
}

<DoubleBond> CLOSED {
    (  $<DoubleBond_tes> (  &<CovalentBond_tes> ;
          rdf:type [ <CovalentBond> ] ?
       ) ;
       rdf:type [ <DoubleBond> ] ?
    )
}

<DoubleDisplacementReaction> CLOSED {
    (  $<DoubleDisplacementReaction_tes> (  &<DisplacementReaction_tes> ;
          rdf:type [ <DisplacementReaction> ] ?
       ) ;
       rdf:type [ <DoubleDisplacementReaction> ] ?
    )
}

<DoubleStrandedDNA> CLOSED {
    (  $<DoubleStrandedDNA_tes> (  &<DoubleStrandedNucleicAcid_tes> ;
          rdf:type [ <DoubleStrandedNucleicAcid> ] ?
       ) ;
       rdf:type [ <DoubleStrandedDNA> ] ?
    )
}

<DoubleStrandedNucleicAcid>  (
    CLOSED {
       (  $<DoubleStrandedNucleicAcid_tes> (  &<MolecularComplex_tes> ;
             rdf:type [ <MolecularComplex> ] ?
          ) ;
          rdf:type [ <DoubleStrandedNucleicAcid> ] ?
       )
    } OR @<DoubleStrandedDNA> OR @<DoubleStrandedRNA>
)

<DoubleStrandedRNA> CLOSED {
    (  $<DoubleStrandedRNA_tes> (  &<DoubleStrandedNucleicAcid_tes> ;
          rdf:type [ <DoubleStrandedNucleicAcid> ] ?
       ) ;
       rdf:type [ <DoubleStrandedRNA> ] ?
    )
}

<Draft> CLOSED {
    (  $<Draft_tes> (  &<Written_tes> ;
          rdf:type [ <Written> ] ?
       ) ;
       rdf:type [ <Draft> ] ?
    )
}

<Dread>  (
    CLOSED {
       (  $<Dread_tes> (  &<Fear_tes> ;
             rdf:type [ <Fear> ] ?
          ) ;
          rdf:type [ <Dread> ] ?
       )
    } OR @<Terror>
)

<DropLine> CLOSED {
    (  $<DropLine_tes> (  &<StatisticalGraphLine_tes> ;
          rdf:type [ <StatisticalGraphLine> ] ?
       ) ;
       rdf:type [ <DropLine> ] ?
    )
}

<Drug>  (
    CLOSED {
       (  $<Drug_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <Drug> ] ?
       )
    } OR @<PharmaceuticalDrug> OR @<Poison>
)

<DrugDrugInteraction> CLOSED {
    (  $<DrugDrugInteraction_tes> (  &<ChemicalEffect_tes> ;
          rdf:type [ <ChemicalEffect> ] ?
       ) ;
       rdf:type [ <DrugDrugInteraction> ] ?
    )
}

<DrugRegulatoryAuthority> CLOSED {
    (  $<DrugRegulatoryAuthority_tes> (  &<RegulatoryAuthority_tes> ;
          rdf:type [ <RegulatoryAuthority> ] ?
       ) ;
       rdf:type [ <DrugRegulatoryAuthority> ] ?
    )
}

<DubniumAtom> CLOSED {
    (  $<DubniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <DubniumAtom> ] ?
    )
}

<Duplicate> CLOSED {
    (  $<Duplicate_tes> (  &<CollectionItem_tes> ;
          rdf:type [ <CollectionItem> ] ?
       ) ;
       rdf:type [ <Duplicate> ] ?
    )
}

<DuplicateRole> CLOSED {
    (  $<DuplicateRole_tes> (  &<ComparativeRole_tes> ;
          rdf:type [ <ComparativeRole> ] ?
       ) ;
       rdf:type [ <DuplicateRole> ] ?
    )
}

<Dying> CLOSED {
    (  $<Dying_tes> (  &<Destroying_tes> ;
          rdf:type [ <Destroying> ] ?
       ) ;
       rdf:type [ <Dying> ] ?
    )
}

<Dysfunction> CLOSED {
    (  $<Dysfunction_tes> (  &<Capability_tes> ;
          rdf:type [ <Capability> ] ?
       ) ;
       rdf:type [ <Dysfunction> ] ?
    )
}

<DysprosiumAtom> CLOSED {
    (  $<DysprosiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <DysprosiumAtom> ] ?
    )
}

<E.coli> CLOSED {
    (  $<E.coli_tes> (  &<UnicellularOrganism_tes> ;
          rdf:type [ <UnicellularOrganism> ] ?
       ) ;
       rdf:type [ <E.coli> ] ?
    )
}

<Ecstasy> CLOSED {
    (  $<Ecstasy_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Ecstasy> ] ?
    )
}

<Edge> CLOSED {
    (  $<Edge_tes> (  &<Line_tes> ;
          rdf:type [ <Line> ] ?
       ) ;
       rdf:type [ <Edge> ] ?
    )
}

<EditedPublication>  (
    CLOSED {
       (  $<EditedPublication_tes> (  &<Publication_tes> ;
             rdf:type [ <Publication> ] ?
          ) ;
          rdf:type [ <EditedPublication> ] ?
       )
    } OR @<Issue>
)

<EditionNumber> CLOSED {
    (  $<EditionNumber_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <EditionNumber> ] ?
    )
}

<EditorReviewed> CLOSED {
    (  $<EditorReviewed_tes> (  &<Reviewed_tes> ;
          rdf:type [ <Reviewed> ] ?
       ) ;
       rdf:type [ <EditorReviewed> ] ?
    )
}

<EffectiveDose> CLOSED {
    (  $<EffectiveDose_tes> (  &<Dose_tes> ;
          rdf:type [ <Dose> ] ?
       ) ;
       rdf:type [ <EffectiveDose> ] ?
    )
}

<EinsteiniumAtom> CLOSED {
    (  $<EinsteiniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <EinsteiniumAtom> ] ?
    )
}

<ElectronicStructure> CLOSED {
    (  $<ElectronicStructure_tes> (  &<ChemicalStructure_tes> ;
          rdf:type [ <ChemicalStructure> ] ?
       ) ;
       rdf:type [ <ElectronicStructure> ] ?
    )
}

<ElectrophilicAdditionReaction> CLOSED {
    (  $<ElectrophilicAdditionReaction_tes> (  &<PolarAdditionReaction_tes> ;
          rdf:type [ <PolarAdditionReaction> ] ?
       ) ;
       rdf:type [ <ElectrophilicAdditionReaction> ] ?
    )
}

<Email> CLOSED {
    (  $<Email_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <Email> ] ?
    )
}

<EmailAddress> CLOSED {
    (  $<EmailAddress_tes> (  &<InformationalEntityIdentifier_tes> ;
          rdf:type [ <InformationalEntityIdentifier> ] ?
       ) ;
       rdf:type [ <EmailAddress> ] ?
    )
}

<Embarassment> CLOSED {
    (  $<Embarassment_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Embarassment> ] ?
    )
}

<Emotion>  (
    CLOSED {
       (  $<Emotion_tes> (  &<Behaviour_tes> ;
             rdf:type [ <Behaviour> ] ?
          ) ;
          rdf:type [ <Emotion> ] ?
       )
    } OR @<Indifference> OR @<NegativeEmotion> OR @<PositiveEmotion>
)

<Empty> CLOSED {
    (  $<Empty_tes> (  &<ContainmentQuality_tes> ;
          rdf:type [ <ContainmentQuality> ] ?
       ) ;
       rdf:type [ <Empty> ] ?
    )
}

<EmptySet> CLOSED {
    (  $<EmptySet_tes> (  &<Set_tes> ;
          rdf:type [ <Set> ] ?
       ) ;
       rdf:type [ <EmptySet> ] ?
    )
}

<Enantiomer> CLOSED {
    (  $<Enantiomer_tes> (  &<Stereoisomer_tes> ;
          rdf:type [ <Stereoisomer> ] ?
       ) ;
       rdf:type [ <Enantiomer> ] ?
    )
}

<EndDate> CLOSED {
    (  $<EndDate_tes> (  &<TimeInstant_tes> ;
          rdf:type [ <TimeInstant> ] ?
       ) ;
       rdf:type [ <EndDate> ] ?
    )
}

<Endpoint> CLOSED {
    (  $<Endpoint_tes> (  &<TerminalPoint_tes> ;
          rdf:type [ <TerminalPoint> ] ?
       ) ;
       rdf:type [ <Endpoint> ] ?
    )
}

<EndPosition>  (
    CLOSED {
       (  $<EndPosition_tes> (  &<LinearPosition_tes> ;
             rdf:type [ <LinearPosition> ] ?
          ) ;
          rdf:type [ <EndPosition> ] ?
       )
    } OR @<SequenceEndPosition> OR @<TextSpanEndPosition>
)

<EndTime> CLOSED {
    (  $<EndTime_tes> (  &<TimeInstant_tes> ;
          rdf:type [ <TimeInstant> ] ?
       ) ;
       rdf:type [ <EndTime> ] ?
    )
}

<Entity>  (
    CLOSED {
       (  $<Entity_tes> (  <hasCreator> @<Entity> ? ;
             <hasAttribute> @<Entity> ? ;
             <satisfies> @<Description> ? ;
             <isRelatedTo> @<Entity> ?
          ) ;
          rdf:type [ <Entity> ] ?
       )
    } OR @<Attribute> OR @<Object> OR @<Process>
)

<Environment> CLOSED {
    (  $<Environment_tes> (  &<GeographicRegion_tes> ;
          rdf:type [ <GeographicRegion> ] ?
       ) ;
       rdf:type [ <Environment> ] ?
    )
}

<Envy>  (
    CLOSED {
       (  $<Envy_tes> (  &<NegativeEmotion_tes> ;
             rdf:type [ <NegativeEmotion> ] ?
          ) ;
          rdf:type [ <Envy> ] ?
       )
    } OR @<Jealousy>
)

<Enzyme> CLOSED {
    (  $<Enzyme_tes> (  &<Protein_tes> ;
          rdf:type [ <Protein> ] ?
       ) ;
       rdf:type [ <Enzyme> ] ?
    )
}

<Epimer> CLOSED {
    (  $<Epimer_tes> (  &<Stereoisomer_tes> ;
          rdf:type [ <Stereoisomer> ] ?
       ) ;
       rdf:type [ <Epimer> ] ?
    )
}

<EpimerAssociation> CLOSED {
    (  $<EpimerAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ?
       ) ;
       rdf:type [ <EpimerAssociation> ] ?
    )
}

<Equation>  (
    CLOSED {
       (  $<Equation_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Equation> ] ?
       )
    } OR @<DifferentialEquation> OR @<MovementEquation>
)

<ErbiumAtom> CLOSED {
    (  $<ErbiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ErbiumAtom> ] ?
    )
}

<EthnicGroup> CLOSED {
    (  $<EthnicGroup_tes> (  &<HumanPopulation_tes> ;
          rdf:type [ <HumanPopulation> ] ?
       ) ;
       rdf:type [ <EthnicGroup> ] ?
    )
}

<Ethnicity> CLOSED {
    (  $<Ethnicity_tes> (  &<BiologicalQuality_tes> ;
          rdf:type [ <BiologicalQuality> ] ?
       ) ;
       rdf:type [ <Ethnicity> ] ?
    )
}

<Euphoria> CLOSED {
    (  $<Euphoria_tes> (  &<Happiness_tes> ;
          rdf:type [ <Happiness> ] ?
       ) ;
       rdf:type [ <Euphoria> ] ?
    )
}

<EuropiumAtom> CLOSED {
    (  $<EuropiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <EuropiumAtom> ] ?
    )
}

<EvaluationRole>  (
    CLOSED {
       (  $<EvaluationRole_tes> (  &<InvestigationalRole_tes> ;
             rdf:type [ <InvestigationalRole> ] ?
          ) ;
          rdf:type [ <EvaluationRole> ] ?
       )
    } OR @<ControlRole> OR @<TestRole>
)

<Evidence> CLOSED {
    (  $<Evidence_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Evidence> ] ?
    )
}

<EvolutionaryLineage> CLOSED {
    (  $<EvolutionaryLineage_tes> (  &<History_tes> ;
          rdf:type [ <History> ] ?
       ) ;
       rdf:type [ <EvolutionaryLineage> ] ?
    )
}

<Evolving> CLOSED {
    (  $<Evolving_tes> (  &<Creating_tes> ;
          rdf:type [ <Creating> ] ?
       ) ;
       rdf:type [ <Evolving> ] ?
    )
}

<ExactCross-reference> CLOSED {
    (  $<ExactCross-reference_tes> (  &<DatabaseCross-reference_tes> ;
          rdf:type [ <DatabaseCross-reference> ] ?
       ) ;
       rdf:type [ <ExactCross-reference> ] ?
    )
}

<ExcellentQuality> CLOSED {
    (  $<ExcellentQuality_tes> (  &<QualityDescriptor_tes> ;
          rdf:type [ <QualityDescriptor> ] ?
       ) ;
       rdf:type [ <ExcellentQuality> ] ?
    )
}

<Excerpt>  (
    CLOSED {
       (  $<Excerpt_tes> (  &<TextualEntity_tes> ;
             rdf:type [ <TextualEntity> ] ?
          ) ;
          rdf:type [ <Excerpt> ] ?
       )
    } OR @<Quote>
)

<Excitement> CLOSED {
    (  $<Excitement_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Excitement> ] ?
    )
}

<ExclusionCriterion> CLOSED {
    (  $<ExclusionCriterion_tes> (  &<Criterion_tes> ;
          rdf:type [ <Criterion> ] ?
       ) ;
       rdf:type [ <ExclusionCriterion> ] ?
    )
}

<ExclusiveDisjunctionxor> CLOSED {
    (  $<ExclusiveDisjunctionxor_tes> (  &<Disjunctionor_tes> ;
          rdf:type [ <Disjunctionor> ] ?
       ) ;
       rdf:type [ <ExclusiveDisjunctionxor> ] ?
    )
}

<ExistenceQuality>  (
    CLOSED {
       (  $<ExistenceQuality_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <ExistenceQuality> ] ?
       )
    } OR @<Hypothetical> OR @<Real> OR @<Unsupported> OR @<Virtual>
)

<Exon> CLOSED {
    (  $<Exon_tes> (  &<GeneComponent_tes> ;
          rdf:type [ <GeneComponent> ] ?
       ) ;
       rdf:type [ <Exon> ] ?
    )
}

<ExpectedValue> CLOSED {
    (  $<ExpectedValue_tes> (  &<ProbabilityMeasure_tes> ;
          rdf:type [ <ProbabilityMeasure> ] ?
       ) ;
       rdf:type [ <ExpectedValue> ] ?
    )
}

<Experiment>  (
    CLOSED {
       (  $<Experiment_tes> (  &<Investigation_tes> ;
             rdf:type [ <Investigation> ] ?
          ) ;
          rdf:type [ <Experiment> ] ?
       )
    } OR @<InterventionStudy> OR @<MassSpectrometryExperiment> OR @<MicroarrayExperiment> OR @<ObservationalStudy>
)

<ExperimentalProtocol>  (
    CLOSED {
       (  $<ExperimentalProtocol_tes> (  &<ActionSpecification_tes> ;
             rdf:type [ <ActionSpecification> ] ?
          ) ;
          rdf:type [ <ExperimentalProtocol> ] ?
       )
    } OR @<StandardOperatingProcedure> OR @<StudyDesign>
)

<False> CLOSED {
    (  $<False_tes> (  &<TruthValue_tes> ;
          rdf:type [ <TruthValue> ] ?
       ) ;
       rdf:type [ <False> ] ?
    )
}

<Family> CLOSED {
    (  $<Family_tes> (  &<Collective_tes> ;
          rdf:type [ <Collective> ] ?
       ) ;
       rdf:type [ <Family> ] ?
    )
}

<FamilyHistory> CLOSED {
    (  $<FamilyHistory_tes> (  &<History_tes> ;
          rdf:type [ <History> ] ?
       ) ;
       rdf:type [ <FamilyHistory> ] ?
    )
}

<Fatal> CLOSED {
    (  $<Fatal_tes> (  &<Intensity_tes> ;
          rdf:type [ <Intensity> ] ?
       ) ;
       rdf:type [ <Fatal> ] ?
    )
}

<FaxNumber> CLOSED {
    (  $<FaxNumber_tes> (  &<TelephoneNumber_tes> ;
          rdf:type [ <TelephoneNumber> ] ?
       ) ;
       rdf:type [ <FaxNumber> ] ?
    )
}

<Fear>  (
    CLOSED {
       (  $<Fear_tes> (  &<Apprehension_tes> ;
             rdf:type [ <Apprehension> ] ?
          ) ;
          rdf:type [ <Fear> ] ?
       )
    } OR @<Dread> OR @<Panic>
)

<Female> CLOSED {
    (  $<Female_tes> (  &<BiologicalSex_tes> ;
          rdf:type [ <BiologicalSex> ] ?
       ) ;
       rdf:type [ <Female> ] ?
    )
}

<FermiumAtom> CLOSED {
    (  $<FermiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <FermiumAtom> ] ?
    )
}

<Fictional> CLOSED {
    (  $<Fictional_tes> (  &<Hypothetical_tes> ;
          rdf:type [ <Hypothetical> ] ?
       ) ;
       rdf:type [ <Fictional> ] ?
    )
}

<Figure>  (
    CLOSED {
       (  $<Figure_tes> (  &<Media_tes> ;
             rdf:type [ <Media> ] ?
          ) ;
          rdf:type [ <Figure> ] ?
       )
    } OR @<Chart> OR @<Image> OR @<Table>
)

<FigurePart>  (
    CLOSED {
       (  $<FigurePart_tes> (  &<Media_tes> ;
             rdf:type [ <Media> ] ?
          ) ;
          rdf:type [ <FigurePart> ] ?
       )
    } OR @<Legend> OR @<Plot>
)

<File>  (
    CLOSED {
       (  $<File_tes> (  &<Media_tes> ;
             rdf:type [ <Media> ] ?
          ) ;
          rdf:type [ <File> ] ?
       )
    } OR @<MolecularStructureFile>
)

<Finalized> CLOSED {
    (  $<Finalized_tes> (  &<Written_tes> ;
          rdf:type [ <Written> ] ?
       ) ;
       rdf:type [ <Finalized> ] ?
    )
}

<FirstName> CLOSED {
    (  $<FirstName_tes> (  &<Name_tes> ;
          rdf:type [ <Name> ] ?
       ) ;
       rdf:type [ <FirstName> ] ?
    )
}

<Fitness> CLOSED {
    (  $<Fitness_tes> (  &<ObjectQuality_tes> ;
          rdf:type [ <ObjectQuality> ] ?
       ) ;
       rdf:type [ <Fitness> ] ?
    )
}

<Flowchart> CLOSED {
    (  $<Flowchart_tes> (  &<Chart_tes> ;
          rdf:type [ <Chart> ] ?
       ) ;
       rdf:type [ <Flowchart> ] ?
    )
}

<FluorineAtom> CLOSED {
    (  $<FluorineAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <FluorineAtom> ] ?
    )
}

<ForeignDatabaseKey> CLOSED {
    (  $<ForeignDatabaseKey_tes> (  &<DatabaseKey_tes> ;
          rdf:type [ <DatabaseKey> ] ?
       ) ;
       rdf:type [ <ForeignDatabaseKey> ] ?
    )
}

<FormalSpecification>  (
    CLOSED {
       (  $<FormalSpecification_tes> (  &<FunctionalSpecification_tes> ;
             rdf:type [ <FunctionalSpecification> ] ?
          ) ;
          rdf:type [ <FormalSpecification> ] ?
       )
    } OR @<Ontology> OR @<Vocabulary>
)

<FranciumAtom> CLOSED {
    (  $<FranciumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <FranciumAtom> ] ?
    )
}

<FreeRadicalAddition> CLOSED {
    (  $<FreeRadicalAddition_tes> (  &<Non-polarAdditionReaction_tes> ;
          rdf:type [ <Non-polarAdditionReaction> ] ?
       ) ;
       rdf:type [ <FreeRadicalAddition> ] ?
    )
}

<Frequency> CLOSED {
    (  $<Frequency_tes> (  &<RateOfChange_tes> ;
          rdf:type [ <RateOfChange> ] ?
       ) ;
       rdf:type [ <Frequency> ] ?
    )
}

<Frustration> CLOSED {
    (  $<Frustration_tes> (  &<Annoyance_tes> ;
          rdf:type [ <Annoyance> ] ?
       ) ;
       rdf:type [ <Frustration> ] ?
    )
}

<Full> CLOSED {
    (  $<Full_tes> (  &<ContainmentQuality_tes> ;
          rdf:type [ <ContainmentQuality> ] ?
       ) ;
       rdf:type [ <Full> ] ?
    )
}

<FullAgreement> CLOSED {
    (  $<FullAgreement_tes> (  &<Agreement_tes> ;
          rdf:type [ <Agreement> ] ?
       ) ;
       rdf:type [ <FullAgreement> ] ?
    )
}

<FullDisagreement> CLOSED {
    (  $<FullDisagreement_tes> (  &<Disagreement_tes> ;
          rdf:type [ <Disagreement> ] ?
       ) ;
       rdf:type [ <FullDisagreement> ] ?
    )
}

<Fullerene> CLOSED {
    (  $<Fullerene_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <Fullerene> ] ?
    )
}

<Function> CLOSED {
    (  $<Function_tes> (  &<Capability_tes> ;
          rdf:type [ <Capability> ] ? ;
          <isFunctionOf> @<Entity> ?
       ) ;
       rdf:type [ <Function> ] ?
    )
}

<FunctionalRnaCodingGene> CLOSED {
    (  $<FunctionalRnaCodingGene_tes> (  &<RnaGene_tes> ;
          rdf:type [ <RnaGene> ] ?
       ) ;
       rdf:type [ <FunctionalRnaCodingGene> ] ?
    )
}

<FunctionalSpecification>  (
    CLOSED {
       (  $<FunctionalSpecification_tes> (  &<Specification_tes> ;
             rdf:type [ <Specification> ] ?
          ) ;
          rdf:type [ <FunctionalSpecification> ] ?
       )
    } OR @<Design> OR @<DesignSpecification> OR @<FormalSpecification> OR @<Genotype> OR @<MeasurementScale> OR
    @<SpatialSpecification> OR @<Structure>
)

<FusionGene-diseaseAssociation> CLOSED {
    (  $<FusionGene-diseaseAssociation_tes> (  &<Gene-diseaseAssociationLinkedWithGenomicAlterations_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithGenomicAlterations> ] ?
       ) ;
       rdf:type [ <FusionGene-diseaseAssociation> ] ?
    )
}

<GadoliniumAtom> CLOSED {
    (  $<GadoliniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <GadoliniumAtom> ] ?
    )
}

<GalliumAtom> CLOSED {
    (  $<GalliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <GalliumAtom> ] ?
    )
}

<GanttChart> CLOSED {
    (  $<GanttChart_tes> (  &<Chart_tes> ;
          rdf:type [ <Chart> ] ?
       ) ;
       rdf:type [ <GanttChart> ] ?
    )
}

<Gene>  (
    CLOSED {
       (  $<Gene_tes> (  &<NucleicAcidPart_tes> ;
             rdf:type [ <NucleicAcidPart> ] ?
          ) ;
          rdf:type [ <Gene> ] ?
       )
    } OR @<Allele> OR @<DnaGene> OR @<Non-proteinCodingRNAncRNAGene> OR @<PredictedGene> OR @<ProteinCodingGene> OR @<RnaGene> OR
    @<ValidatedGene>
)

<Gene-diseaseAssociation>  (
    CLOSED {
       (  $<Gene-diseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ?
          ) ;
          rdf:type [ <Gene-diseaseAssociation> ] ?
       )
    } OR @<Gene-diseaseBiomarkerAssociation> OR @<TherapeuticGene-diseaseAssociation>
)

<Gene-diseaseAssociationLinkedWithAlteredGeneExpression> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithAlteredGeneExpression_tes> (  &<Gene-diseaseBiomarkerAssociation_tes> ;
          rdf:type [ <Gene-diseaseBiomarkerAssociation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithAlteredGeneExpression> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithCausalMutation>  (
    CLOSED {
       (  $<Gene-diseaseAssociationLinkedWithCausalMutation_tes> (  &<Gene-diseaseAssociationLinkedWithGeneticVariation_tes> ;
             rdf:type [ <Gene-diseaseAssociationLinkedWithGeneticVariation> ] ?
          ) ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithCausalMutation> ] ?
       )
    } OR @<Gene-diseaseAssociationLinkedWithGermlineCausalMutation> OR @<Gene-diseaseAssociationLinkedWithSomaticCausalMutation>
)

<Gene-diseaseAssociationLinkedWithChromosomalRearrangement> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithChromosomalRearrangement_tes> ( 
          &<Gene-diseaseAssociationLinkedWithGenomicAlterations_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithGenomicAlterations> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithChromosomalRearrangement> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithGeneticVariation>  (
    CLOSED {
       (  $<Gene-diseaseAssociationLinkedWithGeneticVariation_tes> (  &<Gene-diseaseAssociationLinkedWithGenomicAlterations_tes> ;
             rdf:type [ <Gene-diseaseAssociationLinkedWithGenomicAlterations> ] ?
          ) ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithGeneticVariation> ] ?
       )
    } OR @<Gene-diseaseAssociationLinkedWithCausalMutation> OR @<Gene-diseaseAssociationLinkedWithModifyingMutation> OR
    @<Gene-diseaseAssociationLinkedWithSusceptibilityMutation>
)

<Gene-diseaseAssociationLinkedWithGenomicAlterations>  (
    CLOSED {
       (  $<Gene-diseaseAssociationLinkedWithGenomicAlterations_tes> (  &<Gene-diseaseBiomarkerAssociation_tes> ;
             rdf:type [ <Gene-diseaseBiomarkerAssociation> ] ?
          ) ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithGenomicAlterations> ] ?
       )
    } OR @<FusionGene-diseaseAssociation> OR @<Gene-diseaseAssociationLinkedWithChromosomalRearrangement> OR
    @<Gene-diseaseAssociationLinkedWithGeneticVariation>
)

<Gene-diseaseAssociationLinkedWithGermlineCausalMutation> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithGermlineCausalMutation_tes> (  &<Gene-diseaseAssociationLinkedWithCausalMutation_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithCausalMutation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithGermlineCausalMutation> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithGermlineModifyingMutation> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithGermlineModifyingMutation_tes> ( 
          &<Gene-diseaseAssociationLinkedWithModifyingMutation_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithModifyingMutation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithGermlineModifyingMutation> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithModifyingMutation>  (
    CLOSED {
       (  $<Gene-diseaseAssociationLinkedWithModifyingMutation_tes> (  &<Gene-diseaseAssociationLinkedWithGeneticVariation_tes> ;
             rdf:type [ <Gene-diseaseAssociationLinkedWithGeneticVariation> ] ?
          ) ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithModifyingMutation> ] ?
       )
    } OR @<Gene-diseaseAssociationLinkedWithGermlineModifyingMutation> OR
    @<Gene-diseaseAssociationLinkedWithSomaticModifyingMutation>
)

<Gene-diseaseAssociationLinkedWithPost-translationalModification> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithPost-translationalModification_tes> (  &<Gene-diseaseBiomarkerAssociation_tes> ;
          rdf:type [ <Gene-diseaseBiomarkerAssociation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithPost-translationalModification> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithSomaticCausalMutation> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithSomaticCausalMutation_tes> (  &<Gene-diseaseAssociationLinkedWithCausalMutation_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithCausalMutation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithSomaticCausalMutation> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithSomaticModifyingMutation> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithSomaticModifyingMutation_tes> ( 
          &<Gene-diseaseAssociationLinkedWithModifyingMutation_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithModifyingMutation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithSomaticModifyingMutation> ] ?
    )
}

<Gene-diseaseAssociationLinkedWithSusceptibilityMutation> CLOSED {
    (  $<Gene-diseaseAssociationLinkedWithSusceptibilityMutation_tes> (  &<Gene-diseaseAssociationLinkedWithGeneticVariation_tes> ;
          rdf:type [ <Gene-diseaseAssociationLinkedWithGeneticVariation> ] ?
       ) ;
       rdf:type [ <Gene-diseaseAssociationLinkedWithSusceptibilityMutation> ] ?
    )
}

<Gene-diseaseBiomarkerAssociation>  (
    CLOSED {
       (  $<Gene-diseaseBiomarkerAssociation_tes> (  &<Gene-diseaseAssociation_tes> ;
             rdf:type [ <Gene-diseaseAssociation> ] ?
          ) ;
          rdf:type [ <Gene-diseaseBiomarkerAssociation> ] ?
       )
    } OR @<Gene-diseaseAssociationLinkedWithAlteredGeneExpression> OR @<Gene-diseaseAssociationLinkedWithGenomicAlterations> OR
    @<Gene-diseaseAssociationLinkedWithPost-translationalModification>
)

<GeneComponent>  (
    CLOSED {
       (  $<GeneComponent_tes> (  &<NucleicAcidPart_tes> ;
             rdf:type [ <NucleicAcidPart> ] ?
          ) ;
          rdf:type [ <GeneComponent> ] ?
       )
    } OR @<3%27UntranslatedRegion> OR @<5%27UntranslatedRegion> OR @<Exon> OR @<GeneRegulatoryComponent> OR @<Intron> OR
    @<OpenReadingFrame> OR @<ProteinCodingSequence>
)

<GeneEnhancer> CLOSED {
    (  $<GeneEnhancer_tes> (  &<GeneRegulatoryComponent_tes> ;
          rdf:type [ <GeneRegulatoryComponent> ] ?
       ) ;
       rdf:type [ <GeneEnhancer> ] ?
    )
}

<GeneExpressionValue> CLOSED {
    (  $<GeneExpressionValue_tes> (  &<DimensionalQuantity_tes> ;
          rdf:type [ <DimensionalQuantity> ] ?
       ) ;
       rdf:type [ <GeneExpressionValue> ] ?
    )
}

<GenePromoter> CLOSED {
    (  $<GenePromoter_tes> (  &<GeneRegulatoryComponent_tes> ;
          rdf:type [ <GeneRegulatoryComponent> ] ?
       ) ;
       rdf:type [ <GenePromoter> ] ?
    )
}

<GenerationNumber> CLOSED {
    (  $<GenerationNumber_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <GenerationNumber> ] ?
    )
}

<GeneRegulatoryComponent>  (
    CLOSED {
       (  $<GeneRegulatoryComponent_tes> (  &<GeneComponent_tes> ;
             rdf:type [ <GeneComponent> ] ?
          ) ;
          rdf:type [ <GeneRegulatoryComponent> ] ?
       )
    } OR @<GeneEnhancer> OR @<GenePromoter>
)

<GenericName> CLOSED {
    (  $<GenericName_tes> (  &<Name_tes> ;
          rdf:type [ <Name> ] ?
       ) ;
       rdf:type [ <GenericName> ] ?
    )
}

<GeneSymbol> CLOSED {
    (  $<GeneSymbol_tes> (  &<ScientificName_tes> ;
          rdf:type [ <ScientificName> ] ?
       ) ;
       rdf:type [ <GeneSymbol> ] ?
    )
}

<GeneticData> CLOSED {
    (  $<GeneticData_tes> (  &<BiologicalData_tes> ;
          rdf:type [ <BiologicalData> ] ?
       ) ;
       rdf:type [ <GeneticData> ] ?
    )
}

<GeneticPolymorphism> CLOSED {
    (  $<GeneticPolymorphism_tes> (  &<NucleicAcidPart_tes> ;
          rdf:type [ <NucleicAcidPart> ] ?
       ) ;
       rdf:type [ <GeneticPolymorphism> ] ?
    )
}

<Genome> CLOSED {
    (  $<Genome_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <Genome> ] ?
    )
}

<GenomicSequenceVariant>  (
    CLOSED {
       (  $<GenomicSequenceVariant_tes> (  &<NucleicAcidPart_tes> ;
             rdf:type [ <NucleicAcidPart> ] ?
          ) ;
          rdf:type [ <GenomicSequenceVariant> ] ?
       )
    } OR @<Haplotype>
)

<Genotype> CLOSED {
    (  $<Genotype_tes> (  &<FunctionalSpecification_tes> ;
          rdf:type [ <FunctionalSpecification> ] ?
       ) ;
       rdf:type [ <Genotype> ] ?
    )
}

<GeographicHeatmap> CLOSED {
    (  $<GeographicHeatmap_tes> (  &<Heatmap_tes> ;
          rdf:type [ <Heatmap> ] ?
       ) ;
       rdf:type [ <GeographicHeatmap> ] ?
    )
}

<GeographicImage> CLOSED {
    (  $<GeographicImage_tes> (  &<Photograph_tes> ;
          rdf:type [ <Photograph> ] ?
       ) ;
       rdf:type [ <GeographicImage> ] ?
    )
}

<GeographicPosition>  (
    CLOSED {
       (  $<GeographicPosition_tes> (  &<Position_tes> ;
             rdf:type [ <Position> ] ?
          ) ;
          rdf:type [ <GeographicPosition> ] ?
       )
    } OR @<Latitude> OR @<Longitude> OR @<PostalCode>
)

<GeographicRegion>  (
    CLOSED {
       (  $<GeographicRegion_tes> (  &<SpatialRegion_tes> ;
             rdf:type [ <SpatialRegion> ] ?
          ) ;
          rdf:type [ <GeographicRegion> ] ?
       )
    } OR @<Environment> OR @<GeolegalRegion>
)

<GeolegalRegion>  (
    CLOSED {
       (  $<GeolegalRegion_tes> (  &<GeographicRegion_tes> ;
             rdf:type [ <GeographicRegion> ] ?
          ) ;
          rdf:type [ <GeolegalRegion> ] ?
       )
    } OR @<GeopoliticalRegion>
)

<GeometricEntity>  (
    CLOSED {
       (  $<GeometricEntity_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <GeometricEntity> ] ?
       )
    } OR @<Curve> OR @<Point> OR @<Polygon> OR @<PolygonalFace> OR @<PolyhedralSkeleton> OR @<PolyhedralSurface> OR @<Polyline>
)

<GeopoliticalRegion>  (
    CLOSED {
       (  $<GeopoliticalRegion_tes> (  &<GeolegalRegion_tes> ;
             rdf:type [ <GeolegalRegion> ] ?
          ) ;
          rdf:type [ <GeopoliticalRegion> ] ?
       )
    } OR @<City> OR @<Country> OR @<Province> OR @<State> OR @<Territory> OR @<Township>
)

<GermaniumAtom> CLOSED {
    (  $<GermaniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <GermaniumAtom> ] ?
    )
}

<Gesturing> CLOSED {
    (  $<Gesturing_tes> (  &<Communicating_tes> ;
          rdf:type [ <Communicating> ] ?
       ) ;
       rdf:type [ <Gesturing> ] ?
    )
}

<GlassyCarbon> CLOSED {
    (  $<GlassyCarbon_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <GlassyCarbon> ] ?
    )
}

<GlobalMaximalStationaryPoint> CLOSED {
    (  $<GlobalMaximalStationaryPoint_tes> (  &<LocalMaximumStationaryPoint_tes> ;
          rdf:type [ <LocalMaximumStationaryPoint> ] ?
       ) ;
       rdf:type [ <GlobalMaximalStationaryPoint> ] ?
    )
}

<GlobalMinimalStationaryPoint> CLOSED {
    (  $<GlobalMinimalStationaryPoint_tes> (  &<LocalMinimumStationaryPoint_tes> ;
          rdf:type [ <LocalMinimumStationaryPoint> ] ?
       ) ;
       rdf:type [ <GlobalMinimalStationaryPoint> ] ?
    )
}

<GoldAtom> CLOSED {
    (  $<GoldAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <GoldAtom> ] ?
    )
}

<GoodQuality> CLOSED {
    (  $<GoodQuality_tes> (  &<QualityDescriptor_tes> ;
          rdf:type [ <QualityDescriptor> ] ?
       ) ;
       rdf:type [ <GoodQuality> ] ?
    )
}

<GraduateStudentAdvisorRole> CLOSED {
    (  $<GraduateStudentAdvisorRole_tes> (  &<StudentAdvisorRole_tes> ;
          rdf:type [ <StudentAdvisorRole> ] ?
       ) ;
       rdf:type [ <GraduateStudentAdvisorRole> ] ?
    )
}

<Graphite> CLOSED {
    (  $<Graphite_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <Graphite> ] ?
    )
}

<GraphTitle> CLOSED {
    (  $<GraphTitle_tes> (  &<Title_tes> ;
          rdf:type [ <Title> ] ?
       ) ;
       rdf:type [ <GraphTitle> ] ?
    )
}

<Gratitude> CLOSED {
    (  $<Gratitude_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Gratitude> ] ?
    )
}

<Grief> CLOSED {
    (  $<Grief_tes> (  &<Sadness_tes> ;
          rdf:type [ <Sadness> ] ?
       ) ;
       rdf:type [ <Grief> ] ?
    )
}

<Guilt> CLOSED {
    (  $<Guilt_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Guilt> ] ?
    )
}

<HafniumAtom> CLOSED {
    (  $<HafniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <HafniumAtom> ] ?
    )
}

<Haplotype> CLOSED {
    (  $<Haplotype_tes> (  &<GenomicSequenceVariant_tes> ;
          rdf:type [ <GenomicSequenceVariant> ] ?
       ) ;
       rdf:type [ <Haplotype> ] ?
    )
}

<Happiness>  (
    CLOSED {
       (  $<Happiness_tes> (  &<PositiveEmotion_tes> ;
             rdf:type [ <PositiveEmotion> ] ?
          ) ;
          rdf:type [ <Happiness> ] ?
       )
    } OR @<Contentment> OR @<Euphoria> OR @<Joy> OR @<Pleasure>
)

<HardDiskDrive>  (
    CLOSED {
       (  $<HardDiskDrive_tes> (  &<DataStorageDevice_tes> ;
             rdf:type [ <DataStorageDevice> ] ?
          ) ;
          rdf:type [ <HardDiskDrive> ] ?
       )
    } OR @<SolidStateHardDrive>
)

<HassiumAtom> CLOSED {
    (  $<HassiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <HassiumAtom> ] ?
    )
}

<Hate> CLOSED {
    (  $<Hate_tes> (  &<Disgust_tes> ;
          rdf:type [ <Disgust> ] ?
       ) ;
       rdf:type [ <Hate> ] ?
    )
}

<Healthy> CLOSED {
    (  $<Healthy_tes> (  &<Alive_tes> ;
          rdf:type [ <Alive> ] ?
       ) ;
       rdf:type [ <Healthy> ] ?
    )
}

<Heatmap>  (
    CLOSED {
       (  $<Heatmap_tes> (  &<Chart_tes> ;
             rdf:type [ <Chart> ] ?
          ) ;
          rdf:type [ <Heatmap> ] ?
       )
    } OR @<GeographicHeatmap>
)

<Height> CLOSED {
    (  $<Height_tes> (  &<1DExtentQuantity_tes> ;
          rdf:type [ <1DExtentQuantity> ] ?
       ) ;
       rdf:type [ <Height> ] ?
    )
}

<Helicity>  (
    CLOSED {
       (  $<Helicity_tes> (  &<StructuralQuality_tes> ;
             rdf:type [ <StructuralQuality> ] ?
          ) ;
          rdf:type [ <Helicity> ] ?
       )
    } OR @<CircularlyHelical> OR @<Left-handedHelical> OR @<Right-handedHelical>
)

<HeliumAtom> CLOSED {
    (  $<HeliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <HeliumAtom> ] ?
    )
}

<Hemizygous> CLOSED {
    (  $<Hemizygous_tes> (  &<Zygosity_tes> ;
          rdf:type [ <Zygosity> ] ?
       ) ;
       rdf:type [ <Hemizygous> ] ?
    )
}

<Hermaphrodite> CLOSED {
    (  $<Hermaphrodite_tes> (  &<Intersex_tes> ;
          rdf:type [ <Intersex> ] ?
       ) ;
       rdf:type [ <Hermaphrodite> ] ?
    )
}

<HeterocyclicRing> CLOSED {
    (  $<HeterocyclicRing_tes> (  &<Ring_tes> ;
          rdf:type [ <Ring> ] ?
       ) ;
       rdf:type [ <HeterocyclicRing> ] ?
    )
}

<Heterogeneous> CLOSED {
    (  $<Heterogeneous_tes> (  &<CompositionalQuality_tes> ;
          rdf:type [ <CompositionalQuality> ] ?
       ) ;
       rdf:type [ <Heterogeneous> ] ?
    )
}

<HeterogeneousSubstance>  (
    CLOSED {
       (  $<HeterogeneousSubstance_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <HeterogeneousSubstance> ] ?
       )
    } OR @<BiologicalEntity> OR @<ChemicalSalt> OR @<Device> OR @<LiquidSolution> OR @<LiquidSolutionComponent> OR @<Placebo> OR
    @<Reagent> OR @<Sample> OR @<Wave>
)

<Heterozygous> CLOSED {
    (  $<Heterozygous_tes> (  &<Zygosity_tes> ;
          rdf:type [ <Zygosity> ] ?
       ) ;
       rdf:type [ <Heterozygous> ] ?
    )
}

<HgvsNotation> CLOSED {
    (  $<HgvsNotation_tes> (  &<SequenceVariationNotation_tes> ;
          rdf:type [ <SequenceVariationNotation> ] ?
       ) ;
       rdf:type [ <HgvsNotation> ] ?
    )
}

<Histogram>  (
    CLOSED {
       (  $<Histogram_tes> (  &<Chart_tes> ;
             rdf:type [ <Chart> ] ?
          ) ;
          rdf:type [ <Histogram> ] ?
       )
    } OR @<BlockHistogram>
)

<History>  (
    CLOSED {
       (  $<History_tes> (  &<Description_tes> ;
             rdf:type [ <Description> ] ?
          ) ;
          rdf:type [ <History> ] ?
       )
    } OR @<EvolutionaryLineage> OR @<FamilyHistory> OR @<MedicalHistory>
)

<Hole> CLOSED {
    (  $<Hole_tes> (  &<Site_tes> ;
          rdf:type [ <Site> ] ?
       ) ;
       rdf:type [ <Hole> ] ?
    )
}

<HolmiumAtom> CLOSED {
    (  $<HolmiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <HolmiumAtom> ] ?
    )
}

<HomePhoneNumber> CLOSED {
    (  $<HomePhoneNumber_tes> (  &<TelephoneNumber_tes> ;
          rdf:type [ <TelephoneNumber> ] ?
       ) ;
       rdf:type [ <HomePhoneNumber> ] ?
    )
}

<HomocyclicRing> CLOSED {
    (  $<HomocyclicRing_tes> (  &<Ring_tes> ;
          rdf:type [ <Ring> ] ?
       ) ;
       rdf:type [ <HomocyclicRing> ] ?
    )
}

<Homogeneous> CLOSED {
    (  $<Homogeneous_tes> (  &<CompositionalQuality_tes> ;
          rdf:type [ <CompositionalQuality> ] ?
       ) ;
       rdf:type [ <Homogeneous> ] ?
    )
}

<HomogeneousSubstance>  (
    CLOSED {
       (  $<HomogeneousSubstance_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <HomogeneousSubstance> ] ?
       )
    } OR @<ChemicalElement>
)

<Homonym> CLOSED {
    (  $<Homonym_tes> (  &<TermVariant_tes> ;
          rdf:type [ <TermVariant> ] ?
       ) ;
       rdf:type [ <Homonym> ] ?
    )
}

<Homozygous> CLOSED {
    (  $<Homozygous_tes> (  &<Zygosity_tes> ;
          rdf:type [ <Zygosity> ] ?
       ) ;
       rdf:type [ <Homozygous> ] ?
    )
}

<Honor%27sThesis> CLOSED {
    (  $<Honor%27sThesis_tes> (  &<ThesisDocument_tes> ;
          rdf:type [ <ThesisDocument> ] ?
       ) ;
       rdf:type [ <Honor%27sThesis> ] ?
    )
}

<Hope> CLOSED {
    (  $<Hope_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Hope> ] ?
    )
}

<HorizontalBarGraph> CLOSED {
    (  $<HorizontalBarGraph_tes> (  &<BarGraph_tes> ;
          rdf:type [ <BarGraph> ] ?
       ) ;
       rdf:type [ <HorizontalBarGraph> ] ?
    )
}

<HorizontalLine> CLOSED {
    (  $<HorizontalLine_tes> (  &<PositionallyOrientedLine_tes> ;
          rdf:type [ <PositionallyOrientedLine> ] ?
       ) ;
       rdf:type [ <HorizontalLine> ] ?
    )
}

<Host> CLOSED {
    (  $<Host_tes> (  &<Organism_tes> ;
          rdf:type [ <Organism> ] ?
       ) ;
       rdf:type [ <Host> ] ?
    )
}

<Hostility>  (
    CLOSED {
       (  $<Hostility_tes> (  &<NegativeEmotion_tes> ;
             rdf:type [ <NegativeEmotion> ] ?
          ) ;
          rdf:type [ <Hostility> ] ?
       )
    } OR @<Disgust>
)

<HostRole> CLOSED {
    (  $<HostRole_tes> (  &<ChemicalSubstanceRole_tes> ;
          rdf:type [ <ChemicalSubstanceRole> ] ?
       ) ;
       rdf:type [ <HostRole> ] ?
    )
}

<Hour> CLOSED {
    (  $<Hour_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Hour> ] ?
    )
}

<Human> CLOSED {
    (  $<Human_tes> (  &<MulticellularOrganism_tes> ;
          rdf:type [ <MulticellularOrganism> ] ?
       ) ;
       rdf:type [ <Human> ] ?
    )
}

<HumanPopulation>  (
    CLOSED {
       (  $<HumanPopulation_tes> (  &<Population_tes> ;
             rdf:type [ <Population> ] ?
          ) ;
          rdf:type [ <HumanPopulation> ] ?
       )
    } OR @<EthnicGroup>
)

<Humiliation> CLOSED {
    (  $<Humiliation_tes> (  &<Hurt_tes> ;
          rdf:type [ <Hurt> ] ?
       ) ;
       rdf:type [ <Humiliation> ] ?
    )
}

<Hunger> CLOSED {
    (  $<Hunger_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Hunger> ] ?
    )
}

<Hurt>  (
    CLOSED {
       (  $<Hurt_tes> (  &<NegativeEmotion_tes> ;
             rdf:type [ <NegativeEmotion> ] ?
          ) ;
          rdf:type [ <Hurt> ] ?
       )
    } OR @<Humiliation> OR @<Pain> OR @<Suffering>
)

<HydrogenAtom> CLOSED {
    (  $<HydrogenAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <HydrogenAtom> ] ?
    )
}

<HydrogenBond>  (
    CLOSED {
       (  $<HydrogenBond_tes> (  &<WeakSubmolecularComponent_tes> ;
             rdf:type [ <WeakSubmolecularComponent> ] ?
          ) ;
          rdf:type [ <HydrogenBond> ] ?
       )
    } OR @<LowBarrierHydrogenBond>
)

<Hypernym> CLOSED {
    (  $<Hypernym_tes> (  &<TermVariant_tes> ;
          rdf:type [ <TermVariant> ] ?
       ) ;
       rdf:type [ <Hypernym> ] ?
    )
}

<Hyponym> CLOSED {
    (  $<Hyponym_tes> (  &<TermVariant_tes> ;
          rdf:type [ <TermVariant> ] ?
       ) ;
       rdf:type [ <Hyponym> ] ?
    )
}

<Hypothesis> CLOSED {
    (  $<Hypothesis_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Hypothesis> ] ?
    )
}

<Hypothetical>  (
    CLOSED {
       (  $<Hypothetical_tes> (  &<ExistenceQuality_tes> ;
             rdf:type [ <ExistenceQuality> ] ?
          ) ;
          rdf:type [ <Hypothetical> ] ?
       )
    } OR @<Fictional> OR @<Predicted>
)

<Hysteria> CLOSED {
    (  $<Hysteria_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Hysteria> ] ?
    )
}

<Idea> CLOSED {
    (  $<Idea_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Idea> ] ?
    )
}

<Identifier>  (
    CLOSED {
       (  $<Identifier_tes> (  &<Label_tes> ;
             rdf:type [ <Label> ] ? ;
             <isIdentifierFor> @<Entity> ?
          ) ;
          rdf:type [ <Identifier> ] ?
       )
    } OR @<InformationalEntityIdentifier> OR @<PhysicalEntityIdentifier> OR @<PositionalIdentifier> OR @<UniqueIdentifier> OR
    @<VersionLabel>
)

<Image>  (
    CLOSED {
       (  $<Image_tes> (  &<Figure_tes> ;
             rdf:type [ <Figure> ] ?
          ) ;
          rdf:type [ <Image> ] ?
       )
    } OR @<Photograph>
)

<Implies-%3E> CLOSED {
    (  $<Implies-%3E_tes> (  &<LogicalOperator_tes> ;
          rdf:type [ <LogicalOperator> ] ?
       ) ;
       rdf:type [ <Implies-%3E> ] ?
    )
}

<InactiveIngredient> CLOSED {
    (  $<InactiveIngredient_tes> (  &<PharmaceuticalIngredient_tes> ;
          rdf:type [ <PharmaceuticalIngredient> ] ?
       ) ;
       rdf:type [ <InactiveIngredient> ] ?
    )
}

<InCHINotation> CLOSED {
    (  $<InCHINotation_tes> (  &<ChemicalNotation_tes> ;
          rdf:type [ <ChemicalNotation> ] ?
       ) ;
       rdf:type [ <InCHINotation> ] ?
    )
}

<InclusionCriterion> CLOSED {
    (  $<InclusionCriterion_tes> (  &<Criterion_tes> ;
          rdf:type [ <Criterion> ] ?
       ) ;
       rdf:type [ <InclusionCriterion> ] ?
    )
}

<Increased> CLOSED {
    (  $<Increased_tes> (  &<Abnormal_tes> ;
          rdf:type [ <Abnormal> ] ?
       ) ;
       rdf:type [ <Increased> ] ?
    )
}

<IncreasedChemicalDestruction> CLOSED {
    (  $<IncreasedChemicalDestruction_tes> (  &<ChemicalDestruction_tes> ;
          rdf:type [ <ChemicalDestruction> ] ?
       ) ;
       rdf:type [ <IncreasedChemicalDestruction> ] ?
    )
}

<IncreasedDurationOfProcessFromIncreasedRegulation> CLOSED {
    (  $<IncreasedDurationOfProcessFromIncreasedRegulation_tes> (  &<RegulationOfProcessDuration_tes> ;
          rdf:type [ <RegulationOfProcessDuration> ] ?
       ) ;
       rdf:type [ <IncreasedDurationOfProcessFromIncreasedRegulation> ] ?
    )
}

<IncreasedFrequencyOfProcessFromIncreasedRegulation> CLOSED {
    (  $<IncreasedFrequencyOfProcessFromIncreasedRegulation_tes> (  &<RegulationOfProcessFrequency_tes> ;
          rdf:type [ <RegulationOfProcessFrequency> ] ?
       ) ;
       rdf:type [ <IncreasedFrequencyOfProcessFromIncreasedRegulation> ] ?
    )
}

<IncreasedMolecularDegradationFromDecreasedRegulation> CLOSED {
    (  $<IncreasedMolecularDegradationFromDecreasedRegulation_tes> (  &<RegulationOfMolecularDegradation_tes> ;
          rdf:type [ <RegulationOfMolecularDegradation> ] ?
       ) ;
       rdf:type [ <IncreasedMolecularDegradationFromDecreasedRegulation> ] ?
    )
}

<IncreasedMolecularDegradationFromIncreasedRegulation> CLOSED {
    (  $<IncreasedMolecularDegradationFromIncreasedRegulation_tes> (  &<RegulationOfMolecularDegradation_tes> ;
          rdf:type [ <RegulationOfMolecularDegradation> ] ?
       ) ;
       rdf:type [ <IncreasedMolecularDegradationFromIncreasedRegulation> ] ?
    )
}

<IncreasedMolecularProductionFromDecreasedRegulation> CLOSED {
    (  $<IncreasedMolecularProductionFromDecreasedRegulation_tes> (  &<RegulationOfMolecularProduction_tes> ;
          rdf:type [ <RegulationOfMolecularProduction> ] ?
       ) ;
       rdf:type [ <IncreasedMolecularProductionFromDecreasedRegulation> ] ?
    )
}

<IncreasedMolecularProductionFromIncreasedRegulation> CLOSED {
    (  $<IncreasedMolecularProductionFromIncreasedRegulation_tes> (  &<RegulationOfMolecularProduction_tes> ;
          rdf:type [ <RegulationOfMolecularProduction> ] ?
       ) ;
       rdf:type [ <IncreasedMolecularProductionFromIncreasedRegulation> ] ?
    )
}

<IncreasedObjectConsumptionFromIncreasedRegulation> CLOSED {
    (  $<IncreasedObjectConsumptionFromIncreasedRegulation_tes> (  &<RegulationOfObjectConsumption_tes> ;
          rdf:type [ <RegulationOfObjectConsumption> ] ?
       ) ;
       rdf:type [ <IncreasedObjectConsumptionFromIncreasedRegulation> ] ?
    )
}

<IncreasedObjectProductionFromIncreasedRegulation> CLOSED {
    (  $<IncreasedObjectProductionFromIncreasedRegulation_tes> (  &<RegulationOfObjectProduction_tes> ;
          rdf:type [ <RegulationOfObjectProduction> ] ?
       ) ;
       rdf:type [ <IncreasedObjectProductionFromIncreasedRegulation> ] ?
    )
}

<IncreasedSpatialExtentOfProcessFromIncreasedRegulation> CLOSED {
    (  $<IncreasedSpatialExtentOfProcessFromIncreasedRegulation_tes> (  &<RegulationOfProcessSpatialExtent_tes> ;
          rdf:type [ <RegulationOfProcessSpatialExtent> ] ?
       ) ;
       rdf:type [ <IncreasedSpatialExtentOfProcessFromIncreasedRegulation> ] ?
    )
}

<IncreaseInNumberOfObjectsProduced> CLOSED {
    (  $<IncreaseInNumberOfObjectsProduced_tes> (  &<DifferenceInNumberOfObjectsProduced_tes> ;
          rdf:type [ <DifferenceInNumberOfObjectsProduced> ] ?
       ) ;
       rdf:type [ <IncreaseInNumberOfObjectsProduced> ] ?
    )
}

<IncreasingLine> CLOSED {
    (  $<IncreasingLine_tes> (  &<TrendLine_tes> ;
          rdf:type [ <TrendLine> ] ?
       ) ;
       rdf:type [ <IncreasingLine> ] ?
    )
}

<Indecision> CLOSED {
    (  $<Indecision_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Indecision> ] ?
    )
}

<IndependentVariable>  (
    CLOSED {
       (  $<IndependentVariable_tes> (  &<Variable_tes> ;
             rdf:type [ <Variable> ] ?
          ) ;
          rdf:type [ <IndependentVariable> ] ?
       )
    } OR @<Parameter>
)

<Indifference>  (
    CLOSED {
       (  $<Indifference_tes> (  &<Emotion_tes> ;
             rdf:type [ <Emotion> ] ?
          ) ;
          rdf:type [ <Indifference> ] ?
       )
    } OR @<Apathy>
)

<IndiumAtom> CLOSED {
    (  $<IndiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <IndiumAtom> ] ?
    )
}

<InductiveArgument> CLOSED {
    (  $<InductiveArgument_tes> (  &<Argument_tes> ;
          rdf:type [ <Argument> ] ?
       ) ;
       rdf:type [ <InductiveArgument> ] ?
    )
}

<InfiniteLine> CLOSED {
    (  $<InfiniteLine_tes> (  &<Line_tes> ;
          rdf:type [ <Line> ] ?
       ) ;
       rdf:type [ <InfiniteLine> ] ?
    )
}

<InformationalEntityIdentifier>  (
    CLOSED {
       (  $<InformationalEntityIdentifier_tes> (  &<Identifier_tes> ;
             rdf:type [ <Identifier> ] ?
          ) ;
          rdf:type [ <InformationalEntityIdentifier> ] ?
       )
    } OR @<EmailAddress> OR @<IPNumber> OR @<RecordIdentifier> OR @<SoftwareProcessIdentifier> OR @<TelephoneNumber> OR @<URL>
)

<InformationalQuality>  (
    CLOSED {
       (  $<InformationalQuality_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <InformationalQuality> ] ?
       )
    } OR @<AgreementQuality> OR @<QualityDescriptor> OR @<QuantityModifier> OR @<SatisfactionQualifier> OR @<StatusDescriptor> OR
    @<TemporalQualifier> OR @<TruthValue>
)

<InformationContentEntity>  (
    CLOSED {
       (  $<InformationContentEntity_tes> (  &<Object_tes> ;
             rdf:type [ <Object> ] ?
          ) ;
          rdf:type [ <InformationContentEntity> ] ?
       )
    } OR @<ComputationalEntity> OR @<GeometricEntity> OR @<LanguageEntity> OR @<MathematicalEntity> OR @<Media> OR
    @<Representation> OR @<SocialEntity>
)

<InformationDecoding> CLOSED {
    (  $<InformationDecoding_tes> (  &<InformationTranslation_tes> ;
          rdf:type [ <InformationTranslation> ] ?
       ) ;
       rdf:type [ <InformationDecoding> ] ?
    )
}

<InformationEncoding> CLOSED {
    (  $<InformationEncoding_tes> (  &<InformationTranslation_tes> ;
          rdf:type [ <InformationTranslation> ] ?
       ) ;
       rdf:type [ <InformationEncoding> ] ?
    )
}

<InformationMaintenance> CLOSED {
    (  $<InformationMaintenance_tes> (  &<ProcessMaintenance_tes> ;
          rdf:type [ <ProcessMaintenance> ] ?
       ) ;
       rdf:type [ <InformationMaintenance> ] ?
    )
}

<InformationProcessing>  (
    CLOSED {
       (  $<InformationProcessing_tes> (  &<Procedure_tes> ;
             rdf:type [ <Procedure> ] ?
          ) ;
          rdf:type [ <InformationProcessing> ] ?
       )
    } OR @<DataAnalysis> OR @<DataCollection> OR @<DataTransformation> OR @<InformationTranslation> OR @<LiteratureCuration> OR
    @<SofwareExecution>
)

<InformationTranslation>  (
    CLOSED {
       (  $<InformationTranslation_tes> (  &<InformationProcessing_tes> ;
             rdf:type [ <InformationProcessing> ] ?
          ) ;
          rdf:type [ <InformationTranslation> ] ?
       )
    } OR @<InformationDecoding> OR @<InformationEncoding>
)

<Ingredient>  (
    CLOSED {
       (  $<Ingredient_tes> (  &<ChemicalSubstance_tes> ;
             rdf:type [ <ChemicalSubstance> ] ?
          ) ;
          rdf:type [ <Ingredient> ] ?
       )
    } OR @<PharmaceuticalIngredient>
)

<Inhibitor> CLOSED {
    (  $<Inhibitor_tes> (  &<MolecularRegulator_tes> ;
          rdf:type [ <MolecularRegulator> ] ?
       ) ;
       rdf:type [ <Inhibitor> ] ?
    )
}

<InhibitorRole> CLOSED {
    (  $<InhibitorRole_tes> (  &<RegulatorRole_tes> ;
          rdf:type [ <RegulatorRole> ] ?
       ) ;
       rdf:type [ <InhibitorRole> ] ?
    )
}

<InorganicReaction>  (
    CLOSED {
       (  $<InorganicReaction_tes> (  &<ChemicalReaction_tes> ;
             rdf:type [ <ChemicalReaction> ] ?
          ) ;
          rdf:type [ <InorganicReaction> ] ?
       )
    } OR @<DecompositionReaction> OR @<DisplacementReaction> OR @<SynthesisReaction>
)

<InsertionVariantRole> CLOSED {
    (  $<InsertionVariantRole_tes> (  &<SequenceVariantRole_tes> ;
          rdf:type [ <SequenceVariantRole> ] ?
       ) ;
       rdf:type [ <InsertionVariantRole> ] ?
    )
}

<Institute> CLOSED {
    (  $<Institute_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <Institute> ] ?
    )
}

<IntegerScale> CLOSED {
    (  $<IntegerScale_tes> (  &<NumericScale_tes> ;
          rdf:type [ <NumericScale> ] ?
       ) ;
       rdf:type [ <IntegerScale> ] ?
    )
}

<Intensity>  (
    CLOSED {
       (  $<Intensity_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <Intensity> ] ?
       )
    } OR @<Fatal> OR @<Mild> OR @<Moderate> OR @<Severe> OR @<Strong> OR @<Weak>
)

<Intent> CLOSED {
    (  $<Intent_tes> (  &<Desire_tes> ;
          rdf:type [ <Desire> ] ?
       ) ;
       rdf:type [ <Intent> ] ?
    )
}

<Interacting>  (
    CLOSED {
       (  $<Interacting_tes> (  &<Process_tes> ;
             rdf:type [ <Process> ] ?
          ) ;
          rdf:type [ <Interacting> ] ?
       )
    } OR @<ChemicalInteraction> OR @<Communicating> OR @<Comparing> OR @<Creating> OR @<Destroying> OR @<Measuring> OR @<Modifying>
    OR @<Observing> OR @<Regulating> OR @<Sampling> OR @<Transporting>
)

<Interest>  (
    CLOSED {
       (  $<Interest_tes> (  &<PositiveEmotion_tes> ;
             rdf:type [ <PositiveEmotion> ] ?
          ) ;
          rdf:type [ <Interest> ] ?
       )
    } OR @<Desire>
)

<Intersection> CLOSED {
    (  $<Intersection_tes> (  &<List_tes> ;
          rdf:type [ <List> ] ?
       ) ;
       rdf:type [ <Intersection> ] ?
    )
}

<Intersex>  (
    CLOSED {
       (  $<Intersex_tes> (  &<BiologicalSex_tes> ;
             rdf:type [ <BiologicalSex> ] ?
          ) ;
          rdf:type [ <Intersex> ] ?
       )
    } OR @<Hermaphrodite>
)

<Interval>  (
    CLOSED {
       (  $<Interval_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Interval> ] ?
       )
    } OR @<LeftClosedInterval> OR @<LeftOpenInterval> OR @<PageRange> OR @<RightClosedInterval> OR @<RightOpenInterval>
)

<InterventionGroup> CLOSED {
    (  $<InterventionGroup_tes> (  &<StudyGroup_tes> ;
          rdf:type [ <StudyGroup> ] ?
       ) ;
       rdf:type [ <InterventionGroup> ] ?
    )
}

<InterventionStudy>  (
    CLOSED {
       (  $<InterventionStudy_tes> (  &<Experiment_tes> ;
             rdf:type [ <Experiment> ] ?
          ) ;
          rdf:type [ <InterventionStudy> ] ?
       )
    } OR @<ClinicalTrial>
)

<IntroductionSection> CLOSED {
    (  $<IntroductionSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <IntroductionSection> ] ?
    )
}

<Intron> CLOSED {
    (  $<Intron_tes> (  &<GeneComponent_tes> ;
          rdf:type [ <GeneComponent> ] ?
       ) ;
       rdf:type [ <Intron> ] ?
    )
}

<InvalidArgument> CLOSED {
    (  $<InvalidArgument_tes> (  &<Argument_tes> ;
          rdf:type [ <Argument> ] ?
       ) ;
       rdf:type [ <InvalidArgument> ] ?
    )
}

<Investigation>  (
    CLOSED {
       (  $<Investigation_tes> (  &<Procedure_tes> ;
             rdf:type [ <Procedure> ] ?
          ) ;
          rdf:type [ <Investigation> ] ?
       )
    } OR @<Experiment> OR @<Study>
)

<InvestigationalRole>  (
    CLOSED {
       (  $<InvestigationalRole_tes> (  &<ProcessualRole_tes> ;
             rdf:type [ <ProcessualRole> ] ?
          ) ;
          rdf:type [ <InvestigationalRole> ] ?
       )
    } OR @<EvaluationRole> OR @<SubjectRole>
)

<IodineAtom> CLOSED {
    (  $<IodineAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <IodineAtom> ] ?
    )
}

<Ion>  (
    CLOSED {
       (  $<Ion_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ?
          ) ;
          rdf:type [ <Ion> ] ?
       )
    } OR @<Anion> OR @<Cation>
)

<IonicCompound> CLOSED {
    (  $<IonicCompound_tes> (  &<BinaryCompound_tes> ;
          rdf:type [ <BinaryCompound> ] ?
       ) ;
       rdf:type [ <IonicCompound> ] ?
    )
}

<IonicInteraction>  (
    CLOSED {
       (  $<IonicInteraction_tes> (  &<WeakSubmolecularComponent_tes> ;
             rdf:type [ <WeakSubmolecularComponent> ] ?
          ) ;
          rdf:type [ <IonicInteraction> ] ?
       )
    } OR @<CationPiInteraction>
)

<Ionsdaleite> CLOSED {
    (  $<Ionsdaleite_tes> (  &<CarbonAllotrope_tes> ;
          rdf:type [ <CarbonAllotrope> ] ?
       ) ;
       rdf:type [ <Ionsdaleite> ] ?
    )
}

<IPNumber> CLOSED {
    (  $<IPNumber_tes> (  &<InformationalEntityIdentifier_tes> ;
          rdf:type [ <InformationalEntityIdentifier> ] ?
       ) ;
       rdf:type [ <IPNumber> ] ?
    )
}

<IridiumAtom> CLOSED {
    (  $<IridiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <IridiumAtom> ] ?
    )
}

<IronAtom> CLOSED {
    (  $<IronAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <IronAtom> ] ?
    )
}

<Irritability> CLOSED {
    (  $<Irritability_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Irritability> ] ?
    )
}

<Isomer>  (
    CLOSED {
       (  $<Isomer_tes> (  &<Molecule_tes> ;
             rdf:type [ <Molecule> ] ?
          ) ;
          rdf:type [ <Isomer> ] ?
       )
    } OR @<Stereoisomer> OR @<StructuralIsomer>
)

<IsomerizationReaction> CLOSED {
    (  $<IsomerizationReaction_tes> (  &<ChemicalReaction_tes> ;
          rdf:type [ <ChemicalReaction> ] ?
       ) ;
       rdf:type [ <IsomerizationReaction> ] ?
    )
}

<Issue> CLOSED {
    (  $<Issue_tes> (  &<EditedPublication_tes> ;
          rdf:type [ <EditedPublication> ] ?
       ) ;
       rdf:type [ <Issue> ] ?
    )
}

<Jealousy> CLOSED {
    (  $<Jealousy_tes> (  &<Envy_tes> ;
          rdf:type [ <Envy> ] ?
       ) ;
       rdf:type [ <Jealousy> ] ?
    )
}

<Journal> CLOSED {
    (  $<Journal_tes> (  &<Periodical_tes> ;
          rdf:type [ <Periodical> ] ?
       ) ;
       rdf:type [ <Journal> ] ?
    )
}

<Joy> CLOSED {
    (  $<Joy_tes> (  &<Happiness_tes> ;
          rdf:type [ <Happiness> ] ?
       ) ;
       rdf:type [ <Joy> ] ?
    )
}

<Justification>  (
    CLOSED {
       (  $<Justification_tes> (  &<Proposition_tes> ;
             rdf:type [ <Proposition> ] ?
          ) ;
          rdf:type [ <Justification> ] ?
       )
    } OR @<Reason>
)

<Keyword> CLOSED {
    (  $<Keyword_tes> (  &<Descriptor_tes> ;
          rdf:type [ <Descriptor> ] ?
       ) ;
       rdf:type [ <Keyword> ] ?
    )
}

<KryptonAtom> CLOSED {
    (  $<KryptonAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <KryptonAtom> ] ?
    )
}

<Label>  (
    CLOSED {
       (  $<Label_tes> (  &<Term_tes> ;
             rdf:type [ <Term> ] ?
          ) ;
          rdf:type [ <Label> ] ?
       )
    } OR @<Identifier> OR @<LanguageLabel> OR @<Name> OR @<NamespaceLabel> OR @<NumericLabel> OR @<Title>
)

<Language>  (
    CLOSED {
       (  $<Language_tes> (  &<LanguageEntity_tes> ;
             rdf:type [ <LanguageEntity> ] ?
          ) ;
          rdf:type [ <Language> ] ?
       )
    } OR @<SignLanguage> OR @<VerbalLanguage> OR @<WrittenLanguage>
)

<LanguageEntity>  (
    CLOSED {
       (  $<LanguageEntity_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ? ;
             <isAnnotationOf> @<Entity> ?
          ) ;
          rdf:type [ <LanguageEntity> ] ?
       )
    } OR @<Character> OR @<Description> OR @<Language> OR @<Morpheme> OR @<Phrase> OR @<Term> OR @<TextualEntity> OR
    @<VerbalLanguageEntity> OR @<VisualLanguageEntity> OR @<Word>
)

<LanguageLabel> CLOSED {
    (  $<LanguageLabel_tes> (  &<Label_tes> ;
          rdf:type [ <Label> ] ?
       ) ;
       rdf:type [ <LanguageLabel> ] ?
    )
}

<LanthanumAtom> CLOSED {
    (  $<LanthanumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <LanthanumAtom> ] ?
    )
}

<LastName> CLOSED {
    (  $<LastName_tes> (  &<Name_tes> ;
          rdf:type [ <Name> ] ?
       ) ;
       rdf:type [ <LastName> ] ?
    )
}

<Latitude> CLOSED {
    (  $<Latitude_tes> (  &<GeographicPosition_tes> ;
          rdf:type [ <GeographicPosition> ] ?
       ) ;
       rdf:type [ <Latitude> ] ?
    )
}

<LawrenciumAtom> CLOSED {
    (  $<LawrenciumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <LawrenciumAtom> ] ?
    )
}

<LeadAtom> CLOSED {
    (  $<LeadAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <LeadAtom> ] ?
    )
}

<Learning> CLOSED {
    (  $<Learning_tes> (  &<Creating_tes> ;
          rdf:type [ <Creating> ] ?
       ) ;
       rdf:type [ <Learning> ] ?
    )
}

<Left-handedHelical> CLOSED {
    (  $<Left-handedHelical_tes> (  &<Helicity_tes> ;
          rdf:type [ <Helicity> ] ?
       ) ;
       rdf:type [ <Left-handedHelical> ] ?
    )
}

<LeftClosedInterval>  (
    CLOSED {
       (  $<LeftClosedInterval_tes> (  &<Interval_tes> ;
             rdf:type [ <Interval> ] ?
          ) ;
          rdf:type [ <LeftClosedInterval> ] ?
       )
    } OR @<ClosedInterval>
)

<LeftOpenInterval>  (
    CLOSED {
       (  $<LeftOpenInterval_tes> (  &<Interval_tes> ;
             rdf:type [ <Interval> ] ?
          ) ;
          rdf:type [ <LeftOpenInterval> ] ?
       )
    } OR @<OpenInterval>
)

<LeftValueAxis> CLOSED {
    (  $<LeftValueAxis_tes> (  &<ValueAxis_tes> ;
          rdf:type [ <ValueAxis> ] ?
       ) ;
       rdf:type [ <LeftValueAxis> ] ?
    )
}

<LegalDocument>  (
    CLOSED {
       (  $<LegalDocument_tes> (  &<Document_tes> ;
             rdf:type [ <Document> ] ?
          ) ;
          rdf:type [ <LegalDocument> ] ?
       )
    } OR @<Bill> OR @<Brief> OR @<Legislation> OR @<Patent> OR @<Statute>
)

<LegalName> CLOSED {
    (  $<LegalName_tes> (  &<PersonalName_tes> ;
          rdf:type [ <PersonalName> ] ?
       ) ;
       rdf:type [ <LegalName> ] ?
    )
}

<Legend> CLOSED {
    (  $<Legend_tes> (  &<FigurePart_tes> ;
          rdf:type [ <FigurePart> ] ?
       ) ;
       rdf:type [ <Legend> ] ?
    )
}

<Legislation> CLOSED {
    (  $<Legislation_tes> (  &<LegalDocument_tes> ;
          rdf:type [ <LegalDocument> ] ?
       ) ;
       rdf:type [ <Legislation> ] ?
    )
}

<Length> CLOSED {
    (  $<Length_tes> (  &<1DExtentQuantity_tes> ;
          rdf:type [ <1DExtentQuantity> ] ?
       ) ;
       rdf:type [ <Length> ] ?
    )
}

<LengthOfPerimeter>  (
    CLOSED {
       (  $<LengthOfPerimeter_tes> (  &<2DExtentQuantity_tes> ;
             rdf:type [ <2DExtentQuantity> ] ?
          ) ;
          rdf:type [ <LengthOfPerimeter> ] ?
       )
    } OR @<Circumference>
)

<Letter> CLOSED {
    (  $<Letter_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <Letter> ] ?
    )
}

<LifeStatus>  (
    CLOSED {
       (  $<LifeStatus_tes> (  &<BiologicalQuality_tes> ;
             rdf:type [ <BiologicalQuality> ] ?
          ) ;
          rdf:type [ <LifeStatus> ] ?
       )
    } OR @<Alive> OR @<Dead>
)

<Ligand> CLOSED {
    (  $<Ligand_tes> (  &<Molecule_tes> ;
          rdf:type [ <Molecule> ] ?
       ) ;
       rdf:type [ <Ligand> ] ?
    )
}

<Likelihood>  (
    CLOSED {
       (  $<Likelihood_tes> (  &<Quantity_tes> ;
             rdf:type [ <Quantity> ] ?
          ) ;
          rdf:type [ <Likelihood> ] ?
       )
    } OR @<LogLikelihood>
)

<Line>  (
    CLOSED {
       (  $<Line_tes> (  &<Curve_tes> ;
             rdf:type [ <Curve> ] ?
          ) ;
          rdf:type [ <Line> ] ?
       )
    } OR @<Edge> OR @<InfiniteLine> OR @<LineSegment> OR @<PositionallyOrientedLine> OR @<Ray> OR @<StatisticalGraphLine>
)

<Line-barGraph>  (
    CLOSED {
       (  $<Line-barGraph_tes> (  &<StatisticalGraph_tes> ;
             rdf:type [ <StatisticalGraph> ] ?
          ) ;
          rdf:type [ <Line-barGraph> ] ?
       )
    } OR @<Boxplot>
)

<LinearPosition>  (
    CLOSED {
       (  $<LinearPosition_tes> (  &<Position_tes> ;
             rdf:type [ <Position> ] ?
          ) ;
          rdf:type [ <LinearPosition> ] ?
       )
    } OR @<EndPosition> OR @<OrdinalPosition> OR @<SequenceElementPosition> OR @<StartPosition>
)

<LinearValueAxis> CLOSED {
    (  $<LinearValueAxis_tes> (  &<ScaledValueAxis_tes> ;
          rdf:type [ <ScaledValueAxis> ] ?
       ) ;
       rdf:type [ <LinearValueAxis> ] ?
    )
}

<LineGraph> CLOSED {
    (  $<LineGraph_tes> (  &<StatisticalGraph_tes> ;
          rdf:type [ <StatisticalGraph> ] ?
       ) ;
       rdf:type [ <LineGraph> ] ?
    )
}

<LineSegment>  (
    CLOSED {
       (  $<LineSegment_tes> (  &<Line_tes> ;
             rdf:type [ <Line> ] ?
          ) ;
          rdf:type [ <LineSegment> ] ?
       )
    } OR @<DirectedLineSegment> OR @<PolygonEdge> OR @<TickMark>
)

<Lipid> CLOSED {
    (  $<Lipid_tes> (  &<OrganicMolecule_tes> ;
          rdf:type [ <OrganicMolecule> ] ?
       ) ;
       rdf:type [ <Lipid> ] ?
    )
}

<LipidResidue> CLOSED {
    (  $<LipidResidue_tes> (  &<OrganicSubmolecule_tes> ;
          rdf:type [ <OrganicSubmolecule> ] ?
       ) ;
       rdf:type [ <LipidResidue> ] ?
    )
}

<LiquidSolution> CLOSED {
    (  $<LiquidSolution_tes> (  &<HeterogeneousSubstance_tes> ;
          rdf:type [ <HeterogeneousSubstance> ] ?
       ) ;
       rdf:type [ <LiquidSolution> ] ?
    )
}

<LiquidSolutionComponent>  (
    CLOSED {
       (  $<LiquidSolutionComponent_tes> (  &<HeterogeneousSubstance_tes> ;
             rdf:type [ <HeterogeneousSubstance> ] ?
          ) ;
          rdf:type [ <LiquidSolutionComponent> ] ?
       )
    } OR @<Acid> OR @<Base> OR @<Buffer> OR @<Solute> OR @<Solvent>
)

<List>  (
    CLOSED {
       (  $<List_tes> (  &<Set_tes> ;
             rdf:type [ <Set> ] ?
          ) ;
          rdf:type [ <List> ] ?
       )
    } OR @<DataSeries> OR @<Intersection> OR @<OrderedList> OR @<Sequence> OR @<Union>
)

<ListItem>  (
    CLOSED {
       (  $<ListItem_tes> (  &<SetItem_tes> ;
             rdf:type [ <SetItem> ] ?
          ) ;
          rdf:type [ <ListItem> ] ?
       )
    } OR @<OrderedListItem>
)

<LiteratureCuration> CLOSED {
    (  $<LiteratureCuration_tes> (  &<InformationProcessing_tes> ;
          rdf:type [ <InformationProcessing> ] ?
       ) ;
       rdf:type [ <LiteratureCuration> ] ?
    )
}

<LithiumAtom> CLOSED {
    (  $<LithiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <LithiumAtom> ] ?
    )
}

<Loathing> CLOSED {
    (  $<Loathing_tes> (  &<Disgust_tes> ;
          rdf:type [ <Disgust> ] ?
       ) ;
       rdf:type [ <Loathing> ] ?
    )
}

<LocalMaximumStationaryPoint>  (
    CLOSED {
       (  $<LocalMaximumStationaryPoint_tes> (  &<StationaryPoint_tes> ;
             rdf:type [ <StationaryPoint> ] ?
          ) ;
          rdf:type [ <LocalMaximumStationaryPoint> ] ?
       )
    } OR @<GlobalMaximalStationaryPoint>
)

<LocalMinimumStationaryPoint>  (
    CLOSED {
       (  $<LocalMinimumStationaryPoint_tes> (  &<StationaryPoint_tes> ;
             rdf:type [ <StationaryPoint> ] ?
          ) ;
          rdf:type [ <LocalMinimumStationaryPoint> ] ?
       )
    } OR @<GlobalMinimalStationaryPoint>
)

<Locomotion> CLOSED {
    (  $<Locomotion_tes> (  &<ActiveMovement_tes> ;
          rdf:type [ <ActiveMovement> ] ?
       ) ;
       rdf:type [ <Locomotion> ] ?
    )
}

<LogarithmicValueAxis> CLOSED {
    (  $<LogarithmicValueAxis_tes> (  &<ScaledValueAxis_tes> ;
          rdf:type [ <ScaledValueAxis> ] ?
       ) ;
       rdf:type [ <LogarithmicValueAxis> ] ?
    )
}

<LogicalOperator>  (
    CLOSED {
       (  $<LogicalOperator_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <LogicalOperator> ] ?
       )
    } OR @<Conjunctionand> OR @<Disjunctionor> OR @<Implies-%3E> OR @<Negationnot>
)

<LogLikelihood> CLOSED {
    (  $<LogLikelihood_tes> (  &<Likelihood_tes> ;
          rdf:type [ <Likelihood> ] ?
       ) ;
       rdf:type [ <LogLikelihood> ] ?
    )
}

<Loneliness> CLOSED {
    (  $<Loneliness_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Loneliness> ] ?
    )
}

<Longitude> CLOSED {
    (  $<Longitude_tes> (  &<GeographicPosition_tes> ;
          rdf:type [ <GeographicPosition> ] ?
       ) ;
       rdf:type [ <Longitude> ] ?
    )
}

<Love> CLOSED {
    (  $<Love_tes> (  &<PositiveEmotion_tes> ;
          rdf:type [ <PositiveEmotion> ] ?
       ) ;
       rdf:type [ <Love> ] ?
    )
}

<LowBarrierHydrogenBond> CLOSED {
    (  $<LowBarrierHydrogenBond_tes> (  &<HydrogenBond_tes> ;
          rdf:type [ <HydrogenBond> ] ?
       ) ;
       rdf:type [ <LowBarrierHydrogenBond> ] ?
    )
}

<Lust> CLOSED {
    (  $<Lust_tes> (  &<Desire_tes> ;
          rdf:type [ <Desire> ] ?
       ) ;
       rdf:type [ <Lust> ] ?
    )
}

<LutetiumAtom> CLOSED {
    (  $<LutetiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <LutetiumAtom> ] ?
    )
}

<Magazine> CLOSED {
    (  $<Magazine_tes> (  &<Periodical_tes> ;
          rdf:type [ <Periodical> ] ?
       ) ;
       rdf:type [ <Magazine> ] ?
    )
}

<MagnesiumAtom> CLOSED {
    (  $<MagnesiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <MagnesiumAtom> ] ?
    )
}

<MaintenanceOfDurationOfProcess> CLOSED {
    (  $<MaintenanceOfDurationOfProcess_tes> (  &<RegulationOfProcessDuration_tes> ;
          rdf:type [ <RegulationOfProcessDuration> ] ?
       ) ;
       rdf:type [ <MaintenanceOfDurationOfProcess> ] ?
    )
}

<MaintenanceOfFrequencyOfProcess> CLOSED {
    (  $<MaintenanceOfFrequencyOfProcess_tes> (  &<RegulationOfProcessFrequency_tes> ;
          rdf:type [ <RegulationOfProcessFrequency> ] ?
       ) ;
       rdf:type [ <MaintenanceOfFrequencyOfProcess> ] ?
    )
}

<MaintenanceOfLevelOfObjectConsumption> CLOSED {
    (  $<MaintenanceOfLevelOfObjectConsumption_tes> (  &<RegulationOfObjectConsumption_tes> ;
          rdf:type [ <RegulationOfObjectConsumption> ] ?
       ) ;
       rdf:type [ <MaintenanceOfLevelOfObjectConsumption> ] ?
    )
}

<MaintenanceOfQuantityOfObjectProduction> CLOSED {
    (  $<MaintenanceOfQuantityOfObjectProduction_tes> (  &<RegulationOfObjectProduction_tes> ;
          rdf:type [ <RegulationOfObjectProduction> ] ?
       ) ;
       rdf:type [ <MaintenanceOfQuantityOfObjectProduction> ] ?
    )
}

<MaintenanceOfSpatialExtentOfProcess> CLOSED {
    (  $<MaintenanceOfSpatialExtentOfProcess_tes> (  &<RegulationOfProcessSpatialExtent_tes> ;
          rdf:type [ <RegulationOfProcessSpatialExtent> ] ?
       ) ;
       rdf:type [ <MaintenanceOfSpatialExtentOfProcess> ] ?
    )
}

<MajorTickMark> CLOSED {
    (  $<MajorTickMark_tes> (  &<TickMark_tes> ;
          rdf:type [ <TickMark> ] ?
       ) ;
       rdf:type [ <MajorTickMark> ] ?
    )
}

<MajorVersionNumber> CLOSED {
    (  $<MajorVersionNumber_tes> (  &<SoftwareVersionLabel_tes> ;
          rdf:type [ <SoftwareVersionLabel> ] ?
       ) ;
       rdf:type [ <MajorVersionNumber> ] ?
    )
}

<Male> CLOSED {
    (  $<Male_tes> (  &<BiologicalSex_tes> ;
          rdf:type [ <BiologicalSex> ] ?
       ) ;
       rdf:type [ <Male> ] ?
    )
}

<ManganeseAtom> CLOSED {
    (  $<ManganeseAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ManganeseAtom> ] ?
    )
}

<Manual> CLOSED {
    (  $<Manual_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ?
       ) ;
       rdf:type [ <Manual> ] ?
    )
}

<Manuscript> CLOSED {
    (  $<Manuscript_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <Manuscript> ] ?
    )
}

<Map> CLOSED {
    (  $<Map_tes> (  &<Chart_tes> ;
          rdf:type [ <Chart> ] ?
       ) ;
       rdf:type [ <Map> ] ?
    )
}

<Mass> CLOSED {
    (  $<Mass_tes> (  &<SpatialQuantity_tes> ;
          rdf:type [ <SpatialQuantity> ] ?
       ) ;
       rdf:type [ <Mass> ] ?
    )
}

<MassSpectrometer> CLOSED {
    (  $<MassSpectrometer_tes> (  &<DataCollectionDevice_tes> ;
          rdf:type [ <DataCollectionDevice> ] ?
       ) ;
       rdf:type [ <MassSpectrometer> ] ?
    )
}

<MassSpectrometryExperiment> CLOSED {
    (  $<MassSpectrometryExperiment_tes> (  &<Experiment_tes> ;
          rdf:type [ <Experiment> ] ?
       ) ;
       rdf:type [ <MassSpectrometryExperiment> ] ?
    )
}

<Master%27sThesis> CLOSED {
    (  $<Master%27sThesis_tes> (  &<ThesisDocument_tes> ;
          rdf:type [ <ThesisDocument> ] ?
       ) ;
       rdf:type [ <Master%27sThesis> ] ?
    )
}

<MaterialBoundary> CLOSED {
    (  $<MaterialBoundary_tes> (  &<SpatialBoundary_tes> ;
          rdf:type [ <SpatialBoundary> ] ?
       ) ;
       rdf:type [ <MaterialBoundary> ] ?
    )
}

<MaterialEntity>  (
    CLOSED {
       (  $<MaterialEntity_tes> (  &<Object_tes> ;
             rdf:type [ <Object> ] ?
          ) ;
          rdf:type [ <MaterialEntity> ] ?
       )
    } OR @<ChemicalEntity>
)

<MaterialsAndMethodsSection> CLOSED {
    (  $<MaterialsAndMethodsSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <MaterialsAndMethodsSection> ] ?
    )
}

<MaterialsSection> CLOSED {
    (  $<MaterialsSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <MaterialsSection> ] ?
    )
}

<MaternallyTransmitted> CLOSED {
    (  $<MaternallyTransmitted_tes> (  &<ParentalTransmission_tes> ;
          rdf:type [ <ParentalTransmission> ] ?
       ) ;
       rdf:type [ <MaternallyTransmitted> ] ?
    )
}

<MathematicalEntity>  (
    CLOSED {
       (  $<MathematicalEntity_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ? ;
             <hasUnit> @<UnitOfMeasurement> ?
          ) ;
          rdf:type [ <MathematicalEntity> ] ?
       )
    } OR @<Algorithm> OR @<Association> OR @<Equation> OR @<Interval> OR @<LogicalOperator> OR @<Pattern> OR @<Set> OR @<SetItem>
    OR @<Tensor> OR @<Variable> OR @<VectorSpace>
)

<Matrix> CLOSED {
    (  $<Matrix_tes> (  &<RankNonzeroTensor_tes> ;
          rdf:type [ <RankNonzeroTensor> ] ?
       ) ;
       rdf:type [ <Matrix> ] ?
    )
}

<MatrixChart> CLOSED {
    (  $<MatrixChart_tes> (  &<Chart_tes> ;
          rdf:type [ <Chart> ] ?
       ) ;
       rdf:type [ <MatrixChart> ] ?
    )
}

<MatureMRNA> CLOSED {
    (  $<MatureMRNA_tes> (  &<MessengerRNA_tes> ;
          rdf:type [ <MessengerRNA> ] ?
       ) ;
       rdf:type [ <MatureMRNA> ] ?
    )
}

<MaximalValue> CLOSED {
    (  $<MaximalValue_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <MaximalValue> ] ?
    )
}

<Mean> CLOSED {
    (  $<Mean_tes> (  &<CentralityMeasure_tes> ;
          rdf:type [ <CentralityMeasure> ] ?
       ) ;
       rdf:type [ <Mean> ] ?
    )
}

<MeasurementScale>  (
    CLOSED {
       (  $<MeasurementScale_tes> (  &<FunctionalSpecification_tes> ;
             rdf:type [ <FunctionalSpecification> ] ?
          ) ;
          rdf:type [ <MeasurementScale> ] ?
       )
    } OR @<BinaryScale> OR @<NomimalScale> OR @<NumericScale>
)

<MeasurementValue>  (
    CLOSED {
       (  $<MeasurementValue_tes> (  &<Number_tes> ;
             rdf:type [ <Number> ] ? ;
             <isMeasurementValueOf> @<Entity> ?
          ) ;
          rdf:type [ <MeasurementValue> ] ?
       )
    } OR @<Position> OR @<Quantity>
)

<Measuring> CLOSED {
    (  $<Measuring_tes> (  &<Interacting_tes> ;
          rdf:type [ <Interacting> ] ?
       ) ;
       rdf:type [ <Measuring> ] ?
    )
}

<Media>  (
    CLOSED {
       (  $<Media_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <Media> ] ?
       )
    } OR @<AudioRecording> OR @<Figure> OR @<FigurePart> OR @<File> OR @<Movie> OR @<Slide> OR @<Slideshow> OR @<TelevisionProgram>
)

<Median> CLOSED {
    (  $<Median_tes> (  &<CentralityMeasure_tes> ;
          rdf:type [ <CentralityMeasure> ] ?
       ) ;
       rdf:type [ <Median> ] ?
    )
}

<MedicalData> CLOSED {
    (  $<MedicalData_tes> (  &<BiologicalData_tes> ;
          rdf:type [ <BiologicalData> ] ?
       ) ;
       rdf:type [ <MedicalData> ] ?
    )
}

<MedicalDiagnosis> CLOSED {
    (  $<MedicalDiagnosis_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <MedicalDiagnosis> ] ?
    )
}

<MedicalHealthRecord> CLOSED {
    (  $<MedicalHealthRecord_tes> (  &<Record_tes> ;
          rdf:type [ <Record> ] ?
       ) ;
       rdf:type [ <MedicalHealthRecord> ] ?
    )
}

<MedicalHistory> CLOSED {
    (  $<MedicalHistory_tes> (  &<History_tes> ;
          rdf:type [ <History> ] ?
       ) ;
       rdf:type [ <MedicalHistory> ] ?
    )
}

<MedicalIntervention> CLOSED {
    (  $<MedicalIntervention_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <MedicalIntervention> ] ?
    )
}

<MedicalPractitioner>  (
    CLOSED {
       (  $<MedicalPractitioner_tes> (  &<Person_tes> ;
             rdf:type [ <Person> ] ?
          ) ;
          rdf:type [ <MedicalPractitioner> ] ?
       )
    } OR @<Doctor> OR @<Nurse>
)

<MedicalProcedure>  (
    CLOSED {
       (  $<MedicalProcedure_tes> (  &<Procedure_tes> ;
             rdf:type [ <Procedure> ] ?
          ) ;
          rdf:type [ <MedicalProcedure> ] ?
       )
    } OR @<DiagnosticTest> OR @<DifferentialDiagnosis> OR @<MedicalDiagnosis> OR @<MedicalIntervention> OR @<MedicalScreening>
)

<MedicalReport> CLOSED {
    (  $<MedicalReport_tes> (  &<Report_tes> ;
          rdf:type [ <Report> ] ?
       ) ;
       rdf:type [ <MedicalReport> ] ?
    )
}

<MedicalRole>  (
    CLOSED {
       (  $<MedicalRole_tes> (  &<OccupationalRole_tes> ;
             rdf:type [ <OccupationalRole> ] ?
          ) ;
          rdf:type [ <MedicalRole> ] ?
       )
    } OR @<DentistRole> OR @<DoctorRole> OR @<NurseRole> OR @<PatientRole>
)

<MedicalScreening> CLOSED {
    (  $<MedicalScreening_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <MedicalScreening> ] ?
    )
}

<MeitneriumAtom> CLOSED {
    (  $<MeitneriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <MeitneriumAtom> ] ?
    )
}

<MemberCount> CLOSED {
    (  $<MemberCount_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <MemberCount> ] ?
    )
}

<MembraneTransport>  (
    CLOSED {
       (  $<MembraneTransport_tes> (  &<ChemicalTransport_tes> ;
             rdf:type [ <ChemicalTransport> ] ?
          ) ;
          rdf:type [ <MembraneTransport> ] ?
       )
    } OR @<ActiveTransport> OR @<PassiveTransport>
)

<MendeleviumAtom> CLOSED {
    (  $<MendeleviumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <MendeleviumAtom> ] ?
    )
}

<MercuryAtom> CLOSED {
    (  $<MercuryAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <MercuryAtom> ] ?
    )
}

<MereologicalChart>  (
    CLOSED {
       (  $<MereologicalChart_tes> (  &<Chart_tes> ;
             rdf:type [ <Chart> ] ?
          ) ;
          rdf:type [ <MereologicalChart> ] ?
       )
    } OR @<PieChart> OR @<Treemap>
)

<MereologicalQuality>  (
    CLOSED {
       (  $<MereologicalQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <MereologicalQuality> ] ?
       )
    } OR @<ContainmentQuality>
)

<Messenger>  (
    CLOSED {
       (  $<Messenger_tes> (  &<SignalTransducer_tes> ;
             rdf:type [ <SignalTransducer> ] ?
          ) ;
          rdf:type [ <Messenger> ] ?
       )
    } OR @<SecondMessenger>
)

<MessengerRNA>  (
    CLOSED {
       (  $<MessengerRNA_tes> (  &<RNATranscript_tes> ;
             rdf:type [ <RNATranscript> ] ?
          ) ;
          rdf:type [ <MessengerRNA> ] ?
       )
    } OR @<MRNASpliceVariant> OR @<MatureMRNA> OR @<Pre-mRNA>
)

<MetabolicPathway>  (
    CLOSED {
       (  $<MetabolicPathway_tes> (  &<BiochemicalPathway_tes> ;
             rdf:type [ <BiochemicalPathway> ] ?
          ) ;
          rdf:type [ <MetabolicPathway> ] ?
       )
    } OR @<PharmacokineticPathway>
)

<Metabolism>  (
    CLOSED {
       (  $<Metabolism_tes> (  &<ChemicalInteraction_tes> ;
             rdf:type [ <ChemicalInteraction> ] ?
          ) ;
          rdf:type [ <Metabolism> ] ?
       )
    } OR @<Anabolism> OR @<Catabolism>
)

<Metadata> CLOSED {
    (  $<Metadata_tes> (  &<DataItem_tes> ;
          rdf:type [ <DataItem> ] ?
       ) ;
       rdf:type [ <Metadata> ] ?
    )
}

<MethodsSection> CLOSED {
    (  $<MethodsSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <MethodsSection> ] ?
    )
}

<MicroarrayDevice> CLOSED {
    (  $<MicroarrayDevice_tes> (  &<DataCollectionDevice_tes> ;
          rdf:type [ <DataCollectionDevice> ] ?
       ) ;
       rdf:type [ <MicroarrayDevice> ] ?
    )
}

<MicroarrayExperiment> CLOSED {
    (  $<MicroarrayExperiment_tes> (  &<Experiment_tes> ;
          rdf:type [ <Experiment> ] ?
       ) ;
       rdf:type [ <MicroarrayExperiment> ] ?
    )
}

<MicroarrayProbeSetIdentifier> CLOSED {
    (  $<MicroarrayProbeSetIdentifier_tes> (  &<MolecularIdentifier_tes> ;
          rdf:type [ <MolecularIdentifier> ] ?
       ) ;
       rdf:type [ <MicroarrayProbeSetIdentifier> ] ?
    )
}

<MicroRNAmiRNA> CLOSED {
    (  $<MicroRNAmiRNA_tes> (  &<Non-proteinCodingRNAncRNA_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNA> ] ?
       ) ;
       rdf:type [ <MicroRNAmiRNA> ] ?
    )
}

<MiddleInitial> CLOSED {
    (  $<MiddleInitial_tes> (  &<MiddleName_tes> ;
          rdf:type [ <MiddleName> ] ?
       ) ;
       rdf:type [ <MiddleInitial> ] ?
    )
}

<MiddleName>  (
    CLOSED {
       (  $<MiddleName_tes> (  &<Name_tes> ;
             rdf:type [ <Name> ] ?
          ) ;
          rdf:type [ <MiddleName> ] ?
       )
    } OR @<MiddleInitial>
)

<Mild> CLOSED {
    (  $<Mild_tes> (  &<Intensity_tes> ;
          rdf:type [ <Intensity> ] ?
       ) ;
       rdf:type [ <Mild> ] ?
    )
}

<Millennium> CLOSED {
    (  $<Millennium_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Millennium> ] ?
    )
}

<MinimalValue> CLOSED {
    (  $<MinimalValue_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <MinimalValue> ] ?
    )
}

<MinorTickMark> CLOSED {
    (  $<MinorTickMark_tes> (  &<TickMark_tes> ;
          rdf:type [ <TickMark> ] ?
       ) ;
       rdf:type [ <MinorTickMark> ] ?
    )
}

<MinorVersionNumber> CLOSED {
    (  $<MinorVersionNumber_tes> (  &<SoftwareVersionLabel_tes> ;
          rdf:type [ <SoftwareVersionLabel> ] ?
       ) ;
       rdf:type [ <MinorVersionNumber> ] ?
    )
}

<Minute> CLOSED {
    (  $<Minute_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Minute> ] ?
    )
}

<Misery> CLOSED {
    (  $<Misery_tes> (  &<Sadness_tes> ;
          rdf:type [ <Sadness> ] ?
       ) ;
       rdf:type [ <Misery> ] ?
    )
}

<Mode> CLOSED {
    (  $<Mode_tes> (  &<CentralityMeasure_tes> ;
          rdf:type [ <CentralityMeasure> ] ?
       ) ;
       rdf:type [ <Mode> ] ?
    )
}

<Model>  (
    CLOSED {
       (  $<Model_tes> (  &<Representation_tes> ;
             rdf:type [ <Representation> ] ?
          ) ;
          rdf:type [ <Model> ] ?
       )
    } OR @<ObjectModel> OR @<ProcessModel>
)

<Moderate> CLOSED {
    (  $<Moderate_tes> (  &<Intensity_tes> ;
          rdf:type [ <Intensity> ] ?
       ) ;
       rdf:type [ <Moderate> ] ?
    )
}

<ModeratelyQuantifier> CLOSED {
    (  $<ModeratelyQuantifier_tes> (  &<QuantityModifier_tes> ;
          rdf:type [ <QuantityModifier> ] ?
       ) ;
       rdf:type [ <ModeratelyQuantifier> ] ?
    )
}

<Modifying> CLOSED {
    (  $<Modifying_tes> (  &<Interacting_tes> ;
          rdf:type [ <Interacting> ] ?
       ) ;
       rdf:type [ <Modifying> ] ?
    )
}

<MolecularComplex>  (
    CLOSED {
       (  $<MolecularComplex_tes> (  &<ChemicalComplex_tes> ;
             rdf:type [ <ChemicalComplex> ] ?
          ) ;
          rdf:type [ <MolecularComplex> ] ?
       )
    } OR @<Chromosome> OR @<DoubleStrandedNucleicAcid> OR @<ProteinComplex>
)

<MolecularComplexDissociation> CLOSED {
    (  $<MolecularComplexDissociation_tes> (  &<ChemicalDestruction_tes> ;
          rdf:type [ <ChemicalDestruction> ] ?
       ) ;
       rdf:type [ <MolecularComplexDissociation> ] ?
    )
}

<MolecularComplexFormation> CLOSED {
    (  $<MolecularComplexFormation_tes> (  &<ChemicalSynthesis_tes> ;
          rdf:type [ <ChemicalSynthesis> ] ?
       ) ;
       rdf:type [ <MolecularComplexFormation> ] ?
    )
}

<MolecularEntityRole>  (
    CLOSED {
       (  $<MolecularEntityRole_tes> (  &<ChemicalEntityRole_tes> ;
             rdf:type [ <ChemicalEntityRole> ] ?
          ) ;
          rdf:type [ <MolecularEntityRole> ] ?
       )
    } OR @<CofactorRole> OR @<ProductRole> OR @<ReactantRole> OR @<RegulatorRole>
)

<MolecularIdentifier>  (
    CLOSED {
       (  $<MolecularIdentifier_tes> (  &<ChemicalIdentifier_tes> ;
             rdf:type [ <ChemicalIdentifier> ] ?
          ) ;
          rdf:type [ <MolecularIdentifier> ] ?
       )
    } OR @<MicroarrayProbeSetIdentifier> OR @<PDBChainIdentifier>
)

<MolecularModification> CLOSED {
    (  $<MolecularModification_tes> (  &<ChemicalReaction_tes> ;
          rdf:type [ <ChemicalReaction> ] ?
       ) ;
       rdf:type [ <MolecularModification> ] ?
    )
}

<MolecularOrbital> CLOSED {
    (  $<MolecularOrbital_tes> (  &<ChemicalQuality_tes> ;
          rdf:type [ <ChemicalQuality> ] ?
       ) ;
       rdf:type [ <MolecularOrbital> ] ?
    )
}

<MolecularPocket> CLOSED {
    (  $<MolecularPocket_tes> (  &<MolecularSite_tes> ;
          rdf:type [ <MolecularSite> ] ?
       ) ;
       rdf:type [ <MolecularPocket> ] ?
    )
}

<MolecularRegulator>  (
    CLOSED {
       (  $<MolecularRegulator_tes> (  &<Molecule_tes> ;
             rdf:type [ <Molecule> ] ?
          ) ;
          rdf:type [ <MolecularRegulator> ] ?
       )
    } OR @<Activator> OR @<Inhibitor>
)

<MolecularSite>  (
    CLOSED {
       (  $<MolecularSite_tes> (  &<Site_tes> ;
             rdf:type [ <Site> ] ?
          ) ;
          rdf:type [ <MolecularSite> ] ?
       )
    } OR @<ActiveSite> OR @<BindingSite> OR @<MolecularPocket>
)

<MolecularStructure>  (
    CLOSED {
       (  $<MolecularStructure_tes> (  &<ChemicalStructure_tes> ;
             rdf:type [ <ChemicalStructure> ] ?
          ) ;
          rdf:type [ <MolecularStructure> ] ?
       )
    } OR @<CrystalStructure>
)

<MolecularStructureDescriptor>  (
    CLOSED {
       (  $<MolecularStructureDescriptor_tes> (  &<ChemicalQuality_tes> ;
             rdf:type [ <ChemicalQuality> ] ?
          ) ;
          rdf:type [ <MolecularStructureDescriptor> ] ?
       )
    } OR @<BiomolecularStructureDescriptor>
)

<MolecularStructureFile>  (
    CLOSED {
       (  $<MolecularStructureFile_tes> (  &<File_tes> ;
             rdf:type [ <File> ] ?
          ) ;
          rdf:type [ <MolecularStructureFile> ] ?
       )
    } OR @<PDBFile>
)

<MolecularTracerRole> CLOSED {
    (  $<MolecularTracerRole_tes> (  &<ReactantRole_tes> ;
          rdf:type [ <ReactantRole> ] ?
       ) ;
       rdf:type [ <MolecularTracerRole> ] ?
    )
}

<Molecule>  (
    CLOSED {
       (  $<Molecule_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ?
          ) ;
          rdf:type [ <Molecule> ] ?
       )
    } OR @<Antigen> OR @<Isomer> OR @<Ligand> OR @<MolecularRegulator> OR @<OrganicMolecule> OR @<Polymer> OR @<Product> OR
    @<Signal> OR @<SignalTransducer>
)

<MolybdemumAtom> CLOSED {
    (  $<MolybdemumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <MolybdemumAtom> ] ?
    )
}

<Monomer> CLOSED {
    (  $<Monomer_tes> (  &<Submolecule_tes> ;
          rdf:type [ <Submolecule> ] ?
       ) ;
       rdf:type [ <Monomer> ] ?
    )
}

<Monosaccharide> CLOSED {
    (  $<Monosaccharide_tes> (  &<OrganicMolecule_tes> ;
          rdf:type [ <OrganicMolecule> ] ?
       ) ;
       rdf:type [ <Monosaccharide> ] ?
    )
}

<Month> CLOSED {
    (  $<Month_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Month> ] ?
    )
}

<Morpheme> CLOSED {
    (  $<Morpheme_tes> (  &<LanguageEntity_tes> ;
          rdf:type [ <LanguageEntity> ] ?
       ) ;
       rdf:type [ <Morpheme> ] ?
    )
}

<MostlyQuantifier> CLOSED {
    (  $<MostlyQuantifier_tes> (  &<QuantityModifier_tes> ;
          rdf:type [ <QuantityModifier> ] ?
       ) ;
       rdf:type [ <MostlyQuantifier> ] ?
    )
}

<MostOfTheTime> CLOSED {
    (  $<MostOfTheTime_tes> (  &<TemporalQualifier_tes> ;
          rdf:type [ <TemporalQualifier> ] ?
       ) ;
       rdf:type [ <MostOfTheTime> ] ?
    )
}

<Mouse> CLOSED {
    (  $<Mouse_tes> (  &<MulticellularOrganism_tes> ;
          rdf:type [ <MulticellularOrganism> ] ?
       ) ;
       rdf:type [ <Mouse> ] ?
    )
}

<Movement>  (
    CLOSED {
       (  $<Movement_tes> (  &<Process_tes> ;
             rdf:type [ <Process> ] ?
          ) ;
          rdf:type [ <Movement> ] ?
       )
    } OR @<ActiveMovement> OR @<PassiveMovement>
)

<MovementEquation>  (
    CLOSED {
       (  $<MovementEquation_tes> (  &<Equation_tes> ;
             rdf:type [ <Equation> ] ?
          ) ;
          rdf:type [ <MovementEquation> ] ?
       )
    } OR @<DiffusionEquation>
)

<Movie> CLOSED {
    (  $<Movie_tes> (  &<Media_tes> ;
          rdf:type [ <Media> ] ?
       ) ;
       rdf:type [ <Movie> ] ?
    )
}

<MRNASpliceVariant> CLOSED {
    (  $<MRNASpliceVariant_tes> (  &<MessengerRNA_tes> ;
          rdf:type [ <MessengerRNA> ] ?
       ) ;
       rdf:type [ <MRNASpliceVariant> ] ?
    )
}

<MulticellularOrganism>  (
    CLOSED {
       (  $<MulticellularOrganism_tes> (  &<CellularOrganism_tes> ;
             rdf:type [ <CellularOrganism> ] ?
          ) ;
          rdf:type [ <MulticellularOrganism> ] ?
       )
    } OR @<Human> OR @<Mouse> OR @<Rat> OR @<Worm>
)

<MultipleSequenceAlignment> CLOSED {
    (  $<MultipleSequenceAlignment_tes> (  &<SequenceAlignment_tes> ;
          rdf:type [ <SequenceAlignment> ] ?
       ) ;
       rdf:type [ <MultipleSequenceAlignment> ] ?
    )
}

<MutualDisposition>  (
    CLOSED {
       (  $<MutualDisposition_tes> (  &<Disposition_tes> ;
             rdf:type [ <Disposition> ] ?
          ) ;
          rdf:type [ <MutualDisposition> ] ?
       )
    } OR @<ToInteractAndToBeInteractedWith>
)

<Name>  (
    CLOSED {
       (  $<Name_tes> (  &<Label_tes> ;
             rdf:type [ <Label> ] ?
          ) ;
          rdf:type [ <Name> ] ?
       )
    } OR @<BrandName> OR @<CommonName> OR @<FirstName> OR @<GenericName> OR @<LastName> OR @<MiddleName> OR @<PersonalName> OR
    @<PreferredName> OR @<ScientificName>
)

<Namespace> CLOSED {
    (  $<Namespace_tes> (  &<ComputationalEntity_tes> ;
          rdf:type [ <ComputationalEntity> ] ?
       ) ;
       rdf:type [ <Namespace> ] ?
    )
}

<NamespaceLabel> CLOSED {
    (  $<NamespaceLabel_tes> (  &<Label_tes> ;
          rdf:type [ <Label> ] ?
       ) ;
       rdf:type [ <NamespaceLabel> ] ?
    )
}

<Negationnot> CLOSED {
    (  $<Negationnot_tes> (  &<LogicalOperator_tes> ;
          rdf:type [ <LogicalOperator> ] ?
       ) ;
       rdf:type [ <Negationnot> ] ?
    )
}

<Negative> CLOSED {
    (  $<Negative_tes> (  &<AssertionalQualifier_tes> ;
          rdf:type [ <AssertionalQualifier> ] ?
       ) ;
       rdf:type [ <Negative> ] ?
    )
}

<NegativeCharge> CLOSED {
    (  $<NegativeCharge_tes> (  &<CompleteCharge_tes> ;
          rdf:type [ <CompleteCharge> ] ?
       ) ;
       rdf:type [ <NegativeCharge> ] ?
    )
}

<NegativeEmotion>  (
    CLOSED {
       (  $<NegativeEmotion_tes> (  &<Emotion_tes> ;
             rdf:type [ <Emotion> ] ?
          ) ;
          rdf:type [ <NegativeEmotion> ] ?
       )
    } OR @<Annoyance> OR @<Apprehension> OR @<Boredom> OR @<Disappointment> OR @<Discouragement> OR @<Embarassment> OR @<Envy> OR
    @<Guilt> OR @<Hostility> OR @<Hunger> OR @<Hurt> OR @<Hysteria> OR @<Indecision> OR @<Irritability> OR @<Loneliness> OR @<Pity>
    OR @<Sadness> OR @<Shame> OR @<Shock> OR @<Shyness> OR @<Suicidal>
)

<NegativeNucleicAcidStrand> CLOSED {
    (  $<NegativeNucleicAcidStrand_tes> (  &<NucleicAcidStrand_tes> ;
          rdf:type [ <NucleicAcidStrand> ] ?
       ) ;
       rdf:type [ <NegativeNucleicAcidStrand> ] ?
    )
}

<NeitherGoodNorPoorQuality> CLOSED {
    (  $<NeitherGoodNorPoorQuality_tes> (  &<QualityDescriptor_tes> ;
          rdf:type [ <QualityDescriptor> ] ?
       ) ;
       rdf:type [ <NeitherGoodNorPoorQuality> ] ?
    )
}

<NeitherSatisfiedOrDissatisfiedQualifier> CLOSED {
    (  $<NeitherSatisfiedOrDissatisfiedQualifier_tes> (  &<SatisfactionQualifier_tes> ;
          rdf:type [ <SatisfactionQualifier> ] ?
       ) ;
       rdf:type [ <NeitherSatisfiedOrDissatisfiedQualifier> ] ?
    )
}

<NeodymiumAtom> CLOSED {
    (  $<NeodymiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NeodymiumAtom> ] ?
    )
}

<NeonAtom> CLOSED {
    (  $<NeonAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NeonAtom> ] ?
    )
}

<NeptuniumAtom> CLOSED {
    (  $<NeptuniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NeptuniumAtom> ] ?
    )
}

<NetworkDiagram>  (
    CLOSED {
       (  $<NetworkDiagram_tes> (  &<Chart_tes> ;
             rdf:type [ <Chart> ] ?
          ) ;
          rdf:type [ <NetworkDiagram> ] ?
       )
    } OR @<DirectedAcyclicGraph>
)

<Never> CLOSED {
    (  $<Never_tes> (  &<TemporalQualifier_tes> ;
          rdf:type [ <TemporalQualifier> ] ?
       ) ;
       rdf:type [ <Never> ] ?
    )
}

<Newspaper> CLOSED {
    (  $<Newspaper_tes> (  &<Periodical_tes> ;
          rdf:type [ <Periodical> ] ?
       ) ;
       rdf:type [ <Newspaper> ] ?
    )
}

<NickelAtom> CLOSED {
    (  $<NickelAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NickelAtom> ] ?
    )
}

<NiobiumAtom> CLOSED {
    (  $<NiobiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NiobiumAtom> ] ?
    )
}

<NitrogenAtom> CLOSED {
    (  $<NitrogenAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NitrogenAtom> ] ?
    )
}

<NmrDevice> CLOSED {
    (  $<NmrDevice_tes> (  &<DataCollectionDevice_tes> ;
          rdf:type [ <DataCollectionDevice> ] ?
       ) ;
       rdf:type [ <NmrDevice> ] ?
    )
}

<NobeliumAtom> CLOSED {
    (  $<NobeliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <NobeliumAtom> ] ?
    )
}

<Node>  (
    CLOSED {
       (  $<Node_tes> (  &<Point_tes> ;
             rdf:type [ <Point> ] ?
          ) ;
          rdf:type [ <Node> ] ?
       )
    } OR @<PolygonVertex>
)

<NomimalScale> CLOSED {
    (  $<NomimalScale_tes> (  &<MeasurementScale_tes> ;
          rdf:type [ <MeasurementScale> ] ?
       ) ;
       rdf:type [ <NomimalScale> ] ?
    )
}

<Non-cellularOrganism>  (
    CLOSED {
       (  $<Non-cellularOrganism_tes> (  &<Organism_tes> ;
             rdf:type [ <Organism> ] ?
          ) ;
          rdf:type [ <Non-cellularOrganism> ] ?
       )
    } OR @<Viroid> OR @<Virus>
)

<Non-polar> CLOSED {
    (  $<Non-polar_tes> (  &<PolarQuality_tes> ;
          rdf:type [ <PolarQuality> ] ?
       ) ;
       rdf:type [ <Non-polar> ] ?
    )
}

<Non-polarAdditionReaction>  (
    CLOSED {
       (  $<Non-polarAdditionReaction_tes> (  &<AdditionReaction_tes> ;
             rdf:type [ <AdditionReaction> ] ?
          ) ;
          rdf:type [ <Non-polarAdditionReaction> ] ?
       )
    } OR @<FreeRadicalAddition>
)

<Non-proteinCodingRNAncRNA>  (
    CLOSED {
       (  $<Non-proteinCodingRNAncRNA_tes> (  &<RNATranscript_tes> ;
             rdf:type [ <RNATranscript> ] ?
          ) ;
          rdf:type [ <Non-proteinCodingRNAncRNA> ] ?
       )
    } OR @<MicroRNAmiRNA> OR @<SmallCytoplasmicRNAscRNA> OR @<SmallNuclearRNAsnRNA> OR @<SmallNucleolarRNAsnoRNA> OR
    @<TransferRNAtRNA>
)

<Non-proteinCodingRNAncRNAGene>  (
    CLOSED {
       (  $<Non-proteinCodingRNAncRNAGene_tes> (  &<Gene_tes> ;
             rdf:type [ <Gene> ] ?
          ) ;
          rdf:type [ <Non-proteinCodingRNAncRNAGene> ] ?
       )
    } OR @<RibosomalRNAGene> OR @<SmallCytoplasmicRNAscRNAGene> OR @<SmallNuclearRNAsnRNAGene> OR @<SmallNucleolarRNAsnoRNAGene> OR
    @<TransferRNAtRNAGene>
)

<NoneQuantifier> CLOSED {
    (  $<NoneQuantifier_tes> (  &<QuantityModifier_tes> ;
          rdf:type [ <QuantityModifier> ] ?
       ) ;
       rdf:type [ <NoneQuantifier> ] ?
    )
}

<NonpolarSolvent> CLOSED {
    (  $<NonpolarSolvent_tes> (  &<Solvent_tes> ;
          rdf:type [ <Solvent> ] ?
       ) ;
       rdf:type [ <NonpolarSolvent> ] ?
    )
}

<NonToxic> CLOSED {
    (  $<NonToxic_tes> (  &<Toxicity_tes> ;
          rdf:type [ <Toxicity> ] ?
       ) ;
       rdf:type [ <NonToxic> ] ?
    )
}

<Normal> CLOSED {
    (  $<Normal_tes> (  &<Normality_tes> ;
          rdf:type [ <Normality> ] ?
       ) ;
       rdf:type [ <Normal> ] ?
    )
}

<Normality>  (
    CLOSED {
       (  $<Normality_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <Normality> ] ?
       )
    } OR @<Abnormal> OR @<Normal>
)

<Notation>  (
    CLOSED {
       (  $<Notation_tes> (  &<Specification_tes> ;
             rdf:type [ <Specification> ] ?
          ) ;
          rdf:type [ <Notation> ] ?
       )
    } OR @<ChemicalNotation> OR @<SequenceVariationNotation>
)

<Note> CLOSED {
    (  $<Note_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <Note> ] ?
    )
}

<NotStarted>  (
    CLOSED {
       (  $<NotStarted_tes> (  &<ProcessStatus_tes> ;
             rdf:type [ <ProcessStatus> ] ?
          ) ;
          rdf:type [ <NotStarted> ] ?
       )
    } OR @<Cancelled> OR @<Planned>
)

<Novel> CLOSED {
    (  $<Novel_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ?
       ) ;
       rdf:type [ <Novel> ] ?
    )
}

<NucleicAcid>  (
    CLOSED {
       (  $<NucleicAcid_tes> (  &<OrganicPolymer_tes> ;
             rdf:type [ <OrganicPolymer> ] ?
          ) ;
          rdf:type [ <NucleicAcid> ] ?
       )
    } OR @<DeoxyribonucleicAcid> OR @<NucleicAcidStrand> OR @<RibonucleicAcid>
)

<NucleicAcidPart>  (
    CLOSED {
       (  $<NucleicAcidPart_tes> (  &<OrganicSubmolecule_tes> ;
             rdf:type [ <OrganicSubmolecule> ] ?
          ) ;
          rdf:type [ <NucleicAcidPart> ] ?
       )
    } OR @<CisRegulatoryElement> OR @<Gene> OR @<GeneComponent> OR @<GeneticPolymorphism> OR @<GenomicSequenceVariant> OR
    @<NucleotideResidue> OR @<Operon> OR @<Pseudogene> OR @<RNATranscriptComponent> OR @<Trans-regulatoryElement>
)

<NucleicAcidSequence>  (
    CLOSED {
       (  $<NucleicAcidSequence_tes> (  &<BiopolymerSequence_tes> ;
             rdf:type [ <BiopolymerSequence> ] ?
          ) ;
          rdf:type [ <NucleicAcidSequence> ] ?
       )
    } OR @<CodingSequence> OR @<DeoxyribonucleicAcidSequence> OR @<RibonucleicAcidSequence>
)

<NucleicAcidStrand>  (
    CLOSED {
       (  $<NucleicAcidStrand_tes> (  &<NucleicAcid_tes> ;
             rdf:type [ <NucleicAcid> ] ?
          ) ;
          rdf:type [ <NucleicAcidStrand> ] ?
       )
    } OR @<NegativeNucleicAcidStrand> OR @<PositiveNucleicAcidStrand>
)

<NucleophilicAdditionReaction> CLOSED {
    (  $<NucleophilicAdditionReaction_tes> (  &<PolarAdditionReaction_tes> ;
          rdf:type [ <PolarAdditionReaction> ] ?
       ) ;
       rdf:type [ <NucleophilicAdditionReaction> ] ?
    )
}

<NucleotideResidue>  (
    CLOSED {
       (  $<NucleotideResidue_tes> (  &<NucleicAcidPart_tes> ;
             rdf:type [ <NucleicAcidPart> ] ?
          ) ;
          rdf:type [ <NucleotideResidue> ] ?
       )
    } OR @<DeoxyribonucleotideResidue> OR @<RibonucleotideResidue> OR @<SingleNucleotidePolymorphism>
)

<Nullizygous> CLOSED {
    (  $<Nullizygous_tes> (  &<Zygosity_tes> ;
          rdf:type [ <Zygosity> ] ?
       ) ;
       rdf:type [ <Nullizygous> ] ?
    )
}

<Number>  (
    CLOSED {
       (  $<Number_tes> (  &<Scalar_tes> ;
             rdf:type [ <Scalar> ] ?
          ) ;
          rdf:type [ <Number> ] ?
       )
    } OR @<MeasurementValue>
)

<NumberOfObjectsConsumed> CLOSED {
    (  $<NumberOfObjectsConsumed_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <NumberOfObjectsConsumed> ] ?
    )
}

<NumberOfObjectsProduced> CLOSED {
    (  $<NumberOfObjectsProduced_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <NumberOfObjectsProduced> ] ?
    )
}

<NumericLabel> CLOSED {
    (  $<NumericLabel_tes> (  &<Label_tes> ;
          rdf:type [ <Label> ] ?
       ) ;
       rdf:type [ <NumericLabel> ] ?
    )
}

<NumericScale>  (
    CLOSED {
       (  $<NumericScale_tes> (  &<MeasurementScale_tes> ;
             rdf:type [ <MeasurementScale> ] ?
          ) ;
          rdf:type [ <NumericScale> ] ?
       )
    } OR @<DecimalScale> OR @<IntegerScale>
)

<Nurse> CLOSED {
    (  $<Nurse_tes> (  &<MedicalPractitioner_tes> ;
          rdf:type [ <MedicalPractitioner> ] ?
       ) ;
       rdf:type [ <Nurse> ] ?
    )
}

<NurseRole> CLOSED {
    (  $<NurseRole_tes> (  &<MedicalRole_tes> ;
          rdf:type [ <MedicalRole> ] ?
       ) ;
       rdf:type [ <NurseRole> ] ?
    )
}

<Object>  (
    CLOSED {
       (  $<Object_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ? ;
             <derivesInto> @<Object> ?
          ) ;
          rdf:type [ <Object> ] ?
       )
    } OR @<InformationContentEntity> OR @<MaterialEntity> OR @<SpatialRegion> OR @<SpecializedObject>
)

<Objective> CLOSED {
    (  $<Objective_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Objective> ] ?
    )
}

<ObjectModel> CLOSED {
    (  $<ObjectModel_tes> (  &<Model_tes> ;
          rdf:type [ <Model> ] ?
       ) ;
       rdf:type [ <ObjectModel> ] ?
    )
}

<ObjectQuality>  (
    CLOSED {
       (  $<ObjectQuality_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <ObjectQuality> ] ?
       )
    } OR @<BiologicalQuality> OR @<ChemicalQuality> OR @<CompositionalQuality> OR @<Fitness> OR @<MereologicalQuality> OR
    @<ObjectRelationalQuality> OR @<Shape> OR @<StructuralQuality> OR @<TextQuality>
)

<ObjectRelationalQuality>  (
    CLOSED {
       (  $<ObjectRelationalQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <ObjectRelationalQuality> ] ?
       )
    } OR @<ReplicaQuality> OR @<SampleQuality> OR @<SyntheticQuality>
)

<OBOOntology> CLOSED {
    (  $<OBOOntology_tes> (  &<OntologyDocument_tes> ;
          rdf:type [ <OntologyDocument> ] ?
       ) ;
       rdf:type [ <OBOOntology> ] ?
    )
}

<ObservationalStudy>  (
    CLOSED {
       (  $<ObservationalStudy_tes> (  &<Experiment_tes> ;
             rdf:type [ <Experiment> ] ?
          ) ;
          rdf:type [ <ObservationalStudy> ] ?
       )
    } OR @<ControlledObservationalCohortStudy>
)

<Observing>  (
    CLOSED {
       (  $<Observing_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <Observing> ] ?
       )
    } OR @<Perception>
)

<OccupationalRole>  (
    CLOSED {
       (  $<OccupationalRole_tes> (  &<SocialRole_tes> ;
             rdf:type [ <SocialRole> ] ?
          ) ;
          rdf:type [ <OccupationalRole> ] ?
       )
    } OR @<AcademicRole> OR @<AdministrativeRole> OR @<MedicalRole> OR @<PublishingRole>
)

<Oligopeptide> CLOSED {
    (  $<Oligopeptide_tes> (  &<AminoAcidPolymer_tes> ;
          rdf:type [ <AminoAcidPolymer> ] ?
       ) ;
       rdf:type [ <Oligopeptide> ] ?
    )
}

<Ongoing> CLOSED {
    (  $<Ongoing_tes> (  &<ProcessStatus_tes> ;
          rdf:type [ <ProcessStatus> ] ?
       ) ;
       rdf:type [ <Ongoing> ] ?
    )
}

<Ontology> CLOSED {
    (  $<Ontology_tes> (  &<FormalSpecification_tes> ;
          rdf:type [ <FormalSpecification> ] ?
       ) ;
       rdf:type [ <Ontology> ] ?
    )
}

<OntologyDocument>  (
    CLOSED {
       (  $<OntologyDocument_tes> (  &<Document_tes> ;
             rdf:type [ <Document> ] ?
          ) ;
          rdf:type [ <OntologyDocument> ] ?
       )
    } OR @<OBOOntology> OR @<OWLOntology> OR @<RDFSOntology>
)

<OpenInterval> CLOSED {
    (  $<OpenInterval_tes> (  &<LeftOpenInterval_tes> ;
          rdf:type [ <LeftOpenInterval> ] ?
       ) ;
       rdf:type [ <OpenInterval> ] ?
    )
}

<OpenReadingFrame> CLOSED {
    (  $<OpenReadingFrame_tes> (  &<GeneComponent_tes> ;
          rdf:type [ <GeneComponent> ] ?
       ) ;
       rdf:type [ <OpenReadingFrame> ] ?
    )
}

<Operon> CLOSED {
    (  $<Operon_tes> (  &<NucleicAcidPart_tes> ;
          rdf:type [ <NucleicAcidPart> ] ?
       ) ;
       rdf:type [ <Operon> ] ?
    )
}

<Opinion>  (
    CLOSED {
       (  $<Opinion_tes> (  &<Belief_tes> ;
             rdf:type [ <Belief> ] ?
          ) ;
          rdf:type [ <Opinion> ] ?
       )
    } OR @<DiagnosticOpinion> OR @<Speculation>
)

<OpticalIsomer> CLOSED {
    (  $<OpticalIsomer_tes> (  &<Stereoisomer_tes> ;
          rdf:type [ <Stereoisomer> ] ?
       ) ;
       rdf:type [ <OpticalIsomer> ] ?
    )
}

<OrderedList>  (
    CLOSED {
       (  $<OrderedList_tes> (  &<List_tes> ;
             rdf:type [ <List> ] ?
          ) ;
          rdf:type [ <OrderedList> ] ?
       )
    } OR @<AuthorList>
)

<OrderedListItem> CLOSED {
    (  $<OrderedListItem_tes> (  &<ListItem_tes> ;
          rdf:type [ <ListItem> ] ?
       ) ;
       rdf:type [ <OrderedListItem> ] ?
    )
}

<OrdinalPosition>  (
    CLOSED {
       (  $<OrdinalPosition_tes> (  &<LinearPosition_tes> ;
             rdf:type [ <LinearPosition> ] ?
          ) ;
          rdf:type [ <OrdinalPosition> ] ?
       )
    } OR @<CharacterPosition> OR @<ProcessNumber>
)

<OrdinaryDifferentialEquation> CLOSED {
    (  $<OrdinaryDifferentialEquation_tes> (  &<DifferentialEquation_tes> ;
          rdf:type [ <DifferentialEquation> ] ?
       ) ;
       rdf:type [ <OrdinaryDifferentialEquation> ] ?
    )
}

<Organ> CLOSED {
    (  $<Organ_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <Organ> ] ?
    )
}

<OrganicMolecule>  (
    CLOSED {
       (  $<OrganicMolecule_tes> (  &<Molecule_tes> ;
             rdf:type [ <Molecule> ] ?
          ) ;
          rdf:type [ <OrganicMolecule> ] ?
       )
    } OR @<AminoAcid> OR @<Lipid> OR @<Monosaccharide> OR @<OrganicPolymer>
)

<OrganicPolymer>  (
    CLOSED {
       (  $<OrganicPolymer_tes> (  &<OrganicMolecule_tes> ;
             rdf:type [ <OrganicMolecule> ] ?
          ) ;
          rdf:type [ <OrganicPolymer> ] ?
       )
    } OR @<AminoAcidPolymer> OR @<Biopolymer> OR @<Carbohydrate> OR @<NucleicAcid>
)

<OrganicReaction>  (
    CLOSED {
       (  $<OrganicReaction_tes> (  &<ChemicalReaction_tes> ;
             rdf:type [ <ChemicalReaction> ] ?
          ) ;
          rdf:type [ <OrganicReaction> ] ?
       )
    } OR @<AdditionReaction>
)

<OrganicSubmolecule>  (
    CLOSED {
       (  $<OrganicSubmolecule_tes> (  &<Submolecule_tes> ;
             rdf:type [ <Submolecule> ] ?
          ) ;
          rdf:type [ <OrganicSubmolecule> ] ?
       )
    } OR @<AminoAcidPolymerSubmolecule> OR @<CarbohydrateResidue> OR @<LipidResidue> OR @<NucleicAcidPart>
)

<Organism>  (
    CLOSED {
       (  $<Organism_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ?
          ) ;
          rdf:type [ <Organism> ] ?
       )
    } OR @<CellularOrganism> OR @<Host> OR @<Non-cellularOrganism> OR @<Pathogen> OR @<Strain>
)

<Organization>  (
    CLOSED {
       (  $<Organization_tes> (  &<Collective_tes> ;
             rdf:type [ <Collective> ] ?
          ) ;
          rdf:type [ <Organization> ] ?
       )
    } OR @<AcademicOrganization> OR @<Corporation> OR @<Institute> OR @<RegulatoryAuthority>
)

<Orientation> CLOSED {
    (  $<Orientation_tes> (  &<Position_tes> ;
          rdf:type [ <Position> ] ?
       ) ;
       rdf:type [ <Orientation> ] ?
    )
}

<OsmiumAtom> CLOSED {
    (  $<OsmiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <OsmiumAtom> ] ?
    )
}

<Osmosis> CLOSED {
    (  $<Osmosis_tes> (  &<Diffusion_tes> ;
          rdf:type [ <Diffusion> ] ?
       ) ;
       rdf:type [ <Osmosis> ] ?
    )
}

<Ovopub>  (
    CLOSED {
       (  $<Ovopub_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <Ovopub> ] ?
       )
    } OR @<AssertionOvopub> OR @<CollectionOvopub>
)

<OWLOntology> CLOSED {
    (  $<OWLOntology_tes> (  &<OntologyDocument_tes> ;
          rdf:type [ <OntologyDocument> ] ?
       ) ;
       rdf:type [ <OWLOntology> ] ?
    )
}

<OxygenAtom> CLOSED {
    (  $<OxygenAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <OxygenAtom> ] ?
    )
}

<PageNumber> CLOSED {
    (  $<PageNumber_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <PageNumber> ] ?
    )
}

<PageRange> CLOSED {
    (  $<PageRange_tes> (  &<Interval_tes> ;
          rdf:type [ <Interval> ] ?
       ) ;
       rdf:type [ <PageRange> ] ?
    )
}

<PageTotal> CLOSED {
    (  $<PageTotal_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <PageTotal> ] ?
    )
}

<Pain> CLOSED {
    (  $<Pain_tes> (  &<Hurt_tes> ;
          rdf:type [ <Hurt> ] ?
       ) ;
       rdf:type [ <Pain> ] ?
    )
}

<PairwiseSequenceAlignment> CLOSED {
    (  $<PairwiseSequenceAlignment_tes> (  &<SequenceAlignment_tes> ;
          rdf:type [ <SequenceAlignment> ] ?
       ) ;
       rdf:type [ <PairwiseSequenceAlignment> ] ?
    )
}

<PalladiumAtom> CLOSED {
    (  $<PalladiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PalladiumAtom> ] ?
    )
}

<Panic> CLOSED {
    (  $<Panic_tes> (  &<Fear_tes> ;
          rdf:type [ <Fear> ] ?
       ) ;
       rdf:type [ <Panic> ] ?
    )
}

<Paragraph> CLOSED {
    (  $<Paragraph_tes> (  &<TextualEntity_tes> ;
          rdf:type [ <TextualEntity> ] ?
       ) ;
       rdf:type [ <Paragraph> ] ?
    )
}

<Parameter>  (
    CLOSED {
       (  $<Parameter_tes> (  &<IndependentVariable_tes> ;
             rdf:type [ <IndependentVariable> ] ?
          ) ;
          rdf:type [ <Parameter> ] ?
       )
    } OR @<DefaultParameter>
)

<ParameterizedDataTransformation> CLOSED {
    (  $<ParameterizedDataTransformation_tes> (  &<DataTransformation_tes> ;
          rdf:type [ <DataTransformation> ] ?
       ) ;
       rdf:type [ <ParameterizedDataTransformation> ] ?
    )
}

<ParentalTransmission>  (
    CLOSED {
       (  $<ParentalTransmission_tes> (  &<BiologicalQuality_tes> ;
             rdf:type [ <BiologicalQuality> ] ?
          ) ;
          rdf:type [ <ParentalTransmission> ] ?
       )
    } OR @<MaternallyTransmitted> OR @<PaternallyTransmitted>
)

<PartialCharge>  (
    CLOSED {
       (  $<PartialCharge_tes> (  &<Charged_tes> ;
             rdf:type [ <Charged> ] ?
          ) ;
          rdf:type [ <PartialCharge> ] ?
       )
    } OR @<PartialNegativeCharge> OR @<PartialPositiveCharge>
)

<PartialDifferentialEquation> CLOSED {
    (  $<PartialDifferentialEquation_tes> (  &<DifferentialEquation_tes> ;
          rdf:type [ <DifferentialEquation> ] ?
       ) ;
       rdf:type [ <PartialDifferentialEquation> ] ?
    )
}

<PartialNegativeCharge> CLOSED {
    (  $<PartialNegativeCharge_tes> (  &<PartialCharge_tes> ;
          rdf:type [ <PartialCharge> ] ?
       ) ;
       rdf:type [ <PartialNegativeCharge> ] ?
    )
}

<PartialPositiveCharge> CLOSED {
    (  $<PartialPositiveCharge_tes> (  &<PartialCharge_tes> ;
          rdf:type [ <PartialCharge> ] ?
       ) ;
       rdf:type [ <PartialPositiveCharge> ] ?
    )
}

<Passion> CLOSED {
    (  $<Passion_tes> (  &<Desire_tes> ;
          rdf:type [ <Desire> ] ?
       ) ;
       rdf:type [ <Passion> ] ?
    )
}

<PassiveMovement>  (
    CLOSED {
       (  $<PassiveMovement_tes> (  &<Movement_tes> ;
             rdf:type [ <Movement> ] ?
          ) ;
          rdf:type [ <PassiveMovement> ] ?
       )
    } OR @<Diffusion>
)

<PassiveTransport> CLOSED {
    (  $<PassiveTransport_tes> (  &<MembraneTransport_tes> ;
          rdf:type [ <MembraneTransport> ] ?
       ) ;
       rdf:type [ <PassiveTransport> ] ?
    )
}

<Patent> CLOSED {
    (  $<Patent_tes> (  &<LegalDocument_tes> ;
          rdf:type [ <LegalDocument> ] ?
       ) ;
       rdf:type [ <Patent> ] ?
    )
}

<PaternallyTransmitted> CLOSED {
    (  $<PaternallyTransmitted_tes> (  &<ParentalTransmission_tes> ;
          rdf:type [ <ParentalTransmission> ] ?
       ) ;
       rdf:type [ <PaternallyTransmitted> ] ?
    )
}

<Pathogen> CLOSED {
    (  $<Pathogen_tes> (  &<Organism_tes> ;
          rdf:type [ <Organism> ] ?
       ) ;
       rdf:type [ <Pathogen> ] ?
    )
}

<Pathway>  (
    CLOSED {
       (  $<Pathway_tes> (  &<ActionSpecification_tes> ;
             rdf:type [ <ActionSpecification> ] ?
          ) ;
          rdf:type [ <Pathway> ] ?
       )
    } OR @<ChemicalReactionPathway>
)

<Patient> CLOSED {
    (  $<Patient_tes> (  &<Person_tes> ;
          rdf:type [ <Person> ] ?
       ) ;
       rdf:type [ <Patient> ] ?
    )
}

<PatientRole> CLOSED {
    (  $<PatientRole_tes> (  &<MedicalRole_tes> ;
          rdf:type [ <MedicalRole> ] ?
       ) ;
       rdf:type [ <PatientRole> ] ?
    )
}

<Pattern>  (
    CLOSED {
       (  $<Pattern_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Pattern> ] ?
       )
    } OR @<SequenceMotif> OR @<SequenceProfile> OR @<StructuralMotif>
)

<PDBChainIdentifier> CLOSED {
    (  $<PDBChainIdentifier_tes> (  &<MolecularIdentifier_tes> ;
          rdf:type [ <MolecularIdentifier> ] ?
       ) ;
       rdf:type [ <PDBChainIdentifier> ] ?
    )
}

<PDBFile> CLOSED {
    (  $<PDBFile_tes> (  &<MolecularStructureFile_tes> ;
          rdf:type [ <MolecularStructureFile> ] ?
       ) ;
       rdf:type [ <PDBFile> ] ?
    )
}

<PDBRecordIdentifier> CLOSED {
    (  $<PDBRecordIdentifier_tes> (  &<RecordIdentifier_tes> ;
          rdf:type [ <RecordIdentifier> ] ?
       ) ;
       rdf:type [ <PDBRecordIdentifier> ] ?
    )
}

<Peer-reviewed> CLOSED {
    (  $<Peer-reviewed_tes> (  &<Reviewed_tes> ;
          rdf:type [ <Reviewed> ] ?
       ) ;
       rdf:type [ <Peer-reviewed> ] ?
    )
}

<PeerReviewedArticle> CLOSED {
    (  $<PeerReviewedArticle_tes> (  &<Article_tes> ;
          rdf:type [ <Article> ] ?
       ) ;
       rdf:type [ <PeerReviewedArticle> ] ?
    )
}

<Peptide> CLOSED {
    (  $<Peptide_tes> (  &<AminoAcidPolymer_tes> ;
          rdf:type [ <AminoAcidPolymer> ] ?
       ) ;
       rdf:type [ <Peptide> ] ?
    )
}

<Percentage> CLOSED {
    (  $<Percentage_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <Percentage> ] ?
    )
}

<Percentile> CLOSED {
    (  $<Percentile_tes> (  &<Quantile_tes> ;
          rdf:type [ <Quantile> ] ?
       ) ;
       rdf:type [ <Percentile> ] ?
    )
}

<Perception> CLOSED {
    (  $<Perception_tes> (  &<Observing_tes> ;
          rdf:type [ <Observing> ] ?
       ) ;
       rdf:type [ <Perception> ] ?
    )
}

<Periodical>  (
    CLOSED {
       (  $<Periodical_tes> (  &<CollectionOfDocuments_tes> ;
             rdf:type [ <CollectionOfDocuments> ] ?
          ) ;
          rdf:type [ <Periodical> ] ?
       )
    } OR @<Journal> OR @<Magazine> OR @<Newspaper>
)

<Person>  (
    CLOSED {
       (  $<Person_tes> (  &<SpecializedObject_tes> ;
             rdf:type [ <SpecializedObject> ] ?
          ) ;
          rdf:type [ <Person> ] ?
       )
    } OR @<Academic> OR @<MedicalPractitioner> OR @<Patient> OR @<StudySubject>
)

<PersonalName>  (
    CLOSED {
       (  $<PersonalName_tes> (  &<Name_tes> ;
             rdf:type [ <Name> ] ?
          ) ;
          rdf:type [ <PersonalName> ] ?
       )
    } OR @<LegalName>
)

<PH> CLOSED {
    (  $<PH_tes> (  &<DimensionlessQuantity_tes> ;
          rdf:type [ <DimensionlessQuantity> ] ?
       ) ;
       rdf:type [ <PH> ] ?
    )
}

<PharmaceuticalDrug>  (
    CLOSED {
       (  $<PharmaceuticalDrug_tes> (  &<Drug_tes> ;
             rdf:type [ <Drug> ] ?
          ) ;
          rdf:type [ <PharmaceuticalDrug> ] ?
       )
    } OR @<Biologic>
)

<PharmaceuticalIngredient>  (
    CLOSED {
       (  $<PharmaceuticalIngredient_tes> (  &<Ingredient_tes> ;
             rdf:type [ <Ingredient> ] ?
          ) ;
          rdf:type [ <PharmaceuticalIngredient> ] ?
       )
    } OR @<ActiveIngredient> OR @<InactiveIngredient>
)

<PharmacodynamicPathway> CLOSED {
    (  $<PharmacodynamicPathway_tes> (  &<RegulatoryPathway_tes> ;
          rdf:type [ <RegulatoryPathway> ] ?
       ) ;
       rdf:type [ <PharmacodynamicPathway> ] ?
    )
}

<PharmacokineticPathway> CLOSED {
    (  $<PharmacokineticPathway_tes> (  &<MetabolicPathway_tes> ;
          rdf:type [ <MetabolicPathway> ] ?
       ) ;
       rdf:type [ <PharmacokineticPathway> ] ?
    )
}

<PhdThesis> CLOSED {
    (  $<PhdThesis_tes> (  &<ThesisDocument_tes> ;
          rdf:type [ <ThesisDocument> ] ?
       ) ;
       rdf:type [ <PhdThesis> ] ?
    )
}

<Phenotype> CLOSED {
    (  $<Phenotype_tes> (  &<BiologicalQuality_tes> ;
          rdf:type [ <BiologicalQuality> ] ?
       ) ;
       rdf:type [ <Phenotype> ] ?
    )
}

<PhosphorusAtom> CLOSED {
    (  $<PhosphorusAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PhosphorusAtom> ] ?
    )
}

<Photograph>  (
    CLOSED {
       (  $<Photograph_tes> (  &<Image_tes> ;
             rdf:type [ <Image> ] ?
          ) ;
          rdf:type [ <Photograph> ] ?
       )
    } OR @<GeographicImage>
)

<Phrase>  (
    CLOSED {
       (  $<Phrase_tes> (  &<LanguageEntity_tes> ;
             rdf:type [ <LanguageEntity> ] ?
          ) ;
          rdf:type [ <Phrase> ] ?
       )
    } OR @<Sentence>
)

<PhraseNetDiagram> CLOSED {
    (  $<PhraseNetDiagram_tes> (  &<TextualChart_tes> ;
          rdf:type [ <TextualChart> ] ?
       ) ;
       rdf:type [ <PhraseNetDiagram> ] ?
    )
}

<PhysicalEntityIdentifier>  (
    CLOSED {
       (  $<PhysicalEntityIdentifier_tes> (  &<Identifier_tes> ;
             rdf:type [ <Identifier> ] ?
          ) ;
          rdf:type [ <PhysicalEntityIdentifier> ] ?
       )
    } OR @<ChemicalIdentifier>
)

<PieChart> CLOSED {
    (  $<PieChart_tes> (  &<MereologicalChart_tes> ;
          rdf:type [ <MereologicalChart> ] ?
       ) ;
       rdf:type [ <PieChart> ] ?
    )
}

<Pity> CLOSED {
    (  $<Pity_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Pity> ] ?
    )
}

<Placebo> CLOSED {
    (  $<Placebo_tes> (  &<HeterogeneousSubstance_tes> ;
          rdf:type [ <HeterogeneousSubstance> ] ?
       ) ;
       rdf:type [ <Placebo> ] ?
    )
}

<Plan> CLOSED {
    (  $<Plan_tes> (  &<ActionSpecification_tes> ;
          rdf:type [ <ActionSpecification> ] ?
       ) ;
       rdf:type [ <Plan> ] ?
    )
}

<Planned> CLOSED {
    (  $<Planned_tes> (  &<NotStarted_tes> ;
          rdf:type [ <NotStarted> ] ?
       ) ;
       rdf:type [ <Planned> ] ?
    )
}

<Planning> CLOSED {
    (  $<Planning_tes> (  &<Creating_tes> ;
          rdf:type [ <Creating> ] ?
       ) ;
       rdf:type [ <Planning> ] ?
    )
}

<PlateauLine> CLOSED {
    (  $<PlateauLine_tes> (  &<TrendLine_tes> ;
          rdf:type [ <TrendLine> ] ?
       ) ;
       rdf:type [ <PlateauLine> ] ?
    )
}

<PlatinumAtom> CLOSED {
    (  $<PlatinumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PlatinumAtom> ] ?
    )
}

<Pleasure> CLOSED {
    (  $<Pleasure_tes> (  &<Happiness_tes> ;
          rdf:type [ <Happiness> ] ?
       ) ;
       rdf:type [ <Pleasure> ] ?
    )
}

<Ploidy> CLOSED {
    (  $<Ploidy_tes> (  &<CellularQuality_tes> ;
          rdf:type [ <CellularQuality> ] ?
       ) ;
       rdf:type [ <Ploidy> ] ?
    )
}

<Plot> CLOSED {
    (  $<Plot_tes> (  &<FigurePart_tes> ;
          rdf:type [ <FigurePart> ] ?
       ) ;
       rdf:type [ <Plot> ] ?
    )
}

<PlutoniumAtom> CLOSED {
    (  $<PlutoniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PlutoniumAtom> ] ?
    )
}

<Point>  (
    CLOSED {
       (  $<Point_tes> (  &<GeometricEntity_tes> ;
             rdf:type [ <GeometricEntity> ] ?
          ) ;
          rdf:type [ <Point> ] ?
       )
    } OR @<1DCartesianPoint> OR @<2DCartesianPoint> OR @<3DCartesianPoint> OR @<DataPoint> OR @<Node> OR @<TerminalPoint>
)

<Poison> CLOSED {
    (  $<Poison_tes> (  &<Drug_tes> ;
          rdf:type [ <Drug> ] ?
       ) ;
       rdf:type [ <Poison> ] ?
    )
}

<PoisonRole>  (
    CLOSED {
       (  $<PoisonRole_tes> (  &<ToxicRole_tes> ;
             rdf:type [ <ToxicRole> ] ?
          ) ;
          rdf:type [ <PoisonRole> ] ?
       )
    } OR @<ToxinRole>
)

<Polar> CLOSED {
    (  $<Polar_tes> (  &<PolarQuality_tes> ;
          rdf:type [ <PolarQuality> ] ?
       ) ;
       rdf:type [ <Polar> ] ?
    )
}

<PolarAdditionReaction>  (
    CLOSED {
       (  $<PolarAdditionReaction_tes> (  &<AdditionReaction_tes> ;
             rdf:type [ <AdditionReaction> ] ?
          ) ;
          rdf:type [ <PolarAdditionReaction> ] ?
       )
    } OR @<ElectrophilicAdditionReaction> OR @<NucleophilicAdditionReaction>
)

<PolarCoordinate> CLOSED {
    (  $<PolarCoordinate_tes> (  &<Coordinate_tes> ;
          rdf:type [ <Coordinate> ] ?
       ) ;
       rdf:type [ <PolarCoordinate> ] ?
    )
}

<PolarCoordinateSystem> CLOSED {
    (  $<PolarCoordinateSystem_tes> (  &<CoordinateSystem_tes> ;
          rdf:type [ <CoordinateSystem> ] ?
       ) ;
       rdf:type [ <PolarCoordinateSystem> ] ?
    )
}

<PolarQuality>  (
    CLOSED {
       (  $<PolarQuality_tes> (  &<ChemicalQuality_tes> ;
             rdf:type [ <ChemicalQuality> ] ?
          ) ;
          rdf:type [ <PolarQuality> ] ?
       )
    } OR @<Non-polar> OR @<Polar>
)

<PolarSolvent> CLOSED {
    (  $<PolarSolvent_tes> (  &<Solvent_tes> ;
          rdf:type [ <Solvent> ] ?
       ) ;
       rdf:type [ <PolarSolvent> ] ?
    )
}

<PoloniumAtom> CLOSED {
    (  $<PoloniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PoloniumAtom> ] ?
    )
}

<Polygon>  (
    CLOSED {
       (  $<Polygon_tes> (  &<GeometricEntity_tes> ;
             rdf:type [ <GeometricEntity> ] ?
          ) ;
          rdf:type [ <Polygon> ] ?
       )
    } OR @<Quadrilateral> OR @<Triangle>
)

<PolygonalFace> CLOSED {
    (  $<PolygonalFace_tes> (  &<GeometricEntity_tes> ;
          rdf:type [ <GeometricEntity> ] ?
       ) ;
       rdf:type [ <PolygonalFace> ] ?
    )
}

<PolygonEdge> CLOSED {
    (  $<PolygonEdge_tes> (  &<LineSegment_tes> ;
          rdf:type [ <LineSegment> ] ?
       ) ;
       rdf:type [ <PolygonEdge> ] ?
    )
}

<PolygonVertex> CLOSED {
    (  $<PolygonVertex_tes> (  &<Node_tes> ;
          rdf:type [ <Node> ] ?
       ) ;
       rdf:type [ <PolygonVertex> ] ?
    )
}

<PolyhedralSkeleton> CLOSED {
    (  $<PolyhedralSkeleton_tes> (  &<GeometricEntity_tes> ;
          rdf:type [ <GeometricEntity> ] ?
       ) ;
       rdf:type [ <PolyhedralSkeleton> ] ?
    )
}

<PolyhedralSurface> CLOSED {
    (  $<PolyhedralSurface_tes> (  &<GeometricEntity_tes> ;
          rdf:type [ <GeometricEntity> ] ?
       ) ;
       rdf:type [ <PolyhedralSurface> ] ?
    )
}

<Polyline> CLOSED {
    (  $<Polyline_tes> (  &<GeometricEntity_tes> ;
          rdf:type [ <GeometricEntity> ] ?
       ) ;
       rdf:type [ <Polyline> ] ?
    )
}

<Polymer> CLOSED {
    (  $<Polymer_tes> (  &<Molecule_tes> ;
          rdf:type [ <Molecule> ] ?
       ) ;
       rdf:type [ <Polymer> ] ?
    )
}

<Polypeptide> CLOSED {
    (  $<Polypeptide_tes> (  &<AminoAcidPolymer_tes> ;
          rdf:type [ <AminoAcidPolymer> ] ?
       ) ;
       rdf:type [ <Polypeptide> ] ?
    )
}

<PoorQuality> CLOSED {
    (  $<PoorQuality_tes> (  &<QualityDescriptor_tes> ;
          rdf:type [ <QualityDescriptor> ] ?
       ) ;
       rdf:type [ <PoorQuality> ] ?
    )
}

<Population>  (
    CLOSED {
       (  $<Population_tes> (  &<Collective_tes> ;
             rdf:type [ <Collective> ] ?
          ) ;
          rdf:type [ <Population> ] ?
       )
    } OR @<HumanPopulation>
)

<Position>  (
    CLOSED {
       (  $<Position_tes> (  &<MeasurementValue_tes> ;
             rdf:type [ <MeasurementValue> ] ?
          ) ;
          rdf:type [ <Position> ] ?
       )
    } OR @<Altitude> OR @<CenterOfMass> OR @<Coordinate> OR @<GeographicPosition> OR @<LinearPosition> OR @<Orientation>
)

<PositionalIdentifier>  (
    CLOSED {
       (  $<PositionalIdentifier_tes> (  &<Identifier_tes> ;
             rdf:type [ <Identifier> ] ?
          ) ;
          rdf:type [ <PositionalIdentifier> ] ?
       )
    } OR @<Address> OR @<ApartmentNumber> OR @<StreetName>
)

<PositionallyOrientedLine>  (
    CLOSED {
       (  $<PositionallyOrientedLine_tes> (  &<Line_tes> ;
             rdf:type [ <Line> ] ?
          ) ;
          rdf:type [ <PositionallyOrientedLine> ] ?
       )
    } OR @<HorizontalLine> OR @<VerticalLine>
)

<PositionalRole> CLOSED {
    (  $<PositionalRole_tes> (  &<AbstractRole_tes> ;
          rdf:type [ <AbstractRole> ] ?
       ) ;
       rdf:type [ <PositionalRole> ] ?
    )
}

<Positive> CLOSED {
    (  $<Positive_tes> (  &<AssertionalQualifier_tes> ;
          rdf:type [ <AssertionalQualifier> ] ?
       ) ;
       rdf:type [ <Positive> ] ?
    )
}

<PositiveCharge> CLOSED {
    (  $<PositiveCharge_tes> (  &<CompleteCharge_tes> ;
          rdf:type [ <CompleteCharge> ] ?
       ) ;
       rdf:type [ <PositiveCharge> ] ?
    )
}

<PositiveEmotion>  (
    CLOSED {
       (  $<PositiveEmotion_tes> (  &<Emotion_tes> ;
             rdf:type [ <Emotion> ] ?
          ) ;
          rdf:type [ <PositiveEmotion> ] ?
       )
    } OR @<Affection> OR @<Arousal> OR @<Awe> OR @<Boldness> OR @<Ecstasy> OR @<Excitement> OR @<Gratitude> OR @<Happiness> OR
    @<Hope> OR @<Interest> OR @<Love> OR @<Surprise>
)

<PositiveNucleicAcidStrand> CLOSED {
    (  $<PositiveNucleicAcidStrand_tes> (  &<NucleicAcidStrand_tes> ;
          rdf:type [ <NucleicAcidStrand> ] ?
       ) ;
       rdf:type [ <PositiveNucleicAcidStrand> ] ?
    )
}

<Post-translationalModification> CLOSED {
    (  $<Post-translationalModification_tes> (  &<AminoAcidPolymerSubmolecule_tes> ;
          rdf:type [ <AminoAcidPolymerSubmolecule> ] ?
       ) ;
       rdf:type [ <Post-translationalModification> ] ?
    )
}

<PostalCode> CLOSED {
    (  $<PostalCode_tes> (  &<GeographicPosition_tes> ;
          rdf:type [ <GeographicPosition> ] ?
       ) ;
       rdf:type [ <PostalCode> ] ?
    )
}

<PotassiumAtom> CLOSED {
    (  $<PotassiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PotassiumAtom> ] ?
    )
}

<PraseodymiumAtom> CLOSED {
    (  $<PraseodymiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PraseodymiumAtom> ] ?
    )
}

<Pre-mRNA> CLOSED {
    (  $<Pre-mRNA_tes> (  &<MessengerRNA_tes> ;
          rdf:type [ <MessengerRNA> ] ?
       ) ;
       rdf:type [ <Pre-mRNA> ] ?
    )
}

<Predicted> CLOSED {
    (  $<Predicted_tes> (  &<Hypothetical_tes> ;
          rdf:type [ <Hypothetical> ] ?
       ) ;
       rdf:type [ <Predicted> ] ?
    )
}

<PredictedGene> CLOSED {
    (  $<PredictedGene_tes> (  &<Gene_tes> ;
          rdf:type [ <Gene> ] ?
       ) ;
       rdf:type [ <PredictedGene> ] ?
    )
}

<Predicting> CLOSED {
    (  $<Predicting_tes> (  &<Creating_tes> ;
          rdf:type [ <Creating> ] ?
       ) ;
       rdf:type [ <Predicting> ] ?
    )
}

<PreferredName> CLOSED {
    (  $<PreferredName_tes> (  &<Name_tes> ;
          rdf:type [ <Name> ] ?
       ) ;
       rdf:type [ <PreferredName> ] ?
    )
}

<Premise> CLOSED {
    (  $<Premise_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Premise> ] ?
    )
}

<Pride> CLOSED {
    (  $<Pride_tes> (  &<Satisfaction_tes> ;
          rdf:type [ <Satisfaction> ] ?
       ) ;
       rdf:type [ <Pride> ] ?
    )
}

<PrimaryActiveTransport> CLOSED {
    (  $<PrimaryActiveTransport_tes> (  &<ActiveTransport_tes> ;
          rdf:type [ <ActiveTransport> ] ?
       ) ;
       rdf:type [ <PrimaryActiveTransport> ] ?
    )
}

<PrimaryCategoryAxis> CLOSED {
    (  $<PrimaryCategoryAxis_tes> (  &<CategoryAxis_tes> ;
          rdf:type [ <CategoryAxis> ] ?
       ) ;
       rdf:type [ <PrimaryCategoryAxis> ] ?
    )
}

<PrimaryDatabaseKey> CLOSED {
    (  $<PrimaryDatabaseKey_tes> (  &<DatabaseKey_tes> ;
          rdf:type [ <DatabaseKey> ] ?
       ) ;
       rdf:type [ <PrimaryDatabaseKey> ] ?
    )
}

<PrimaryGraphTitle> CLOSED {
    (  $<PrimaryGraphTitle_tes> (  &<PrimaryTitle_tes> ;
          rdf:type [ <PrimaryTitle> ] ?
       ) ;
       rdf:type [ <PrimaryGraphTitle> ] ?
    )
}

<PrimaryStructureDescriptor>  (
    CLOSED {
       (  $<PrimaryStructureDescriptor_tes> (  &<BiomolecularStructureDescriptor_tes> ;
             rdf:type [ <BiomolecularStructureDescriptor> ] ?
          ) ;
          rdf:type [ <PrimaryStructureDescriptor> ] ?
       )
    } OR @<BiopolymerSequence>
)

<PrimaryTitle>  (
    CLOSED {
       (  $<PrimaryTitle_tes> (  &<Title_tes> ;
             rdf:type [ <Title> ] ?
          ) ;
          rdf:type [ <PrimaryTitle> ] ?
       )
    } OR @<PrimaryGraphTitle> OR @<SecondaryGraphTitle>
)

<Primer>  (
    CLOSED {
       (  $<Primer_tes> rdf:type . * ;
          rdf:type [ <Primer> ] ?
       )
    } OR @<DeoxyribonucleicAcidPrimer>
)

<ProbabilityMeasure>  (
    CLOSED {
       (  $<ProbabilityMeasure_tes> (  &<DimensionlessQuantity_tes> ;
             rdf:type [ <DimensionlessQuantity> ] ?
          ) ;
          rdf:type [ <ProbabilityMeasure> ] ?
       )
    } OR @<ExpectedValue> OR @<ProbabilityValue> OR @<StandardScore>
)

<ProbabilityValue> CLOSED {
    (  $<ProbabilityValue_tes> (  &<ProbabilityMeasure_tes> ;
          rdf:type [ <ProbabilityMeasure> ] ?
       ) ;
       rdf:type [ <ProbabilityValue> ] ?
    )
}

<Procedure>  (
    CLOSED {
       (  $<Procedure_tes> (  &<Process_tes> ;
             rdf:type [ <Process> ] ?
          ) ;
          rdf:type [ <Procedure> ] ?
       )
    } OR @<Assay> OR @<InformationProcessing> OR @<Investigation> OR @<MedicalProcedure>
)

<Process>  (
    CLOSED {
       (  $<Process_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ? ;
             <hasParticipant> @<Entity> ?
          ) ;
          rdf:type [ <Process> ] ?
       )
    } OR @<Behaviour> OR @<Interacting> OR @<Movement> OR @<Procedure>
)

<ProcessDown-regulation> CLOSED {
    (  $<ProcessDown-regulation_tes> (  &<RegulationOfProcess_tes> ;
          rdf:type [ <RegulationOfProcess> ] ?
       ) ;
       rdf:type [ <ProcessDown-regulation> ] ?
    )
}

<ProcessMaintenance>  (
    CLOSED {
       (  $<ProcessMaintenance_tes> (  &<RegulationOfProcess_tes> ;
             rdf:type [ <RegulationOfProcess> ] ?
          ) ;
          rdf:type [ <ProcessMaintenance> ] ?
       )
    } OR @<InformationMaintenance>
)

<ProcessModel> CLOSED {
    (  $<ProcessModel_tes> (  &<Model_tes> ;
          rdf:type [ <Model> ] ?
       ) ;
       rdf:type [ <ProcessModel> ] ?
    )
}

<ProcessNumber> CLOSED {
    (  $<ProcessNumber_tes> (  &<OrdinalPosition_tes> ;
          rdf:type [ <OrdinalPosition> ] ?
       ) ;
       rdf:type [ <ProcessNumber> ] ?
    )
}

<ProcessQuality>  (
    CLOSED {
       (  $<ProcessQuality_tes> (  &<Quality_tes> ;
             rdf:type [ <Quality> ] ?
          ) ;
          rdf:type [ <ProcessQuality> ] ?
       )
    } OR @<ProcessStatus>
)

<ProcessStatus>  (
    CLOSED {
       (  $<ProcessStatus_tes> (  &<ProcessQuality_tes> ;
             rdf:type [ <ProcessQuality> ] ?
          ) ;
          rdf:type [ <ProcessStatus> ] ?
       )
    } OR @<Aborted> OR @<Completed> OR @<NotStarted> OR @<Ongoing> OR @<Suspended>
)

<ProcessualRole>  (
    CLOSED {
       (  $<ProcessualRole_tes> (  &<Role_tes> ;
             rdf:type [ <Role> ] ?
          ) ;
          rdf:type [ <ProcessualRole> ] ?
       )
    } OR @<ChemicalEntityRole> OR @<InvestigationalRole>
)

<ProcessUp-regulation> CLOSED {
    (  $<ProcessUp-regulation_tes> (  &<RegulationOfProcess_tes> ;
          rdf:type [ <RegulationOfProcess> ] ?
       ) ;
       rdf:type [ <ProcessUp-regulation> ] ?
    )
}

<Product> CLOSED {
    (  $<Product_tes> (  &<Molecule_tes> ;
          rdf:type [ <Molecule> ] ?
       ) ;
       rdf:type [ <Product> ] ?
    )
}

<ProductRole> CLOSED {
    (  $<ProductRole_tes> (  &<MolecularEntityRole_tes> ;
          rdf:type [ <MolecularEntityRole> ] ?
       ) ;
       rdf:type [ <ProductRole> ] ?
    )
}

<Professor> CLOSED {
    (  $<Professor_tes> (  &<Academic_tes> ;
          rdf:type [ <Academic> ] ?
       ) ;
       rdf:type [ <Professor> ] ?
    )
}

<ProfessorRole> CLOSED {
    (  $<ProfessorRole_tes> (  &<AcademicRole_tes> ;
          rdf:type [ <AcademicRole> ] ?
       ) ;
       rdf:type [ <ProfessorRole> ] ?
    )
}

<Prognosis> CLOSED {
    (  $<Prognosis_tes> (  &<Proposition_tes> ;
          rdf:type [ <Proposition> ] ?
       ) ;
       rdf:type [ <Prognosis> ] ?
    )
}

<PromethiumAtom> CLOSED {
    (  $<PromethiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <PromethiumAtom> ] ?
    )
}

<Proposition>  (
    CLOSED {
       (  $<Proposition_tes> (  &<Description_tes> ;
             rdf:type [ <Description> ] ?
          ) ;
          rdf:type [ <Proposition> ] ?
       )
    } OR @<Argument> OR @<Belief> OR @<Comment> OR @<Conclusion> OR @<Evidence> OR @<Hypothesis> OR @<Idea> OR @<Justification> OR
    @<Objective> OR @<Premise> OR @<Prognosis> OR @<Statement>
)

<ProstheticGroupRole> CLOSED {
    (  $<ProstheticGroupRole_tes> (  &<Co-enzymeRole_tes> ;
          rdf:type [ <Co-enzymeRole> ] ?
       ) ;
       rdf:type [ <ProstheticGroupRole> ] ?
    )
}

<ProtactiniumAtom> CLOSED {
    (  $<ProtactiniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ProtactiniumAtom> ] ?
    )
}

<Protein>  (
    CLOSED {
       (  $<Protein_tes> (  &<AminoAcidPolymer_tes> ;
             rdf:type [ <AminoAcidPolymer> ] ?
          ) ;
          rdf:type [ <Protein> ] ?
       )
    } OR @<Enzyme>
)

<ProteinCodingGene> CLOSED {
    (  $<ProteinCodingGene_tes> (  &<Gene_tes> ;
          rdf:type [ <Gene> ] ?
       ) ;
       rdf:type [ <ProteinCodingGene> ] ?
    )
}

<ProteinCodingSequence> CLOSED {
    (  $<ProteinCodingSequence_tes> (  &<GeneComponent_tes> ;
          rdf:type [ <GeneComponent> ] ?
       ) ;
       rdf:type [ <ProteinCodingSequence> ] ?
    )
}

<ProteinComplex>  (
    CLOSED {
       (  $<ProteinComplex_tes> (  &<MolecularComplex_tes> ;
             rdf:type [ <MolecularComplex> ] ?
          ) ;
          rdf:type [ <ProteinComplex> ] ?
       )
    } OR @<Antibody>
)

<ProteinDomain> CLOSED {
    (  $<ProteinDomain_tes> (  &<AminoAcidPolymerSubmolecule_tes> ;
          rdf:type [ <AminoAcidPolymerSubmolecule> ] ?
       ) ;
       rdf:type [ <ProteinDomain> ] ?
    )
}

<ProteinExpressionValue> CLOSED {
    (  $<ProteinExpressionValue_tes> (  &<DimensionalQuantity_tes> ;
          rdf:type [ <DimensionalQuantity> ] ?
       ) ;
       rdf:type [ <ProteinExpressionValue> ] ?
    )
}

<ProteinFamily> CLOSED {
    (  $<ProteinFamily_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <ProteinFamily> ] ?
    )
}

<ProteinMediatedRegulationOfTranslation> CLOSED {
    (  $<ProteinMediatedRegulationOfTranslation_tes> (  &<RegulationOfTranslation_tes> ;
          rdf:type [ <RegulationOfTranslation> ] ?
       ) ;
       rdf:type [ <ProteinMediatedRegulationOfTranslation> ] ?
    )
}

<ProteinSequence> CLOSED {
    (  $<ProteinSequence_tes> (  &<BiopolymerSequence_tes> ;
          rdf:type [ <BiopolymerSequence> ] ?
       ) ;
       rdf:type [ <ProteinSequence> ] ?
    )
}

<Province> CLOSED {
    (  $<Province_tes> (  &<GeopoliticalRegion_tes> ;
          rdf:type [ <GeopoliticalRegion> ] ?
       ) ;
       rdf:type [ <Province> ] ?
    )
}

<Pseudogene> CLOSED {
    (  $<Pseudogene_tes> (  &<NucleicAcidPart_tes> ;
          rdf:type [ <NucleicAcidPart> ] ?
       ) ;
       rdf:type [ <Pseudogene> ] ?
    )
}

<Publication>  (
    CLOSED {
       (  $<Publication_tes> (  &<Document_tes> ;
             rdf:type [ <Document> ] ?
          ) ;
          rdf:type [ <Publication> ] ?
       )
    } OR @<Article> OR @<Blog> OR @<Book> OR @<EditedPublication> OR @<Manual> OR @<Novel> OR @<TechnicalReport> OR
    @<ThesisDocument>
)

<PublisherRole> CLOSED {
    (  $<PublisherRole_tes> (  &<PublishingRole_tes> ;
          rdf:type [ <PublishingRole> ] ?
       ) ;
       rdf:type [ <PublisherRole> ] ?
    )
}

<PublishingRole>  (
    CLOSED {
       (  $<PublishingRole_tes> (  &<OccupationalRole_tes> ;
             rdf:type [ <OccupationalRole> ] ?
          ) ;
          rdf:type [ <PublishingRole> ] ?
       )
    } OR @<AuthorRole> OR @<PublisherRole>
)

<Purpose> CLOSED {
    (  $<Purpose_tes> (  &<Reason_tes> ;
          rdf:type [ <Reason> ] ?
       ) ;
       rdf:type [ <Purpose> ] ?
    )
}

<Quadrilateral>  (
    CLOSED {
       (  $<Quadrilateral_tes> (  &<Polygon_tes> ;
             rdf:type [ <Polygon> ] ?
          ) ;
          rdf:type [ <Quadrilateral> ] ?
       )
    } OR @<Rectangle>
)

<Quality>  (
    CLOSED {
       (  $<Quality_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ? ;
             <isQualityOf> @<Entity> ? ;
             <isBaseFor> @<RealizableEntity> ?
          ) ;
          rdf:type [ <Quality> ] ?
       )
    } OR @<AssertionalQualifier> OR @<ExistenceQuality> OR @<InformationalQuality> OR @<Intensity> OR @<Normality> OR
    @<ObjectQuality> OR @<ProcessQuality>
)

<QualityDescriptor>  (
    CLOSED {
       (  $<QualityDescriptor_tes> (  &<InformationalQuality_tes> ;
             rdf:type [ <InformationalQuality> ] ?
          ) ;
          rdf:type [ <QualityDescriptor> ] ?
       )
    } OR @<ExcellentQuality> OR @<GoodQuality> OR @<NeitherGoodNorPoorQuality> OR @<PoorQuality> OR @<VeryGoodQuality> OR
    @<VeryPoorQuality>
)

<Quantile>  (
    CLOSED {
       (  $<Quantile_tes> (  &<DimensionlessQuantity_tes> ;
             rdf:type [ <DimensionlessQuantity> ] ?
          ) ;
          rdf:type [ <Quantile> ] ?
       )
    } OR @<Percentile>
)

<Quantity>  (
    CLOSED {
       (  $<Quantity_tes> (  &<MeasurementValue_tes> ;
             rdf:type [ <MeasurementValue> ] ? ;
             <isNumericallyComparableTo> @<Quantity> ?
          ) ;
          rdf:type [ <Quantity> ] ?
       )
    } OR @<CentralityMeasure> OR @<DimensionalQuantity> OR @<DimensionlessQuantity> OR @<Likelihood> OR @<MaximalValue> OR
    @<MinimalValue> OR @<StandardDeviation> OR @<Sum> OR @<UncertaintyValue> OR @<UnitOfMeasurement>
)

<QuantityModifier>  (
    CLOSED {
       (  $<QuantityModifier_tes> (  &<InformationalQuality_tes> ;
             rdf:type [ <InformationalQuality> ] ?
          ) ;
          rdf:type [ <QuantityModifier> ] ?
       )
    } OR @<ALittleQuantifier> OR @<CompletelyQuantifier> OR @<ModeratelyQuantifier> OR @<MostlyQuantifier> OR @<NoneQuantifier>
)

<QuaternaryStructure> CLOSED {
    (  $<QuaternaryStructure_tes> (  &<BiomolecularStructureDescriptor_tes> ;
          rdf:type [ <BiomolecularStructureDescriptor> ] ?
       ) ;
       rdf:type [ <QuaternaryStructure> ] ?
    )
}

<Question> CLOSED {
    (  $<Question_tes> (  &<Sentence_tes> ;
          rdf:type [ <Sentence> ] ?
       ) ;
       rdf:type [ <Question> ] ?
    )
}

<Quote> CLOSED {
    (  $<Quote_tes> (  &<Excerpt_tes> ;
          rdf:type [ <Excerpt> ] ?
       ) ;
       rdf:type [ <Quote> ] ?
    )
}

<Race> CLOSED {
    (  $<Race_tes> (  &<BiologicalQuality_tes> ;
          rdf:type [ <BiologicalQuality> ] ?
       ) ;
       rdf:type [ <Race> ] ?
    )
}

<Radar> CLOSED {
    (  $<Radar_tes> (  &<Device_tes> ;
          rdf:type [ <Device> ] ?
       ) ;
       rdf:type [ <Radar> ] ?
    )
}

<RadioReceiver> CLOSED {
    (  $<RadioReceiver_tes> (  &<CommunicationDevice_tes> ;
          rdf:type [ <CommunicationDevice> ] ?
       ) ;
       rdf:type [ <RadioReceiver> ] ?
    )
}

<RadiumAtom> CLOSED {
    (  $<RadiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RadiumAtom> ] ?
    )
}

<RadonAtom> CLOSED {
    (  $<RadonAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RadonAtom> ] ?
    )
}

<Rage> CLOSED {
    (  $<Rage_tes> (  &<Anger_tes> ;
          rdf:type [ <Anger> ] ?
       ) ;
       rdf:type [ <Rage> ] ?
    )
}

<RankNonzeroTensor>  (
    CLOSED {
       (  $<RankNonzeroTensor_tes> (  &<Tensor_tes> ;
             rdf:type [ <Tensor> ] ?
          ) ;
          rdf:type [ <RankNonzeroTensor> ] ?
       )
    } OR @<Matrix> OR @<Vector>
)

<Rat> CLOSED {
    (  $<Rat_tes> (  &<MulticellularOrganism_tes> ;
          rdf:type [ <MulticellularOrganism> ] ?
       ) ;
       rdf:type [ <Rat> ] ?
    )
}

<RateOfChange>  (
    CLOSED {
       (  $<RateOfChange_tes> (  &<DimensionalQuantity_tes> ;
             rdf:type [ <DimensionalQuantity> ] ?
          ) ;
          rdf:type [ <RateOfChange> ] ?
       )
    } OR @<Frequency> OR @<Speed>
)

<Ratio>  (
    CLOSED {
       (  $<Ratio_tes> (  &<DimensionlessQuantity_tes> ;
             rdf:type [ <DimensionlessQuantity> ] ?
          ) ;
          rdf:type [ <Ratio> ] ?
       )
    } OR @<AspectRatio> OR @<DifferentialGeneExpressionRatio> OR @<DisGeNETDiseaseSpecificity> OR @<DisGeNETPleiotropyIndex> OR
    @<Percentage> OR @<Slope> OR @<SpecificGravity> OR @<T-statistic>
)

<Ray>  (
    CLOSED {
       (  $<Ray_tes> (  &<Line_tes> ;
             rdf:type [ <Line> ] ?
          ) ;
          rdf:type [ <Ray> ] ?
       )
    } OR @<VectorLine>
)

<RDFSOntology> CLOSED {
    (  $<RDFSOntology_tes> (  &<OntologyDocument_tes> ;
          rdf:type [ <OntologyDocument> ] ?
       ) ;
       rdf:type [ <RDFSOntology> ] ?
    )
}

<ReactantRole>  (
    CLOSED {
       (  $<ReactantRole_tes> (  &<MolecularEntityRole_tes> ;
             rdf:type [ <MolecularEntityRole> ] ?
          ) ;
          rdf:type [ <ReactantRole> ] ?
       )
    } OR @<MolecularTracerRole> OR @<SubstrateRole>
)

<Reagent> CLOSED {
    (  $<Reagent_tes> (  &<HeterogeneousSubstance_tes> ;
          rdf:type [ <HeterogeneousSubstance> ] ?
       ) ;
       rdf:type [ <Reagent> ] ?
    )
}

<ReagentRole> CLOSED {
    (  $<ReagentRole_tes> (  &<ChemicalSubstanceRole_tes> ;
          rdf:type [ <ChemicalSubstanceRole> ] ?
       ) ;
       rdf:type [ <ReagentRole> ] ?
    )
}

<Real> CLOSED {
    (  $<Real_tes> (  &<ExistenceQuality_tes> ;
          rdf:type [ <ExistenceQuality> ] ?
       ) ;
       rdf:type [ <Real> ] ?
    )
}

<RealizableEntity>  (
    CLOSED {
       (  $<RealizableEntity_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ? ;
             <hasBasis> @<Quality> ?
          ) ;
          rdf:type [ <RealizableEntity> ] ?
       )
    } OR @<Capability> OR @<Role>
)

<Reason>  (
    CLOSED {
       (  $<Reason_tes> (  &<Justification_tes> ;
             rdf:type [ <Justification> ] ?
          ) ;
          rdf:type [ <Reason> ] ?
       )
    } OR @<Purpose>
)

<Reasoning> CLOSED {
    (  $<Reasoning_tes> (  &<Creating_tes> ;
          rdf:type [ <Creating> ] ?
       ) ;
       rdf:type [ <Reasoning> ] ?
    )
}

<Receptor> CLOSED {
    (  $<Receptor_tes> (  &<SignalTransducer_tes> ;
          rdf:type [ <SignalTransducer> ] ?
       ) ;
       rdf:type [ <Receptor> ] ?
    )
}

<Recipe> CLOSED {
    (  $<Recipe_tes> (  &<ActionSpecification_tes> ;
          rdf:type [ <ActionSpecification> ] ?
       ) ;
       rdf:type [ <Recipe> ] ?
    )
}

<Record>  (
    CLOSED {
       (  $<Record_tes> (  &<Document_tes> ;
             rdf:type [ <Document> ] ?
          ) ;
          rdf:type [ <Record> ] ?
       )
    } OR @<MedicalHealthRecord> OR @<VersionedRecord>
)

<RecordIdentifier>  (
    CLOSED {
       (  $<RecordIdentifier_tes> (  &<InformationalEntityIdentifier_tes> ;
             rdf:type [ <InformationalEntityIdentifier> ] ?
          ) ;
          rdf:type [ <RecordIdentifier> ] ?
       )
    } OR @<PDBRecordIdentifier>
)

<Rectangle>  (
    CLOSED {
       (  $<Rectangle_tes> (  &<Quadrilateral_tes> ;
             rdf:type [ <Quadrilateral> ] ?
          ) ;
          rdf:type [ <Rectangle> ] ?
       )
    } OR @<Bar>
)

<RedoxReaction> CLOSED {
    (  $<RedoxReaction_tes> (  &<ChemicalReaction_tes> ;
          rdf:type [ <ChemicalReaction> ] ?
       ) ;
       rdf:type [ <RedoxReaction> ] ?
    )
}

<Reference> CLOSED {
    (  $<Reference_tes> (  &<DocumentComponent_tes> ;
          rdf:type [ <DocumentComponent> ] ?
       ) ;
       rdf:type [ <Reference> ] ?
    )
}

<ReferencingCell> CLOSED {
    (  $<ReferencingCell_tes> (  &<Cellinformational_tes> ;
          rdf:type [ <Cellinformational> ] ?
       ) ;
       rdf:type [ <ReferencingCell> ] ?
    )
}

<ReferentCell> CLOSED {
    (  $<ReferentCell_tes> (  &<Cellinformational_tes> ;
          rdf:type [ <Cellinformational> ] ?
       ) ;
       rdf:type [ <ReferentCell> ] ?
    )
}

<Regret>  (
    CLOSED {
       (  $<Regret_tes> (  &<Worry_tes> ;
             rdf:type [ <Worry> ] ?
          ) ;
          rdf:type [ <Regret> ] ?
       )
    } OR @<Remorse>
)

<Regulating>  (
    CLOSED {
       (  $<Regulating_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <Regulating> ] ?
       )
    } OR @<RegulationOfCapability> OR @<RegulationOfProcess>
)

<RegulationOfBiochemicalProcess>  (
    CLOSED {
       (  $<RegulationOfBiochemicalProcess_tes> (  &<RegulationOfProcess_tes> ;
             rdf:type [ <RegulationOfProcess> ] ?
          ) ;
          rdf:type [ <RegulationOfBiochemicalProcess> ] ?
       )
    } OR @<RegulationOfTranscription> OR @<RegulationOfTranslation>
)

<RegulationOfCapability>  (
    CLOSED {
       (  $<RegulationOfCapability_tes> (  &<Regulating_tes> ;
             rdf:type [ <Regulating> ] ?
          ) ;
          rdf:type [ <RegulationOfCapability> ] ?
       )
    } OR @<RegulationOfCatalyticCapability>
)

<RegulationOfCatalyticCapability>  (
    CLOSED {
       (  $<RegulationOfCatalyticCapability_tes> (  &<RegulationOfCapability_tes> ;
             rdf:type [ <RegulationOfCapability> ] ?
          ) ;
          rdf:type [ <RegulationOfCatalyticCapability> ] ?
       )
    } OR @<BiochemicalActivation> OR @<BiochemicalInhibition>
)

<RegulationOfMolecularDegradation>  (
    CLOSED {
       (  $<RegulationOfMolecularDegradation_tes> (  &<RegulationOfMolecularQuantity_tes> ;
             rdf:type [ <RegulationOfMolecularQuantity> ] ?
          ) ;
          rdf:type [ <RegulationOfMolecularDegradation> ] ?
       )
    } OR @<DecreasedMolecularDegradationFromDecreasedRegulation> OR @<DecreasedMolecularDegradationFromIncreasedRegulation> OR
    @<IncreasedMolecularDegradationFromDecreasedRegulation> OR @<IncreasedMolecularDegradationFromIncreasedRegulation>
)

<RegulationOfMolecularProduction>  (
    CLOSED {
       (  $<RegulationOfMolecularProduction_tes> (  &<RegulationOfMolecularQuantity_tes> ;
             rdf:type [ <RegulationOfMolecularQuantity> ] ?
          ) ;
          rdf:type [ <RegulationOfMolecularProduction> ] ?
       )
    } OR @<DecreasedMolecularProductionFromDecreasedRegulation> OR @<DecreasedMolecularProductionFromIncreasedRegulation> OR
    @<IncreasedMolecularProductionFromDecreasedRegulation> OR @<IncreasedMolecularProductionFromIncreasedRegulation>
)

<RegulationOfMolecularQuantity>  (
    CLOSED {
       (  $<RegulationOfMolecularQuantity_tes> (  &<RegulationOfObjectQuantity_tes> ;
             rdf:type [ <RegulationOfObjectQuantity> ] ?
          ) ;
          rdf:type [ <RegulationOfMolecularQuantity> ] ?
       )
    } OR @<RegulationOfMolecularDegradation> OR @<RegulationOfMolecularProduction>
)

<RegulationOfObjectConsumption>  (
    CLOSED {
       (  $<RegulationOfObjectConsumption_tes> (  &<RegulationOfObjectQuantity_tes> ;
             rdf:type [ <RegulationOfObjectQuantity> ] ?
          ) ;
          rdf:type [ <RegulationOfObjectConsumption> ] ?
       )
    } OR @<DecreasedObjectConsumptionFromIncreasedRegulation> OR @<IncreasedObjectConsumptionFromIncreasedRegulation> OR
    @<MaintenanceOfLevelOfObjectConsumption>
)

<RegulationOfObjectProduction>  (
    CLOSED {
       (  $<RegulationOfObjectProduction_tes> (  &<RegulationOfObjectQuantity_tes> ;
             rdf:type [ <RegulationOfObjectQuantity> ] ?
          ) ;
          rdf:type [ <RegulationOfObjectProduction> ] ?
       )
    } OR @<DecreasedObjectProductionFromIncreasedRegulation> OR @<IncreasedObjectProductionFromIncreasedRegulation> OR
    @<MaintenanceOfQuantityOfObjectProduction>
)

<RegulationOfObjectQuantity>  (
    CLOSED {
       (  $<RegulationOfObjectQuantity_tes> (  &<RegulationOfProcess_tes> ;
             rdf:type [ <RegulationOfProcess> ] ?
          ) ;
          rdf:type [ <RegulationOfObjectQuantity> ] ?
       )
    } OR @<RegulationOfMolecularQuantity> OR @<RegulationOfObjectConsumption> OR @<RegulationOfObjectProduction>
)

<RegulationOfProcess>  (
    CLOSED {
       (  $<RegulationOfProcess_tes> (  &<Regulating_tes> ;
             rdf:type [ <Regulating> ] ?
          ) ;
          rdf:type [ <RegulationOfProcess> ] ?
       )
    } OR @<ProcessDown-regulation> OR @<ProcessMaintenance> OR @<ProcessUp-regulation> OR @<RegulationOfBiochemicalProcess> OR
    @<RegulationOfObjectQuantity> OR @<RegulationOfProcessDuration> OR @<RegulationOfProcessFrequency> OR
    @<RegulationOfProcessSpatialExtent>
)

<RegulationOfProcessDuration>  (
    CLOSED {
       (  $<RegulationOfProcessDuration_tes> (  &<RegulationOfProcess_tes> ;
             rdf:type [ <RegulationOfProcess> ] ?
          ) ;
          rdf:type [ <RegulationOfProcessDuration> ] ?
       )
    } OR @<DecreasedDurationOfProcessFromIncreasedRegulation> OR @<IncreasedDurationOfProcessFromIncreasedRegulation> OR
    @<MaintenanceOfDurationOfProcess>
)

<RegulationOfProcessFrequency>  (
    CLOSED {
       (  $<RegulationOfProcessFrequency_tes> (  &<RegulationOfProcess_tes> ;
             rdf:type [ <RegulationOfProcess> ] ?
          ) ;
          rdf:type [ <RegulationOfProcessFrequency> ] ?
       )
    } OR @<DecreasedFrequencyOfProcessFromIncreasedRegulation> OR @<IncreasedFrequencyOfProcessFromIncreasedRegulation> OR
    @<MaintenanceOfFrequencyOfProcess>
)

<RegulationOfProcessSpatialExtent>  (
    CLOSED {
       (  $<RegulationOfProcessSpatialExtent_tes> (  &<RegulationOfProcess_tes> ;
             rdf:type [ <RegulationOfProcess> ] ?
          ) ;
          rdf:type [ <RegulationOfProcessSpatialExtent> ] ?
       )
    } OR @<DecreasedSpatialExtentOfProcessFromDecreasedRegulation> OR @<IncreasedSpatialExtentOfProcessFromIncreasedRegulation> OR
    @<MaintenanceOfSpatialExtentOfProcess>
)

<RegulationOfTranscription> CLOSED {
    (  $<RegulationOfTranscription_tes> (  &<RegulationOfBiochemicalProcess_tes> ;
          rdf:type [ <RegulationOfBiochemicalProcess> ] ?
       ) ;
       rdf:type [ <RegulationOfTranscription> ] ?
    )
}

<RegulationOfTranslation>  (
    CLOSED {
       (  $<RegulationOfTranslation_tes> (  &<RegulationOfBiochemicalProcess_tes> ;
             rdf:type [ <RegulationOfBiochemicalProcess> ] ?
          ) ;
          rdf:type [ <RegulationOfTranslation> ] ?
       )
    } OR @<ProteinMediatedRegulationOfTranslation> OR @<RnaMediatedRegulationOfTranslation>
)

<RegulatorRole>  (
    CLOSED {
       (  $<RegulatorRole_tes> (  &<MolecularEntityRole_tes> ;
             rdf:type [ <MolecularEntityRole> ] ?
          ) ;
          rdf:type [ <RegulatorRole> ] ?
       )
    } OR @<ActivatorRole> OR @<CatalyticRole> OR @<InhibitorRole>
)

<RegulatoryAuthority>  (
    CLOSED {
       (  $<RegulatoryAuthority_tes> (  &<Organization_tes> ;
             rdf:type [ <Organization> ] ?
          ) ;
          rdf:type [ <RegulatoryAuthority> ] ?
       )
    } OR @<DrugRegulatoryAuthority>
)

<RegulatoryPathway>  (
    CLOSED {
       (  $<RegulatoryPathway_tes> (  &<BiochemicalPathway_tes> ;
             rdf:type [ <BiochemicalPathway> ] ?
          ) ;
          rdf:type [ <RegulatoryPathway> ] ?
       )
    } OR @<PharmacodynamicPathway>
)

<Remorse> CLOSED {
    (  $<Remorse_tes> (  &<Regret_tes> ;
          rdf:type [ <Regret> ] ?
       ) ;
       rdf:type [ <Remorse> ] ?
    )
}

<ReplicaQuality> CLOSED {
    (  $<ReplicaQuality_tes> (  &<ObjectRelationalQuality_tes> ;
          rdf:type [ <ObjectRelationalQuality> ] ?
       ) ;
       rdf:type [ <ReplicaQuality> ] ?
    )
}

<Replicate> CLOSED {
    (  $<Replicate_tes> (  &<CollectionItem_tes> ;
          rdf:type [ <CollectionItem> ] ?
       ) ;
       rdf:type [ <Replicate> ] ?
    )
}

<ReplicateRole> CLOSED {
    (  $<ReplicateRole_tes> (  &<ComparativeRole_tes> ;
          rdf:type [ <ComparativeRole> ] ?
       ) ;
       rdf:type [ <ReplicateRole> ] ?
    )
}

<Report>  (
    CLOSED {
       (  $<Report_tes> (  &<Document_tes> ;
             rdf:type [ <Document> ] ?
          ) ;
          rdf:type [ <Report> ] ?
       )
    } OR @<MedicalReport>
)

<Representation>  (
    CLOSED {
       (  $<Representation_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <Representation> ] ?
       )
    } OR @<Model> OR @<Symbol>
)

<Reproducing>  (
    CLOSED {
       (  $<Reproducing_tes> (  &<Creating_tes> ;
             rdf:type [ <Creating> ] ?
          ) ;
          rdf:type [ <Reproducing> ] ?
       )
    } OR @<BiologicalReproduction>
)

<Resentment> CLOSED {
    (  $<Resentment_tes> (  &<Disgust_tes> ;
          rdf:type [ <Disgust> ] ?
       ) ;
       rdf:type [ <Resentment> ] ?
    )
}

<RESTWebService> CLOSED {
    (  $<RESTWebService_tes> (  &<WebService_tes> ;
          rdf:type [ <WebService> ] ?
       ) ;
       rdf:type [ <RESTWebService> ] ?
    )
}

<ResultsSection> CLOSED {
    (  $<ResultsSection_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <ResultsSection> ] ?
    )
}

<Reviewed>  (
    CLOSED {
       (  $<Reviewed_tes> (  &<Written_tes> ;
             rdf:type [ <Written> ] ?
          ) ;
          rdf:type [ <Reviewed> ] ?
       )
    } OR @<EditorReviewed> OR @<Peer-reviewed>
)

<RevisionNumber> CLOSED {
    (  $<RevisionNumber_tes> (  &<SoftwareVersionLabel_tes> ;
          rdf:type [ <SoftwareVersionLabel> ] ?
       ) ;
       rdf:type [ <RevisionNumber> ] ?
    )
}

<RheniumAtom> CLOSED {
    (  $<RheniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RheniumAtom> ] ?
    )
}

<RhodiumAtom> CLOSED {
    (  $<RhodiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RhodiumAtom> ] ?
    )
}

<RibonucleicAcid>  (
    CLOSED {
       (  $<RibonucleicAcid_tes> (  &<NucleicAcid_tes> ;
             rdf:type [ <NucleicAcid> ] ?
          ) ;
          rdf:type [ <RibonucleicAcid> ] ?
       )
    } OR @<RNATranscript>
)

<RibonucleicAcidSequence> CLOSED {
    (  $<RibonucleicAcidSequence_tes> (  &<NucleicAcidSequence_tes> ;
          rdf:type [ <NucleicAcidSequence> ] ?
       ) ;
       rdf:type [ <RibonucleicAcidSequence> ] ?
    )
}

<RibonucleotideResidue> CLOSED {
    (  $<RibonucleotideResidue_tes> (  &<NucleotideResidue_tes> ;
          rdf:type [ <NucleotideResidue> ] ?
       ) ;
       rdf:type [ <RibonucleotideResidue> ] ?
    )
}

<RibosomalRNAGene> CLOSED {
    (  $<RibosomalRNAGene_tes> (  &<Non-proteinCodingRNAncRNAGene_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNAGene> ] ?
       ) ;
       rdf:type [ <RibosomalRNAGene> ] ?
    )
}

<Right-handedHelical> CLOSED {
    (  $<Right-handedHelical_tes> (  &<Helicity_tes> ;
          rdf:type [ <Helicity> ] ?
       ) ;
       rdf:type [ <Right-handedHelical> ] ?
    )
}

<RightClosedInterval> CLOSED {
    (  $<RightClosedInterval_tes> (  &<Interval_tes> ;
          rdf:type [ <Interval> ] ?
       ) ;
       rdf:type [ <RightClosedInterval> ] ?
    )
}

<RightOpenInterval> CLOSED {
    (  $<RightOpenInterval_tes> (  &<Interval_tes> ;
          rdf:type [ <Interval> ] ?
       ) ;
       rdf:type [ <RightOpenInterval> ] ?
    )
}

<RightValueAxis> CLOSED {
    (  $<RightValueAxis_tes> (  &<ValueAxis_tes> ;
          rdf:type [ <ValueAxis> ] ?
       ) ;
       rdf:type [ <RightValueAxis> ] ?
    )
}

<Rigid> CLOSED {
    (  $<Rigid_tes> (  &<StructuralQuality_tes> ;
          rdf:type [ <StructuralQuality> ] ?
       ) ;
       rdf:type [ <Rigid> ] ?
    )
}

<Ring>  (
    CLOSED {
       (  $<Ring_tes> (  &<ChemicalFunctionalGroup_tes> ;
             rdf:type [ <ChemicalFunctionalGroup> ] ?
          ) ;
          rdf:type [ <Ring> ] ?
       )
    } OR @<AromaticRing> OR @<HeterocyclicRing> OR @<HomocyclicRing>
)

<RnaGene>  (
    CLOSED {
       (  $<RnaGene_tes> (  &<Gene_tes> ;
             rdf:type [ <Gene> ] ?
          ) ;
          rdf:type [ <RnaGene> ] ?
       )
    } OR @<FunctionalRnaCodingGene>
)

<RnaMediatedRegulationOfTranslation> CLOSED {
    (  $<RnaMediatedRegulationOfTranslation_tes> (  &<RegulationOfTranslation_tes> ;
          rdf:type [ <RegulationOfTranslation> ] ?
       ) ;
       rdf:type [ <RnaMediatedRegulationOfTranslation> ] ?
    )
}

<RNATranscript>  (
    CLOSED {
       (  $<RNATranscript_tes> (  &<RibonucleicAcid_tes> ;
             rdf:type [ <RibonucleicAcid> ] ?
          ) ;
          rdf:type [ <RNATranscript> ] ?
       )
    } OR @<MessengerRNA> OR @<Non-proteinCodingRNAncRNA>
)

<RNATranscriptComponent>  (
    CLOSED {
       (  $<RNATranscriptComponent_tes> (  &<NucleicAcidPart_tes> ;
             rdf:type [ <NucleicAcidPart> ] ?
          ) ;
          rdf:type [ <RNATranscriptComponent> ] ?
       )
    } OR @<SpliceSite> OR @<StartCodon> OR @<StopCodon>
)

<RoentgeniumAtom> CLOSED {
    (  $<RoentgeniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RoentgeniumAtom> ] ?
    )
}

<Role>  (
    CLOSED {
       (  $<Role_tes> (  &<RealizableEntity_tes> ;
             rdf:type [ <RealizableEntity> ] ? ;
             <isRoleOf> @<Entity> ?
          ) ;
          rdf:type [ <Role> ] ?
       )
    } OR @<AbstractRole> OR @<ProcessualRole> OR @<SocialRole>
)

<Row>  (
    CLOSED {
       (  $<Row_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <Row> ] ?
       )
    } OR @<DatabaseRow>
)

<RubidiumAtom> CLOSED {
    (  $<RubidiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RubidiumAtom> ] ?
    )
}

<RutheniumAtom> CLOSED {
    (  $<RutheniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RutheniumAtom> ] ?
    )
}

<RutherfordiumAtom> CLOSED {
    (  $<RutherfordiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <RutherfordiumAtom> ] ?
    )
}

<SADISemanticWebService> CLOSED {
    (  $<SADISemanticWebService_tes> (  &<SemanticWebService_tes> ;
          rdf:type [ <SemanticWebService> ] ?
       ) ;
       rdf:type [ <SADISemanticWebService> ] ?
    )
}

<SADIWebServiceInvocation> CLOSED {
    (  $<SADIWebServiceInvocation_tes> (  &<WebServiceInvocation_tes> ;
          rdf:type [ <WebServiceInvocation> ] ?
       ) ;
       rdf:type [ <SADIWebServiceInvocation> ] ?
    )
}

<Sadness>  (
    CLOSED {
       (  $<Sadness_tes> (  &<NegativeEmotion_tes> ;
             rdf:type [ <NegativeEmotion> ] ?
          ) ;
          rdf:type [ <Sadness> ] ?
       )
    } OR @<Depression> OR @<Despair> OR @<Grief> OR @<Misery> OR @<Sorrow>
)

<SamariumAtom> CLOSED {
    (  $<SamariumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SamariumAtom> ] ?
    )
}

<Sample>  (
    CLOSED {
       (  $<Sample_tes> (  &<HeterogeneousSubstance_tes> ;
             rdf:type [ <HeterogeneousSubstance> ] ?
          ) ;
          rdf:type [ <Sample> ] ?
       )
    } OR @<Specimen>
)

<SampleQuality> CLOSED {
    (  $<SampleQuality_tes> (  &<ObjectRelationalQuality_tes> ;
          rdf:type [ <ObjectRelationalQuality> ] ?
       ) ;
       rdf:type [ <SampleQuality> ] ?
    )
}

<Sampling> CLOSED {
    (  $<Sampling_tes> (  &<Interacting_tes> ;
          rdf:type [ <Interacting> ] ?
       ) ;
       rdf:type [ <Sampling> ] ?
    )
}

<Satisfaction>  (
    CLOSED {
       (  $<Satisfaction_tes> (  &<Contentment_tes> ;
             rdf:type [ <Contentment> ] ?
          ) ;
          rdf:type [ <Satisfaction> ] ?
       )
    } OR @<Pride>
)

<SatisfactionQualifier>  (
    CLOSED {
       (  $<SatisfactionQualifier_tes> (  &<InformationalQuality_tes> ;
             rdf:type [ <InformationalQuality> ] ?
          ) ;
          rdf:type [ <SatisfactionQualifier> ] ?
       )
    } OR @<DissatisfiedQualifier> OR @<NeitherSatisfiedOrDissatisfiedQualifier> OR @<SatisfiedQualifier> OR
    @<VeryDissatisfiedQualifier>
)

<SatisfiedQualifier> CLOSED {
    (  $<SatisfiedQualifier_tes> (  &<SatisfactionQualifier_tes> ;
          rdf:type [ <SatisfactionQualifier> ] ?
       ) ;
       rdf:type [ <SatisfiedQualifier> ] ?
    )
}

<Scalar>  (
    CLOSED {
       (  $<Scalar_tes> (  &<Tensor_tes> ;
             rdf:type [ <Tensor> ] ?
          ) ;
          rdf:type [ <Scalar> ] ?
       )
    } OR @<Number>
)

<ScaledValueAxis>  (
    CLOSED {
       (  $<ScaledValueAxis_tes> (  &<ValueAxis_tes> ;
             rdf:type [ <ValueAxis> ] ?
          ) ;
          rdf:type [ <ScaledValueAxis> ] ?
       )
    } OR @<LinearValueAxis> OR @<LogarithmicValueAxis>
)

<ScandiumAtom> CLOSED {
    (  $<ScandiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ScandiumAtom> ] ?
    )
}

<Scatterplot> CLOSED {
    (  $<Scatterplot_tes> (  &<StatisticalGraph_tes> ;
          rdf:type [ <StatisticalGraph> ] ?
       ) ;
       rdf:type [ <Scatterplot> ] ?
    )
}

<ScientificData>  (
    CLOSED {
       (  $<ScientificData_tes> (  &<DataItem_tes> ;
             rdf:type [ <DataItem> ] ?
          ) ;
          rdf:type [ <ScientificData> ] ?
       )
    } OR @<BiologicalData> OR @<ChemicalData>
)

<ScientificName>  (
    CLOSED {
       (  $<ScientificName_tes> (  &<Name_tes> ;
             rdf:type [ <Name> ] ?
          ) ;
          rdf:type [ <ScientificName> ] ?
       )
    } OR @<GeneSymbol>
)

<SeaborgiumAtom> CLOSED {
    (  $<SeaborgiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SeaborgiumAtom> ] ?
    )
}

<Second> CLOSED {
    (  $<Second_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Second> ] ?
    )
}

<SecondaryActiveTransport>  (
    CLOSED {
       (  $<SecondaryActiveTransport_tes> (  &<ActiveTransport_tes> ;
             rdf:type [ <ActiveTransport> ] ?
          ) ;
          rdf:type [ <SecondaryActiveTransport> ] ?
       )
    } OR @<AntiportEnabledSecondaryActiveTransport> OR @<SymportEnabledSecondaryActiveTransport>
)

<SecondaryCategoryAxis> CLOSED {
    (  $<SecondaryCategoryAxis_tes> (  &<CategoryAxis_tes> ;
          rdf:type [ <CategoryAxis> ] ?
       ) ;
       rdf:type [ <SecondaryCategoryAxis> ] ?
    )
}

<SecondaryGraphTitle> CLOSED {
    (  $<SecondaryGraphTitle_tes> (  &<PrimaryTitle_tes> ;
          rdf:type [ <PrimaryTitle> ] ?
       ) ;
       rdf:type [ <SecondaryGraphTitle> ] ?
    )
}

<SecondaryStructureDescriptor> CLOSED {
    (  $<SecondaryStructureDescriptor_tes> (  &<BiomolecularStructureDescriptor_tes> ;
          rdf:type [ <BiomolecularStructureDescriptor> ] ?
       ) ;
       rdf:type [ <SecondaryStructureDescriptor> ] ?
    )
}

<SecondaryTitle> CLOSED {
    (  $<SecondaryTitle_tes> (  &<Title_tes> ;
          rdf:type [ <Title> ] ?
       ) ;
       rdf:type [ <SecondaryTitle> ] ?
    )
}

<SecondMessenger> CLOSED {
    (  $<SecondMessenger_tes> (  &<Messenger_tes> ;
          rdf:type [ <Messenger> ] ?
       ) ;
       rdf:type [ <SecondMessenger> ] ?
    )
}

<SecretaryRole> CLOSED {
    (  $<SecretaryRole_tes> (  &<AdministrativeRole_tes> ;
          rdf:type [ <AdministrativeRole> ] ?
       ) ;
       rdf:type [ <SecretaryRole> ] ?
    )
}

<SeleniumAtom> CLOSED {
    (  $<SeleniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SeleniumAtom> ] ?
    )
}

<SemanticWebService>  (
    CLOSED {
       (  $<SemanticWebService_tes> (  &<WebService_tes> ;
             rdf:type [ <WebService> ] ?
          ) ;
          rdf:type [ <SemanticWebService> ] ?
       )
    } OR @<SADISemanticWebService>
)

<Sentence>  (
    CLOSED {
       (  $<Sentence_tes> (  &<Phrase_tes> ;
             rdf:type [ <Phrase> ] ?
          ) ;
          rdf:type [ <Sentence> ] ?
       )
    } OR @<Clause> OR @<Question>
)

<Sequence> CLOSED {
    (  $<Sequence_tes> (  &<List_tes> ;
          rdf:type [ <List> ] ?
       ) ;
       rdf:type [ <Sequence> ] ?
    )
}

<SequenceAlignment>  (
    CLOSED {
       (  $<SequenceAlignment_tes> (  &<Collection_tes> ;
             rdf:type [ <Collection> ] ?
          ) ;
          rdf:type [ <SequenceAlignment> ] ?
       )
    } OR @<MultipleSequenceAlignment> OR @<PairwiseSequenceAlignment>
)

<SequenceAssembly> CLOSED {
    (  $<SequenceAssembly_tes> (  &<BiopolymerSequence_tes> ;
          rdf:type [ <BiopolymerSequence> ] ?
       ) ;
       rdf:type [ <SequenceAssembly> ] ?
    )
}

<SequenceElementPosition>  (
    CLOSED {
       (  $<SequenceElementPosition_tes> (  &<LinearPosition_tes> ;
             rdf:type [ <LinearPosition> ] ?
          ) ;
          rdf:type [ <SequenceElementPosition> ] ?
       )
    } OR @<SequenceStartPosition>
)

<SequenceEndPosition> CLOSED {
    (  $<SequenceEndPosition_tes> (  &<EndPosition_tes> ;
          rdf:type [ <EndPosition> ] ?
       ) ;
       rdf:type [ <SequenceEndPosition> ] ?
    )
}

<SequenceMotif> CLOSED {
    (  $<SequenceMotif_tes> (  &<Pattern_tes> ;
          rdf:type [ <Pattern> ] ?
       ) ;
       rdf:type [ <SequenceMotif> ] ?
    )
}

<SequenceProfile> CLOSED {
    (  $<SequenceProfile_tes> (  &<Pattern_tes> ;
          rdf:type [ <Pattern> ] ?
       ) ;
       rdf:type [ <SequenceProfile> ] ?
    )
}

<SequenceStartPosition> CLOSED {
    (  $<SequenceStartPosition_tes> (  &<SequenceElementPosition_tes> ;
          rdf:type [ <SequenceElementPosition> ] ?
       ) ;
       rdf:type [ <SequenceStartPosition> ] ?
    )
}

<SequenceVariantRole>  (
    CLOSED {
       (  $<SequenceVariantRole_tes> (  &<VariantRole_tes> ;
             rdf:type [ <VariantRole> ] ?
          ) ;
          rdf:type [ <SequenceVariantRole> ] ?
       )
    } OR @<DeletionVariantRole> OR @<InsertionVariantRole>
)

<SequenceVariationNotation>  (
    CLOSED {
       (  $<SequenceVariationNotation_tes> (  &<Notation_tes> ;
             rdf:type [ <Notation> ] ?
          ) ;
          rdf:type [ <SequenceVariationNotation> ] ?
       )
    } OR @<HgvsNotation>
)

<Set>  (
    CLOSED {
       (  $<Set_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Set> ] ?
       )
    } OR @<Class> OR @<Collection> OR @<EmptySet> OR @<List>
)

<SetItem>  (
    CLOSED {
       (  $<SetItem_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <SetItem> ] ?
       )
    } OR @<CollectionItem> OR @<ListItem>
)

<Severe> CLOSED {
    (  $<Severe_tes> (  &<Intensity_tes> ;
          rdf:type [ <Intensity> ] ?
       ) ;
       rdf:type [ <Severe> ] ?
    )
}

<Shame> CLOSED {
    (  $<Shame_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Shame> ] ?
    )
}

<Shape>  (
    CLOSED {
       (  $<Shape_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <Shape> ] ?
       )
    } OR @<Curvature>
)

<Shock> CLOSED {
    (  $<Shock_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Shock> ] ?
    )
}

<Shyness> CLOSED {
    (  $<Shyness_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Shyness> ] ?
    )
}

<Sick> CLOSED {
    (  $<Sick_tes> (  &<Alive_tes> ;
          rdf:type [ <Alive> ] ?
       ) ;
       rdf:type [ <Sick> ] ?
    )
}

<Signal> CLOSED {
    (  $<Signal_tes> (  &<Molecule_tes> ;
          rdf:type [ <Molecule> ] ?
       ) ;
       rdf:type [ <Signal> ] ?
    )
}

<SignalTransducer>  (
    CLOSED {
       (  $<SignalTransducer_tes> (  &<Molecule_tes> ;
             rdf:type [ <Molecule> ] ?
          ) ;
          rdf:type [ <SignalTransducer> ] ?
       )
    } OR @<Messenger> OR @<Receptor>
)

<SignLanguage> CLOSED {
    (  $<SignLanguage_tes> (  &<Language_tes> ;
          rdf:type [ <Language> ] ?
       ) ;
       rdf:type [ <SignLanguage> ] ?
    )
}

<SiliconAtom> CLOSED {
    (  $<SiliconAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SiliconAtom> ] ?
    )
}

<SilverAtom> CLOSED {
    (  $<SilverAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SilverAtom> ] ?
    )
}

<SingleArrowedLineSegment> CLOSED {
    (  $<SingleArrowedLineSegment_tes> (  &<ArrowedLineSegment_tes> ;
          rdf:type [ <ArrowedLineSegment> ] ?
       ) ;
       rdf:type [ <SingleArrowedLineSegment> ] ?
    )
}

<SingleBond>  (
    CLOSED {
       (  $<SingleBond_tes> (  &<CovalentBond_tes> ;
             rdf:type [ <CovalentBond> ] ?
          ) ;
          rdf:type [ <SingleBond> ] ?
       )
    } OR @<DisulfideBond>
)

<SingleDisplacementReaction> CLOSED {
    (  $<SingleDisplacementReaction_tes> (  &<DisplacementReaction_tes> ;
          rdf:type [ <DisplacementReaction> ] ?
       ) ;
       rdf:type [ <SingleDisplacementReaction> ] ?
    )
}

<SingleNucleotidePolymorphism> CLOSED {
    (  $<SingleNucleotidePolymorphism_tes> (  &<NucleotideResidue_tes> ;
          rdf:type [ <NucleotideResidue> ] ?
       ) ;
       rdf:type [ <SingleNucleotidePolymorphism> ] ?
    )
}

<Site>  (
    CLOSED {
       (  $<Site_tes> (  &<SpatialRegion_tes> ;
             rdf:type [ <SpatialRegion> ] ?
          ) ;
          rdf:type [ <Site> ] ?
       )
    } OR @<Hole> OR @<MolecularSite>
)

<Slide> CLOSED {
    (  $<Slide_tes> (  &<Media_tes> ;
          rdf:type [ <Media> ] ?
       ) ;
       rdf:type [ <Slide> ] ?
    )
}

<Slideshow> CLOSED {
    (  $<Slideshow_tes> (  &<Media_tes> ;
          rdf:type [ <Media> ] ?
       ) ;
       rdf:type [ <Slideshow> ] ?
    )
}

<Slope> CLOSED {
    (  $<Slope_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <Slope> ] ?
    )
}

<SmallCytoplasmicRNAscRNA> CLOSED {
    (  $<SmallCytoplasmicRNAscRNA_tes> (  &<Non-proteinCodingRNAncRNA_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNA> ] ?
       ) ;
       rdf:type [ <SmallCytoplasmicRNAscRNA> ] ?
    )
}

<SmallCytoplasmicRNAscRNAGene> CLOSED {
    (  $<SmallCytoplasmicRNAscRNAGene_tes> (  &<Non-proteinCodingRNAncRNAGene_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNAGene> ] ?
       ) ;
       rdf:type [ <SmallCytoplasmicRNAscRNAGene> ] ?
    )
}

<SmallNuclearRNAsnRNA> CLOSED {
    (  $<SmallNuclearRNAsnRNA_tes> (  &<Non-proteinCodingRNAncRNA_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNA> ] ?
       ) ;
       rdf:type [ <SmallNuclearRNAsnRNA> ] ?
    )
}

<SmallNuclearRNAsnRNAGene> CLOSED {
    (  $<SmallNuclearRNAsnRNAGene_tes> (  &<Non-proteinCodingRNAncRNAGene_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNAGene> ] ?
       ) ;
       rdf:type [ <SmallNuclearRNAsnRNAGene> ] ?
    )
}

<SmallNucleolarRNAsnoRNA> CLOSED {
    (  $<SmallNucleolarRNAsnoRNA_tes> (  &<Non-proteinCodingRNAncRNA_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNA> ] ?
       ) ;
       rdf:type [ <SmallNucleolarRNAsnoRNA> ] ?
    )
}

<SmallNucleolarRNAsnoRNAGene> CLOSED {
    (  $<SmallNucleolarRNAsnoRNAGene_tes> (  &<Non-proteinCodingRNAncRNAGene_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNAGene> ] ?
       ) ;
       rdf:type [ <SmallNucleolarRNAsnoRNAGene> ] ?
    )
}

<SOAPWebService> CLOSED {
    (  $<SOAPWebService_tes> (  &<WebService_tes> ;
          rdf:type [ <WebService> ] ?
       ) ;
       rdf:type [ <SOAPWebService> ] ?
    )
}

<SocialEntity>  (
    CLOSED {
       (  $<SocialEntity_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <SocialEntity> ] ?
       )
    } OR @<SocialRelation> OR @<SocialStructure>
)

<SocialRelation>  (
    CLOSED {
       (  $<SocialRelation_tes> (  &<SocialEntity_tes> ;
             rdf:type [ <SocialEntity> ] ?
          ) ;
          rdf:type [ <SocialRelation> ] ?
       )
    } OR @<Affiliation>
)

<SocialRole>  (
    CLOSED {
       (  $<SocialRole_tes> (  &<Role_tes> ;
             rdf:type [ <Role> ] ?
          ) ;
          rdf:type [ <SocialRole> ] ?
       )
    } OR @<OccupationalRole>
)

<SocialStructure>  (
    CLOSED {
       (  $<SocialStructure_tes> (  &<SocialEntity_tes> ;
             rdf:type [ <SocialEntity> ] ?
          ) ;
          rdf:type [ <SocialStructure> ] ?
       )
    } OR @<Collective>
)

<SodiumAtom> CLOSED {
    (  $<SodiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SodiumAtom> ] ?
    )
}

<SoftwareApplication>  (
    CLOSED {
       (  $<SoftwareApplication_tes> (  &<SoftwareEntity_tes> ;
             rdf:type [ <SoftwareEntity> ] ?
          ) ;
          rdf:type [ <SoftwareApplication> ] ?
       )
    } OR @<SoftwareInterpreter> OR @<WebService>
)

<SoftwareEntity>  (
    CLOSED {
       (  $<SoftwareEntity_tes> (  &<ComputationalEntity_tes> ;
             rdf:type [ <ComputationalEntity> ] ?
          ) ;
          rdf:type [ <SoftwareEntity> ] ?
       )
    } OR @<SoftwareApplication> OR @<SoftwareLibrary> OR @<SoftwareMethod> OR @<SoftwareModule> OR @<SoftwareScript>
)

<SoftwareInterpreter> CLOSED {
    (  $<SoftwareInterpreter_tes> (  &<SoftwareApplication_tes> ;
          rdf:type [ <SoftwareApplication> ] ?
       ) ;
       rdf:type [ <SoftwareInterpreter> ] ?
    )
}

<SoftwareLibrary> CLOSED {
    (  $<SoftwareLibrary_tes> (  &<SoftwareEntity_tes> ;
          rdf:type [ <SoftwareEntity> ] ?
       ) ;
       rdf:type [ <SoftwareLibrary> ] ?
    )
}

<SoftwareMethod> CLOSED {
    (  $<SoftwareMethod_tes> (  &<SoftwareEntity_tes> ;
          rdf:type [ <SoftwareEntity> ] ?
       ) ;
       rdf:type [ <SoftwareMethod> ] ?
    )
}

<SoftwareModule> CLOSED {
    (  $<SoftwareModule_tes> (  &<SoftwareEntity_tes> ;
          rdf:type [ <SoftwareEntity> ] ?
       ) ;
       rdf:type [ <SoftwareModule> ] ?
    )
}

<SoftwareProcessIdentifier> CLOSED {
    (  $<SoftwareProcessIdentifier_tes> (  &<InformationalEntityIdentifier_tes> ;
          rdf:type [ <InformationalEntityIdentifier> ] ?
       ) ;
       rdf:type [ <SoftwareProcessIdentifier> ] ?
    )
}

<SoftwareScript> CLOSED {
    (  $<SoftwareScript_tes> (  &<SoftwareEntity_tes> ;
          rdf:type [ <SoftwareEntity> ] ?
       ) ;
       rdf:type [ <SoftwareScript> ] ?
    )
}

<SoftwareVersionLabel>  (
    CLOSED {
       (  $<SoftwareVersionLabel_tes> (  &<VersionLabel_tes> ;
             rdf:type [ <VersionLabel> ] ?
          ) ;
          rdf:type [ <SoftwareVersionLabel> ] ?
       )
    } OR @<MajorVersionNumber> OR @<MinorVersionNumber> OR @<RevisionNumber>
)

<SofwareExecution>  (
    CLOSED {
       (  $<SofwareExecution_tes> (  &<InformationProcessing_tes> ;
             rdf:type [ <InformationProcessing> ] ?
          ) ;
          rdf:type [ <SofwareExecution> ] ?
       )
    } OR @<WebServiceInvocation>
)

<SolidStateHardDrive> CLOSED {
    (  $<SolidStateHardDrive_tes> (  &<HardDiskDrive_tes> ;
          rdf:type [ <HardDiskDrive> ] ?
       ) ;
       rdf:type [ <SolidStateHardDrive> ] ?
    )
}

<Solute> CLOSED {
    (  $<Solute_tes> (  &<LiquidSolutionComponent_tes> ;
          rdf:type [ <LiquidSolutionComponent> ] ?
       ) ;
       rdf:type [ <Solute> ] ?
    )
}

<Solvent>  (
    CLOSED {
       (  $<Solvent_tes> (  &<LiquidSolutionComponent_tes> ;
             rdf:type [ <LiquidSolutionComponent> ] ?
          ) ;
          rdf:type [ <Solvent> ] ?
       )
    } OR @<NonpolarSolvent> OR @<PolarSolvent>
)

<SomeOfTheTime> CLOSED {
    (  $<SomeOfTheTime_tes> (  &<TemporalQualifier_tes> ;
          rdf:type [ <TemporalQualifier> ] ?
       ) ;
       rdf:type [ <SomeOfTheTime> ] ?
    )
}

<Sorrow> CLOSED {
    (  $<Sorrow_tes> (  &<Sadness_tes> ;
          rdf:type [ <Sadness> ] ?
       ) ;
       rdf:type [ <Sorrow> ] ?
    )
}

<SoundArgument> CLOSED {
    (  $<SoundArgument_tes> (  &<ValidArgument_tes> ;
          rdf:type [ <ValidArgument> ] ?
       ) ;
       rdf:type [ <SoundArgument> ] ?
    )
}

<SoundWave> CLOSED {
    (  $<SoundWave_tes> (  &<Wave_tes> ;
          rdf:type [ <Wave> ] ?
       ) ;
       rdf:type [ <SoundWave> ] ?
    )
}

<SpatialBoundary>  (
    CLOSED {
       (  $<SpatialBoundary_tes> (  &<SpatialRegion_tes> ;
             rdf:type [ <SpatialRegion> ] ?
          ) ;
          rdf:type [ <SpatialBoundary> ] ?
       )
    } OR @<MaterialBoundary>
)

<SpatialQuantity>  (
    CLOSED {
       (  $<SpatialQuantity_tes> (  &<DimensionalQuantity_tes> ;
             rdf:type [ <DimensionalQuantity> ] ?
          ) ;
          rdf:type [ <SpatialQuantity> ] ?
       )
    } OR @<1DExtentQuantity> OR @<2DExtentQuantity> OR @<3DExtentQuantity> OR @<Mass>
)

<SpatialRegion>  (
    CLOSED {
       (  $<SpatialRegion_tes> (  &<Object_tes> ;
             rdf:type [ <Object> ] ?
          ) ;
          rdf:type [ <SpatialRegion> ] ?
       )
    } OR @<GeographicRegion> OR @<Site> OR @<SpatialBoundary>
)

<SpatialSpecification>  (
    CLOSED {
       (  $<SpatialSpecification_tes> (  &<FunctionalSpecification_tes> ;
             rdf:type [ <FunctionalSpecification> ] ?
          ) ;
          rdf:type [ <SpatialSpecification> ] ?
       )
    } OR @<CoordinateSystem>
)

<SpecializedMaterialEntity> CLOSED {
    (  $<SpecializedMaterialEntity_tes> (  &<SpecializedObject_tes> ;
          rdf:type [ <SpecializedObject> ] ?
       ) ;
       rdf:type [ <SpecializedMaterialEntity> ] ?
    )
}

<SpecializedObject>  (
    CLOSED {
       (  $<SpecializedObject_tes> (  &<Object_tes> ;
             rdf:type [ <Object> ] ?
          ) ;
          rdf:type [ <SpecializedObject> ] ?
       )
    } OR @<AnatomicalEntity> OR @<Person> OR @<SpecializedMaterialEntity>
)

<Specification>  (
    CLOSED {
       (  $<Specification_tes> (  &<Description_tes> ;
             rdf:type [ <Description> ] ?
          ) ;
          rdf:type [ <Specification> ] ?
       )
    } OR @<ActionSpecification> OR @<FunctionalSpecification> OR @<Notation> OR @<Standard>
)

<SpecificGravity> CLOSED {
    (  $<SpecificGravity_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <SpecificGravity> ] ?
    )
}

<Specimen> CLOSED {
    (  $<Specimen_tes> (  &<Sample_tes> ;
          rdf:type [ <Sample> ] ?
       ) ;
       rdf:type [ <Specimen> ] ?
    )
}

<Speculation> CLOSED {
    (  $<Speculation_tes> (  &<Opinion_tes> ;
          rdf:type [ <Opinion> ] ?
       ) ;
       rdf:type [ <Speculation> ] ?
    )
}

<Speech> CLOSED {
    (  $<Speech_tes> (  &<Communicating_tes> ;
          rdf:type [ <Communicating> ] ?
       ) ;
       rdf:type [ <Speech> ] ?
    )
}

<Speed>  (
    CLOSED {
       (  $<Speed_tes> (  &<RateOfChange_tes> ;
             rdf:type [ <RateOfChange> ] ?
          ) ;
          rdf:type [ <Speed> ] ?
       )
    } OR @<Velocity>
)

<SphericalCoordinateSystem> CLOSED {
    (  $<SphericalCoordinateSystem_tes> (  &<CoordinateSystem_tes> ;
          rdf:type [ <CoordinateSystem> ] ?
       ) ;
       rdf:type [ <SphericalCoordinateSystem> ] ?
    )
}

<SpliceSite>  (
    CLOSED {
       (  $<SpliceSite_tes> (  &<RNATranscriptComponent_tes> ;
             rdf:type [ <RNATranscriptComponent> ] ?
          ) ;
          rdf:type [ <SpliceSite> ] ?
       )
    } OR @<3%27SpliceSite> OR @<5%27SpliceSite>
)

<StackedBarGraph> CLOSED {
    (  $<StackedBarGraph_tes> (  &<BarGraph_tes> ;
          rdf:type [ <BarGraph> ] ?
       ) ;
       rdf:type [ <StackedBarGraph> ] ?
    )
}

<StackGraph>  (
    CLOSED {
       (  $<StackGraph_tes> (  &<StatisticalGraph_tes> ;
             rdf:type [ <StatisticalGraph> ] ?
          ) ;
          rdf:type [ <StackGraph> ] ?
       )
    } OR @<Streamgraph>
)

<Standard> CLOSED {
    (  $<Standard_tes> (  &<Specification_tes> ;
          rdf:type [ <Specification> ] ?
       ) ;
       rdf:type [ <Standard> ] ?
    )
}

<StandardDeviation> CLOSED {
    (  $<StandardDeviation_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <StandardDeviation> ] ?
    )
}

<StandardOperatingProcedure> CLOSED {
    (  $<StandardOperatingProcedure_tes> (  &<ExperimentalProtocol_tes> ;
          rdf:type [ <ExperimentalProtocol> ] ?
       ) ;
       rdf:type [ <StandardOperatingProcedure> ] ?
    )
}

<StandardScore> CLOSED {
    (  $<StandardScore_tes> (  &<ProbabilityMeasure_tes> ;
          rdf:type [ <ProbabilityMeasure> ] ?
       ) ;
       rdf:type [ <StandardScore> ] ?
    )
}

<StartCodon> CLOSED {
    (  $<StartCodon_tes> (  &<RNATranscriptComponent_tes> ;
          rdf:type [ <RNATranscriptComponent> ] ?
       ) ;
       rdf:type [ <StartCodon> ] ?
    )
}

<StartDate> CLOSED {
    (  $<StartDate_tes> (  &<TimeInstant_tes> ;
          rdf:type [ <TimeInstant> ] ?
       ) ;
       rdf:type [ <StartDate> ] ?
    )
}

<StartPoint> CLOSED {
    (  $<StartPoint_tes> (  &<TerminalPoint_tes> ;
          rdf:type [ <TerminalPoint> ] ?
       ) ;
       rdf:type [ <StartPoint> ] ?
    )
}

<StartPosition>  (
    CLOSED {
       (  $<StartPosition_tes> (  &<LinearPosition_tes> ;
             rdf:type [ <LinearPosition> ] ?
          ) ;
          rdf:type [ <StartPosition> ] ?
       )
    } OR @<TextSpanStartPosition>
)

<StartTime> CLOSED {
    (  $<StartTime_tes> (  &<TimeInstant_tes> ;
          rdf:type [ <TimeInstant> ] ?
       ) ;
       rdf:type [ <StartTime> ] ?
    )
}

<State> CLOSED {
    (  $<State_tes> (  &<GeopoliticalRegion_tes> ;
          rdf:type [ <GeopoliticalRegion> ] ?
       ) ;
       rdf:type [ <State> ] ?
    )
}

<Statement>  (
    CLOSED {
       (  $<Statement_tes> (  &<Proposition_tes> ;
             rdf:type [ <Proposition> ] ?
          ) ;
          rdf:type [ <Statement> ] ?
       )
    } OR @<StatementOfConsequence>
)

<StatementOfConsequence> CLOSED {
    (  $<StatementOfConsequence_tes> (  &<Statement_tes> ;
          rdf:type [ <Statement> ] ?
       ) ;
       rdf:type [ <StatementOfConsequence> ] ?
    )
}

<StationaryPoint>  (
    CLOSED {
       (  $<StationaryPoint_tes> (  &<DataPoint_tes> ;
             rdf:type [ <DataPoint> ] ?
          ) ;
          rdf:type [ <StationaryPoint> ] ?
       )
    } OR @<LocalMaximumStationaryPoint> OR @<LocalMinimumStationaryPoint>
)

<StatisticalAssociation>  (
    CLOSED {
       (  $<StatisticalAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ?
          ) ;
          rdf:type [ <StatisticalAssociation> ] ?
       )
    } OR @<Correlation>
)

<StatisticalGraph>  (
    CLOSED {
       (  $<StatisticalGraph_tes> (  &<Chart_tes> ;
             rdf:type [ <Chart> ] ?
          ) ;
          rdf:type [ <StatisticalGraph> ] ?
       )
    } OR @<BarGraph> OR @<Line-barGraph> OR @<LineGraph> OR @<Scatterplot> OR @<StackGraph>
)

<StatisticalGraphLine>  (
    CLOSED {
       (  $<StatisticalGraphLine_tes> (  &<Line_tes> ;
             rdf:type [ <Line> ] ?
          ) ;
          rdf:type [ <StatisticalGraphLine> ] ?
       )
    } OR @<DropLine> OR @<TrendLine>
)

<StatusDescriptor> CLOSED {
    (  $<StatusDescriptor_tes> (  &<InformationalQuality_tes> ;
          rdf:type [ <InformationalQuality> ] ?
       ) ;
       rdf:type [ <StatusDescriptor> ] ?
    )
}

<Statute> CLOSED {
    (  $<Statute_tes> (  &<LegalDocument_tes> ;
          rdf:type [ <LegalDocument> ] ?
       ) ;
       rdf:type [ <Statute> ] ?
    )
}

<Stereoisomer>  (
    CLOSED {
       (  $<Stereoisomer_tes> (  &<Isomer_tes> ;
             rdf:type [ <Isomer> ] ?
          ) ;
          rdf:type [ <Stereoisomer> ] ?
       )
    } OR @<Diastereomer> OR @<Enantiomer> OR @<Epimer> OR @<OpticalIsomer>
)

<StopCodon> CLOSED {
    (  $<StopCodon_tes> (  &<RNATranscriptComponent_tes> ;
          rdf:type [ <RNATranscriptComponent> ] ?
       ) ;
       rdf:type [ <StopCodon> ] ?
    )
}

<Straight> CLOSED {
    (  $<Straight_tes> (  &<Curvature_tes> ;
          rdf:type [ <Curvature> ] ?
       ) ;
       rdf:type [ <Straight> ] ?
    )
}

<Strain> CLOSED {
    (  $<Strain_tes> (  &<Organism_tes> ;
          rdf:type [ <Organism> ] ?
       ) ;
       rdf:type [ <Strain> ] ?
    )
}

<Streamgraph> CLOSED {
    (  $<Streamgraph_tes> (  &<StackGraph_tes> ;
          rdf:type [ <StackGraph> ] ?
       ) ;
       rdf:type [ <Streamgraph> ] ?
    )
}

<StreetName> CLOSED {
    (  $<StreetName_tes> (  &<PositionalIdentifier_tes> ;
          rdf:type [ <PositionalIdentifier> ] ?
       ) ;
       rdf:type [ <StreetName> ] ?
    )
}

<Strong> CLOSED {
    (  $<Strong_tes> (  &<Intensity_tes> ;
          rdf:type [ <Intensity> ] ?
       ) ;
       rdf:type [ <Strong> ] ?
    )
}

<StrongChemicalSalt> CLOSED {
    (  $<StrongChemicalSalt_tes> (  &<ChemicalSalt_tes> ;
          rdf:type [ <ChemicalSalt> ] ?
       ) ;
       rdf:type [ <StrongChemicalSalt> ] ?
    )
}

<StrongSubmolecularComponent>  (
    CLOSED {
       (  $<StrongSubmolecularComponent_tes> (  &<SubmolecularEntity_tes> ;
             rdf:type [ <SubmolecularEntity> ] ?
          ) ;
          rdf:type [ <StrongSubmolecularComponent> ] ?
       )
    } OR @<CovalentBond>
)

<StrontiumAtom> CLOSED {
    (  $<StrontiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <StrontiumAtom> ] ?
    )
}

<StructuralIsomer> CLOSED {
    (  $<StructuralIsomer_tes> (  &<Isomer_tes> ;
          rdf:type [ <Isomer> ] ?
       ) ;
       rdf:type [ <StructuralIsomer> ] ?
    )
}

<StructuralMotif> CLOSED {
    (  $<StructuralMotif_tes> (  &<Pattern_tes> ;
          rdf:type [ <Pattern> ] ?
       ) ;
       rdf:type [ <StructuralMotif> ] ?
    )
}

<StructuralQuality>  (
    CLOSED {
       (  $<StructuralQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <StructuralQuality> ] ?
       )
    } OR @<Disordered> OR @<Helicity> OR @<Rigid>
)

<Structure>  (
    CLOSED {
       (  $<Structure_tes> (  &<FunctionalSpecification_tes> ;
             rdf:type [ <FunctionalSpecification> ] ?
          ) ;
          rdf:type [ <Structure> ] ?
       )
    } OR @<ChemicalStructure>
)

<Student> CLOSED {
    (  $<Student_tes> (  &<Academic_tes> ;
          rdf:type [ <Academic> ] ?
       ) ;
       rdf:type [ <Student> ] ?
    )
}

<StudentAdvisorRole>  (
    CLOSED {
       (  $<StudentAdvisorRole_tes> (  &<AcademicRole_tes> ;
             rdf:type [ <AcademicRole> ] ?
          ) ;
          rdf:type [ <StudentAdvisorRole> ] ?
       )
    } OR @<GraduateStudentAdvisorRole> OR @<UndergraduateStudentAdvisorRole>
)

<StudentRole> CLOSED {
    (  $<StudentRole_tes> (  &<AcademicRole_tes> ;
          rdf:type [ <AcademicRole> ] ?
       ) ;
       rdf:type [ <StudentRole> ] ?
    )
}

<Study> CLOSED {
    (  $<Study_tes> (  &<Investigation_tes> ;
          rdf:type [ <Investigation> ] ?
       ) ;
       rdf:type [ <Study> ] ?
    )
}

<StudyDesign> CLOSED {
    (  $<StudyDesign_tes> (  &<ExperimentalProtocol_tes> ;
          rdf:type [ <ExperimentalProtocol> ] ?
       ) ;
       rdf:type [ <StudyDesign> ] ?
    )
}

<StudyGroup>  (
    CLOSED {
       (  $<StudyGroup_tes> (  &<Collective_tes> ;
             rdf:type [ <Collective> ] ?
          ) ;
          rdf:type [ <StudyGroup> ] ?
       )
    } OR @<ControlGroup> OR @<InterventionGroup>
)

<StudySubject> CLOSED {
    (  $<StudySubject_tes> (  &<Person_tes> ;
          rdf:type [ <Person> ] ?
       ) ;
       rdf:type [ <StudySubject> ] ?
    )
}

<SubcellularEntity> CLOSED {
    (  $<SubcellularEntity_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <SubcellularEntity> ] ?
    )
}

<SubjectRole> CLOSED {
    (  $<SubjectRole_tes> (  &<InvestigationalRole_tes> ;
          rdf:type [ <InvestigationalRole> ] ?
       ) ;
       rdf:type [ <SubjectRole> ] ?
    )
}

<SubmolecularEntity>  (
    CLOSED {
       (  $<SubmolecularEntity_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ?
          ) ;
          rdf:type [ <SubmolecularEntity> ] ?
       )
    } OR @<StrongSubmolecularComponent> OR @<Submolecule> OR @<WeakSubmolecularComponent>
)

<Submolecule>  (
    CLOSED {
       (  $<Submolecule_tes> (  &<SubmolecularEntity_tes> ;
             rdf:type [ <SubmolecularEntity> ] ?
          ) ;
          rdf:type [ <Submolecule> ] ?
       )
    } OR @<ChemicalFunctionalGroup> OR @<Monomer> OR @<OrganicSubmolecule>
)

<Substrate> CLOSED {
    (  $<Substrate_tes> (  &<Target_tes> ;
          rdf:type [ <Target> ] ?
       ) ;
       rdf:type [ <Substrate> ] ?
    )
}

<SubstrateRole>  (
    CLOSED {
       (  $<SubstrateRole_tes> (  &<ReactantRole_tes> ;
             rdf:type [ <ReactantRole> ] ?
          ) ;
          rdf:type [ <SubstrateRole> ] ?
       )
    } OR @<Co-enzymeRole>
)

<Suffering> CLOSED {
    (  $<Suffering_tes> (  &<Hurt_tes> ;
          rdf:type [ <Hurt> ] ?
       ) ;
       rdf:type [ <Suffering> ] ?
    )
}

<Suicidal> CLOSED {
    (  $<Suicidal_tes> (  &<NegativeEmotion_tes> ;
          rdf:type [ <NegativeEmotion> ] ?
       ) ;
       rdf:type [ <Suicidal> ] ?
    )
}

<SulfurAtom> CLOSED {
    (  $<SulfurAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <SulfurAtom> ] ?
    )
}

<Sum> CLOSED {
    (  $<Sum_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <Sum> ] ?
    )
}

<Supernatant> CLOSED {
    (  $<Supernatant_tes> (  &<CentrifugationSubstance_tes> ;
          rdf:type [ <CentrifugationSubstance> ] ?
       ) ;
       rdf:type [ <Supernatant> ] ?
    )
}

<SurfaceArea> CLOSED {
    (  $<SurfaceArea_tes> (  &<Area_tes> ;
          rdf:type [ <Area> ] ?
       ) ;
       rdf:type [ <SurfaceArea> ] ?
    )
}

<SurfaceNormal> CLOSED {
    (  $<SurfaceNormal_tes> (  &<VectorLine_tes> ;
          rdf:type [ <VectorLine> ] ?
       ) ;
       rdf:type [ <SurfaceNormal> ] ?
    )
}

<Surprise>  (
    CLOSED {
       (  $<Surprise_tes> (  &<PositiveEmotion_tes> ;
             rdf:type [ <PositiveEmotion> ] ?
          ) ;
          rdf:type [ <Surprise> ] ?
       )
    } OR @<Wonder>
)

<Suspended> CLOSED {
    (  $<Suspended_tes> (  &<ProcessStatus_tes> ;
          rdf:type [ <ProcessStatus> ] ?
       ) ;
       rdf:type [ <Suspended> ] ?
    )
}

<Syllable> CLOSED {
    (  $<Syllable_tes> (  &<VerbalLanguageEntity_tes> ;
          rdf:type [ <VerbalLanguageEntity> ] ?
       ) ;
       rdf:type [ <Syllable> ] ?
    )
}

<Symbol> CLOSED {
    (  $<Symbol_tes> (  &<Representation_tes> ;
          rdf:type [ <Representation> ] ?
       ) ;
       rdf:type [ <Symbol> ] ?
    )
}

<SymportEnabledSecondaryActiveTransport> CLOSED {
    (  $<SymportEnabledSecondaryActiveTransport_tes> (  &<SecondaryActiveTransport_tes> ;
          rdf:type [ <SecondaryActiveTransport> ] ?
       ) ;
       rdf:type [ <SymportEnabledSecondaryActiveTransport> ] ?
    )
}

<Syndrome> CLOSED {
    (  $<Syndrome_tes> (  &<Description_tes> ;
          rdf:type [ <Description> ] ?
       ) ;
       rdf:type [ <Syndrome> ] ?
    )
}

<Synonym> CLOSED {
    (  $<Synonym_tes> (  &<TermVariant_tes> ;
          rdf:type [ <TermVariant> ] ?
       ) ;
       rdf:type [ <Synonym> ] ?
    )
}

<SynthesisReaction> CLOSED {
    (  $<SynthesisReaction_tes> (  &<InorganicReaction_tes> ;
          rdf:type [ <InorganicReaction> ] ?
       ) ;
       rdf:type [ <SynthesisReaction> ] ?
    )
}

<SyntheticQuality> CLOSED {
    (  $<SyntheticQuality_tes> (  &<ObjectRelationalQuality_tes> ;
          rdf:type [ <ObjectRelationalQuality> ] ?
       ) ;
       rdf:type [ <SyntheticQuality> ] ?
    )
}

<T-statistic> CLOSED {
    (  $<T-statistic_tes> (  &<Ratio_tes> ;
          rdf:type [ <Ratio> ] ?
       ) ;
       rdf:type [ <T-statistic> ] ?
    )
}

<T-statisticBasedDecreasedDifferentialGeneExpression> CLOSED {
    (  $<T-statisticBasedDecreasedDifferentialGeneExpression_tes> (  &<DifferentialGeneExpressionRatio_tes> ;
          rdf:type [ <DifferentialGeneExpressionRatio> ] ?
       ) ;
       rdf:type [ <T-statisticBasedDecreasedDifferentialGeneExpression> ] ?
    )
}

<T-statisticBasedIncreasedDifferentialGeneExpression> CLOSED {
    (  $<T-statisticBasedIncreasedDifferentialGeneExpression_tes> (  &<DifferentialGeneExpressionRatio_tes> ;
          rdf:type [ <DifferentialGeneExpressionRatio> ] ?
       ) ;
       rdf:type [ <T-statisticBasedIncreasedDifferentialGeneExpression> ] ?
    )
}

<Table> CLOSED {
    (  $<Table_tes> (  &<Figure_tes> ;
          rdf:type [ <Figure> ] ?
       ) ;
       rdf:type [ <Table> ] ?
    )
}

<TableOfContents> CLOSED {
    (  $<TableOfContents_tes> (  &<DocumentSection_tes> ;
          rdf:type [ <DocumentSection> ] ?
       ) ;
       rdf:type [ <TableOfContents> ] ?
    )
}

<TagCloud> CLOSED {
    (  $<TagCloud_tes> (  &<TextualChart_tes> ;
          rdf:type [ <TextualChart> ] ?
       ) ;
       rdf:type [ <TagCloud> ] ?
    )
}

<TantalumAtom> CLOSED {
    (  $<TantalumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TantalumAtom> ] ?
    )
}

<Target>  (
    CLOSED {
       (  $<Target_tes> rdf:type . * ;
          rdf:type [ <Target> ] ?
       )
    } OR @<Substrate>
)

<TechnetiumAtom> CLOSED {
    (  $<TechnetiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TechnetiumAtom> ] ?
    )
}

<TechnicalReport> CLOSED {
    (  $<TechnicalReport_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ?
       ) ;
       rdf:type [ <TechnicalReport> ] ?
    )
}

<Telephone> CLOSED {
    (  $<Telephone_tes> (  &<CommunicationDevice_tes> ;
          rdf:type [ <CommunicationDevice> ] ?
       ) ;
       rdf:type [ <Telephone> ] ?
    )
}

<TelephoneNumber>  (
    CLOSED {
       (  $<TelephoneNumber_tes> (  &<InformationalEntityIdentifier_tes> ;
             rdf:type [ <InformationalEntityIdentifier> ] ?
          ) ;
          rdf:type [ <TelephoneNumber> ] ?
       )
    } OR @<CellularPhoneNumber> OR @<FaxNumber> OR @<HomePhoneNumber> OR @<WorkPhoneNumber>
)

<TelevisionProgram> CLOSED {
    (  $<TelevisionProgram_tes> (  &<Media_tes> ;
          rdf:type [ <Media> ] ?
       ) ;
       rdf:type [ <TelevisionProgram> ] ?
    )
}

<TelluriumAtom> CLOSED {
    (  $<TelluriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TelluriumAtom> ] ?
    )
}

<TemporalQualifier>  (
    CLOSED {
       (  $<TemporalQualifier_tes> (  &<InformationalQuality_tes> ;
             rdf:type [ <InformationalQuality> ] ?
          ) ;
          rdf:type [ <TemporalQualifier> ] ?
       )
    } OR @<Always> OR @<MostOfTheTime> OR @<Never> OR @<SomeOfTheTime>
)

<Tensor>  (
    CLOSED {
       (  $<Tensor_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Tensor> ] ?
       )
    } OR @<RankNonzeroTensor> OR @<Scalar>
)

<TerbiumAtom> CLOSED {
    (  $<TerbiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TerbiumAtom> ] ?
    )
}

<Term>  (
    CLOSED {
       (  $<Term_tes> (  &<LanguageEntity_tes> ;
             rdf:type [ <LanguageEntity> ] ? ;
             <isNarrowerThant> @<Term> ? ;
             <isMatchTo> @<Term> ? ;
             <isBroaderThant> @<Term> ?
          ) ;
          rdf:type [ <Term> ] ?
       )
    } OR @<Concept> OR @<Descriptor> OR @<Label> OR @<TermVariant>
)

<TerminalPoint>  (
    CLOSED {
       (  $<TerminalPoint_tes> (  &<Point_tes> ;
             rdf:type [ <Point> ] ?
          ) ;
          rdf:type [ <TerminalPoint> ] ?
       )
    } OR @<Endpoint> OR @<StartPoint>
)

<Terminology> CLOSED {
    (  $<Terminology_tes> (  &<Vocabulary_tes> ;
          rdf:type [ <Vocabulary> ] ?
       ) ;
       rdf:type [ <Terminology> ] ?
    )
}

<TermVariant>  (
    CLOSED {
       (  $<TermVariant_tes> (  &<Term_tes> ;
             rdf:type [ <Term> ] ?
          ) ;
          rdf:type [ <TermVariant> ] ?
       )
    } OR @<Antonym> OR @<Homonym> OR @<Hypernym> OR @<Hyponym> OR @<Synonym>
)

<Territory> CLOSED {
    (  $<Territory_tes> (  &<GeopoliticalRegion_tes> ;
          rdf:type [ <GeopoliticalRegion> ] ?
       ) ;
       rdf:type [ <Territory> ] ?
    )
}

<Terror> CLOSED {
    (  $<Terror_tes> (  &<Dread_tes> ;
          rdf:type [ <Dread> ] ?
       ) ;
       rdf:type [ <Terror> ] ?
    )
}

<TertiaryStructureDescriptor>  (
    CLOSED {
       (  $<TertiaryStructureDescriptor_tes> (  &<BiomolecularStructureDescriptor_tes> ;
             rdf:type [ <BiomolecularStructureDescriptor> ] ?
          ) ;
          rdf:type [ <TertiaryStructureDescriptor> ] ?
       )
    } OR @<3dStructureModel>
)

<TestRole> CLOSED {
    (  $<TestRole_tes> (  &<EvaluationRole_tes> ;
          rdf:type [ <EvaluationRole> ] ?
       ) ;
       rdf:type [ <TestRole> ] ?
    )
}

<TextQuality>  (
    CLOSED {
       (  $<TextQuality_tes> (  &<ObjectQuality_tes> ;
             rdf:type [ <ObjectQuality> ] ?
          ) ;
          rdf:type [ <TextQuality> ] ?
       )
    } OR @<Written>
)

<TextSpan> CLOSED {
    (  $<TextSpan_tes> (  &<TextualEntity_tes> ;
          rdf:type [ <TextualEntity> ] ?
       ) ;
       rdf:type [ <TextSpan> ] ?
    )
}

<TextSpanEndPosition>  (
    CLOSED {
       (  $<TextSpanEndPosition_tes> (  &<EndPosition_tes> ;
             rdf:type [ <EndPosition> ] ?
          ) ;
          rdf:type [ <TextSpanEndPosition> ] ?
       )
    } OR @<WordEndPosition>
)

<TextSpanStartPosition>  (
    CLOSED {
       (  $<TextSpanStartPosition_tes> (  &<StartPosition_tes> ;
             rdf:type [ <StartPosition> ] ?
          ) ;
          rdf:type [ <TextSpanStartPosition> ] ?
       )
    } OR @<WordStartPosition>
)

<TextualChart>  (
    CLOSED {
       (  $<TextualChart_tes> (  &<Chart_tes> ;
             rdf:type [ <Chart> ] ?
          ) ;
          rdf:type [ <TextualChart> ] ?
       )
    } OR @<PhraseNetDiagram> OR @<TagCloud> OR @<WordTree>
)

<TextualEntity>  (
    CLOSED {
       (  $<TextualEntity_tes> (  &<LanguageEntity_tes> ;
             rdf:type [ <LanguageEntity> ] ?
          ) ;
          rdf:type [ <TextualEntity> ] ?
       )
    } OR @<Document> OR @<DocumentComponent> OR @<Excerpt> OR @<Paragraph> OR @<TextSpan>
)

<ThalliumAtom> CLOSED {
    (  $<ThalliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ThalliumAtom> ] ?
    )
}

<TherapeuticGene-diseaseAssociation> CLOSED {
    (  $<TherapeuticGene-diseaseAssociation_tes> (  &<Gene-diseaseAssociation_tes> ;
          rdf:type [ <Gene-diseaseAssociation> ] ?
       ) ;
       rdf:type [ <TherapeuticGene-diseaseAssociation> ] ?
    )
}

<ThesisDocument>  (
    CLOSED {
       (  $<ThesisDocument_tes> (  &<Publication_tes> ;
             rdf:type [ <Publication> ] ?
          ) ;
          rdf:type [ <ThesisDocument> ] ?
       )
    } OR @<Honor%27sThesis> OR @<Master%27sThesis> OR @<PhdThesis>
)

<Thickness> CLOSED {
    (  $<Thickness_tes> (  &<Depth_tes> ;
          rdf:type [ <Depth> ] ?
       ) ;
       rdf:type [ <Thickness> ] ?
    )
}

<ThoriumAtom> CLOSED {
    (  $<ThoriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ThoriumAtom> ] ?
    )
}

<ThuliumAtom> CLOSED {
    (  $<ThuliumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ThuliumAtom> ] ?
    )
}

<TickMark>  (
    CLOSED {
       (  $<TickMark_tes> (  &<LineSegment_tes> ;
             rdf:type [ <LineSegment> ] ?
          ) ;
          rdf:type [ <TickMark> ] ?
       )
    } OR @<MajorTickMark> OR @<MinorTickMark>
)

<TimeInstant>  (
    CLOSED {
       (  $<TimeInstant_tes> (  &<TimeMeasurement_tes> ;
             rdf:type [ <TimeMeasurement> ] ? ;
             <isStartTimeOf> @<Entity> ? ;
             <isTimeBoundaryOf> @<Entity> ? ;
             <isEndTimeOf> @<Entity> ?
          ) ;
          rdf:type [ <TimeInstant> ] ?
       )
    } OR @<DateOfDatabaseSubmission> OR @<DateOfIssue> OR @<EndDate> OR @<EndTime> OR @<StartDate> OR @<StartTime>
)

<TimeInterval>  (
    CLOSED {
       (  $<TimeInterval_tes> (  &<TimeMeasurement_tes> ;
             rdf:type [ <TimeMeasurement> ] ?
          ) ;
          rdf:type [ <TimeInterval> ] ?
       )
    } OR @<Century> OR @<Day> OR @<Hour> OR @<Millennium> OR @<Minute> OR @<Month> OR @<Second> OR @<Week> OR @<Year>
)

<TimeMeasurement>  (
    CLOSED {
       (  $<TimeMeasurement_tes> (  &<DimensionalQuantity_tes> ;
             rdf:type [ <DimensionalQuantity> ] ?
          ) ;
          rdf:type [ <TimeMeasurement> ] ?
       )
    } OR @<TimeInstant> OR @<TimeInterval>
)

<TinAtom> CLOSED {
    (  $<TinAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TinAtom> ] ?
    )
}

<Tissue> CLOSED {
    (  $<Tissue_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <Tissue> ] ?
    )
}

<TitaniumAtom> CLOSED {
    (  $<TitaniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TitaniumAtom> ] ?
    )
}

<Title>  (
    CLOSED {
       (  $<Title_tes> (  &<Label_tes> ;
             rdf:type [ <Label> ] ?
          ) ;
          rdf:type [ <Title> ] ?
       )
    } OR @<DocumentTitle> OR @<GraphTitle> OR @<PrimaryTitle> OR @<SecondaryTitle>
)

<ToActivelyInteractWith>  (
    CLOSED {
       (  $<ToActivelyInteractWith_tes> (  &<ToInteractWith_tes> ;
             rdf:type [ <ToInteractWith> ] ?
          ) ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       )
    } OR @<ToAssemble> OR @<ToAssociate> OR @<ToConsume> OR @<ToDecodeInformation> OR @<ToEncodeInformation> OR @<ToInvestigate> OR
    @<ToMaintainInformation> OR @<ToModify> OR @<ToProduce> OR @<ToRecord> OR @<ToRetrieve> OR @<ToServeAs> OR @<ToStore> OR
    @<ToTransport>
)

<ToAddACovalentBond> CLOSED {
    (  $<ToAddACovalentBond_tes> (  &<ToCovalentlyModify_tes> ;
          rdf:type [ <ToCovalentlyModify> ] ?
       ) ;
       rdf:type [ <ToAddACovalentBond> ] ?
    )
}

<ToAssemble> CLOSED {
    (  $<ToAssemble_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToAssemble> ] ?
    )
}

<ToAssociate>  (
    CLOSED {
       (  $<ToAssociate_tes> (  &<ToActivelyInteractWith_tes> ;
             rdf:type [ <ToActivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToAssociate> ] ?
       )
    } OR @<ToBindTo>
)

<ToBeActivated> CLOSED {
    (  $<ToBeActivated_tes> (  &<ToBeConformationallyChanged_tes> ;
          rdf:type [ <ToBeConformationallyChanged> ] ?
       ) ;
       rdf:type [ <ToBeActivated> ] ?
    )
}

<ToBeActivelyInteractedWith>  (
    CLOSED {
       (  $<ToBeActivelyInteractedWith_tes> (  &<ToBeInteractedWith_tes> ;
             rdf:type [ <ToBeInteractedWith> ] ?
          ) ;
          rdf:type [ <ToBeActivelyInteractedWith> ] ?
       )
    } OR @<ToBeModified> OR @<ToBeTransported> OR @<ToLuminesce>
)

<ToBeAMemberOf> CLOSED {
    (  $<ToBeAMemberOf_tes> (  &<ToPassivelyInteractWith_tes> ;
          rdf:type [ <ToPassivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToBeAMemberOf> ] ?
    )
}

<ToBeAPartOf> CLOSED {
    (  $<ToBeAPartOf_tes> (  &<ToBeCombined_tes> ;
          rdf:type [ <ToBeCombined> ] ?
       ) ;
       rdf:type [ <ToBeAPartOf> ] ?
    )
}

<ToBeCleaved> CLOSED {
    (  $<ToBeCleaved_tes> (  &<ToBeModified_tes> ;
          rdf:type [ <ToBeModified> ] ?
       ) ;
       rdf:type [ <ToBeCleaved> ] ?
    )
}

<ToBeCombined>  (
    CLOSED {
       (  $<ToBeCombined_tes> (  &<ToBeModified_tes> ;
             rdf:type [ <ToBeModified> ] ?
          ) ;
          rdf:type [ <ToBeCombined> ] ?
       )
    } OR @<ToBeAPartOf>
)

<ToBeCompared> CLOSED {
    (  $<ToBeCompared_tes> (  &<ToBeExamined_tes> ;
          rdf:type [ <ToBeExamined> ] ?
       ) ;
       rdf:type [ <ToBeCompared> ] ?
    )
}

<ToBeConformationallyChanged>  (
    CLOSED {
       (  $<ToBeConformationallyChanged_tes> (  &<ToBeModified_tes> ;
             rdf:type [ <ToBeModified> ] ?
          ) ;
          rdf:type [ <ToBeConformationallyChanged> ] ?
       )
    } OR @<ToBeActivated> OR @<ToBeInhibited>
)

<ToBeCovalentlyModified>  (
    CLOSED {
       (  $<ToBeCovalentlyModified_tes> (  &<ToBeModified_tes> ;
             rdf:type [ <ToBeModified> ] ?
          ) ;
          rdf:type [ <ToBeCovalentlyModified> ] ?
       )
    } OR @<ToGainACovalentBond> OR @<ToLoseACovalentBond>
)

<ToBeElectronicallyModified>  (
    CLOSED {
       (  $<ToBeElectronicallyModified_tes> (  &<ToBeModified_tes> ;
             rdf:type [ <ToBeModified> ] ?
          ) ;
          rdf:type [ <ToBeElectronicallyModified> ] ?
       )
    } OR @<ToGainAnElectron> OR @<ToLoseAnElectron>
)

<ToBeExamined>  (
    CLOSED {
       (  $<ToBeExamined_tes> (  &<ToBeObserved_tes> ;
             rdf:type [ <ToBeObserved> ] ?
          ) ;
          rdf:type [ <ToBeExamined> ] ?
       )
    } OR @<ToBeCompared>
)

<ToBeInhibited> CLOSED {
    (  $<ToBeInhibited_tes> (  &<ToBeConformationallyChanged_tes> ;
          rdf:type [ <ToBeConformationallyChanged> ] ?
       ) ;
       rdf:type [ <ToBeInhibited> ] ?
    )
}

<ToBeInteractedWith>  (
    CLOSED {
       (  $<ToBeInteractedWith_tes> (  &<Capability_tes> ;
             rdf:type [ <Capability> ] ?
          ) ;
          rdf:type [ <ToBeInteractedWith> ] ?
       )
    } OR @<ToBeActivelyInteractedWith> OR @<ToBePassivelyInteractedWith> OR @<ToBeTranslocated>
)

<ToBeModified>  (
    CLOSED {
       (  $<ToBeModified_tes> (  &<ToBeActivelyInteractedWith_tes> ;
             rdf:type [ <ToBeActivelyInteractedWith> ] ?
          ) ;
          rdf:type [ <ToBeModified> ] ?
       )
    } OR @<ToBeCleaved> OR @<ToBeCombined> OR @<ToBeConformationallyChanged> OR @<ToBeCovalentlyModified> OR
    @<ToBeElectronicallyModified>
)

<ToBeObserved>  (
    CLOSED {
       (  $<ToBeObserved_tes> (  &<ToBePassivelyInteractedWith_tes> ;
             rdf:type [ <ToBePassivelyInteractedWith> ] ?
          ) ;
          rdf:type [ <ToBeObserved> ] ?
       )
    } OR @<ToBeExamined> OR @<ToBeRecorded>
)

<ToBePassivelyInteractedWith>  (
    CLOSED {
       (  $<ToBePassivelyInteractedWith_tes> (  &<ToBeInteractedWith_tes> ;
             rdf:type [ <ToBeInteractedWith> ] ?
          ) ;
          rdf:type [ <ToBePassivelyInteractedWith> ] ?
       )
    } OR @<ToBeObserved>
)

<ToBeRecorded> CLOSED {
    (  $<ToBeRecorded_tes> (  &<ToBeObserved_tes> ;
          rdf:type [ <ToBeObserved> ] ?
       ) ;
       rdf:type [ <ToBeRecorded> ] ?
    )
}

<ToBeTranslocated> CLOSED {
    (  $<ToBeTranslocated_tes> (  &<ToBeInteractedWith_tes> ;
          rdf:type [ <ToBeInteractedWith> ] ?
       ) ;
       rdf:type [ <ToBeTranslocated> ] ?
    )
}

<ToBeTransported> CLOSED {
    (  $<ToBeTransported_tes> (  &<ToBeActivelyInteractedWith_tes> ;
          rdf:type [ <ToBeActivelyInteractedWith> ] ?
       ) ;
       rdf:type [ <ToBeTransported> ] ?
    )
}

<ToBindTo> CLOSED {
    (  $<ToBindTo_tes> (  &<ToAssociate_tes> ;
          rdf:type [ <ToAssociate> ] ?
       ) ;
       rdf:type [ <ToBindTo> ] ?
    )
}

<ToBoil> CLOSED {
    (  $<ToBoil_tes> (  &<ToHeat_tes> ;
          rdf:type [ <ToHeat> ] ?
       ) ;
       rdf:type [ <ToBoil> ] ?
    )
}

<ToBreathe> CLOSED {
    (  $<ToBreathe_tes> (  &<Capability_tes> ;
          rdf:type [ <Capability> ] ?
       ) ;
       rdf:type [ <ToBreathe> ] ?
    )
}

<ToCauseDisease> CLOSED {
    (  $<ToCauseDisease_tes> (  &<ToChangeMaterially_tes> ;
          rdf:type [ <ToChangeMaterially> ] ?
       ) ;
       rdf:type [ <ToCauseDisease> ] ?
    )
}

<ToChangeAppearance>  (
    CLOSED {
       (  $<ToChangeAppearance_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToChangeAppearance> ] ?
       )
    } OR @<ToDemagnify> OR @<ToDistort> OR @<ToMagnify>
)

<ToChangeEnergetically>  (
    CLOSED {
       (  $<ToChangeEnergetically_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToChangeEnergetically> ] ?
       )
    } OR @<ToChangeTheActivationEnergy> OR @<ToModifyElectronically> OR @<ToReduceEnergy> OR @<ToSupplyEnergy>
)

<ToChangeMaterially>  (
    CLOSED {
       (  $<ToChangeMaterially_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToChangeMaterially> ] ?
       )
    } OR @<ToCauseDisease> OR @<ToCombine> OR @<ToCovalentlyModify> OR @<ToDisassemble>
)

<ToChangeSpatially>  (
    CLOSED {
       (  $<ToChangeSpatially_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToChangeSpatially> ] ?
       )
    } OR @<ToContain>
)

<ToChangeTheActivationEnergy>  (
    CLOSED {
       (  $<ToChangeTheActivationEnergy_tes> (  &<ToChangeEnergetically_tes> ;
             rdf:type [ <ToChangeEnergetically> ] ?
          ) ;
          rdf:type [ <ToChangeTheActivationEnergy> ] ?
       )
    } OR @<ToIncreaseTheActivationEnergy> OR @<ToReduceTheActivationEnergy>
)

<ToCharacterize> CLOSED {
    (  $<ToCharacterize_tes> (  &<ToDescribe_tes> ;
          rdf:type [ <ToDescribe> ] ?
       ) ;
       rdf:type [ <ToCharacterize> ] ?
    )
}

<ToCleave> CLOSED {
    (  $<ToCleave_tes> (  &<ToDisassemble_tes> ;
          rdf:type [ <ToDisassemble> ] ?
       ) ;
       rdf:type [ <ToCleave> ] ?
    )
}

<ToCombine> CLOSED {
    (  $<ToCombine_tes> (  &<ToChangeMaterially_tes> ;
          rdf:type [ <ToChangeMaterially> ] ?
       ) ;
       rdf:type [ <ToCombine> ] ?
    )
}

<ToCompare> CLOSED {
    (  $<ToCompare_tes> (  &<ToExamine_tes> ;
          rdf:type [ <ToExamine> ] ?
       ) ;
       rdf:type [ <ToCompare> ] ?
    )
}

<ToConformationallyActivate> CLOSED {
    (  $<ToConformationallyActivate_tes> (  &<ToModifyConformationOf_tes> ;
          rdf:type [ <ToModifyConformationOf> ] ?
       ) ;
       rdf:type [ <ToConformationallyActivate> ] ?
    )
}

<ToConformationallyInhibit> CLOSED {
    (  $<ToConformationallyInhibit_tes> (  &<ToModifyConformationOf_tes> ;
          rdf:type [ <ToModifyConformationOf> ] ?
       ) ;
       rdf:type [ <ToConformationallyInhibit> ] ?
    )
}

<ToConsume>  (
    CLOSED {
       (  $<ToConsume_tes> (  &<ToActivelyInteractWith_tes> ;
             rdf:type [ <ToActivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToConsume> ] ?
       )
    } OR @<ToIngest>
)

<ToContain>  (
    CLOSED {
       (  $<ToContain_tes> (  &<ToChangeSpatially_tes> ;
             rdf:type [ <ToChangeSpatially> ] ?
          ) ;
          rdf:type [ <ToContain> ] ?
       )
    } OR @<ToImmobilize>
)

<ToCool>  (
    CLOSED {
       (  $<ToCool_tes> (  &<ToReduceEnergy_tes> ;
             rdf:type [ <ToReduceEnergy> ] ?
          ) ;
          rdf:type [ <ToCool> ] ?
       )
    } OR @<ToFreeze>
)

<ToCovalentlyModify>  (
    CLOSED {
       (  $<ToCovalentlyModify_tes> (  &<ToChangeMaterially_tes> ;
             rdf:type [ <ToChangeMaterially> ] ?
          ) ;
          rdf:type [ <ToCovalentlyModify> ] ?
       )
    } OR @<ToAddACovalentBond> OR @<ToRemoveACovalentBond>
)

<ToDecodeInformation> CLOSED {
    (  $<ToDecodeInformation_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToDecodeInformation> ] ?
    )
}

<ToDecreaseTheRateOfFormation> CLOSED {
    (  $<ToDecreaseTheRateOfFormation_tes> (  &<ToRegulateTheRateOfFormation_tes> ;
          rdf:type [ <ToRegulateTheRateOfFormation> ] ?
       ) ;
       rdf:type [ <ToDecreaseTheRateOfFormation> ] ?
    )
}

<ToDemagnify> CLOSED {
    (  $<ToDemagnify_tes> (  &<ToChangeAppearance_tes> ;
          rdf:type [ <ToChangeAppearance> ] ?
       ) ;
       rdf:type [ <ToDemagnify> ] ?
    )
}

<ToDescribe>  (
    CLOSED {
       (  $<ToDescribe_tes> (  &<ToPassivelyInteractWith_tes> ;
             rdf:type [ <ToPassivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToDescribe> ] ?
       )
    } OR @<ToCharacterize>
)

<ToDisassemble>  (
    CLOSED {
       (  $<ToDisassemble_tes> (  &<ToChangeMaterially_tes> ;
             rdf:type [ <ToChangeMaterially> ] ?
          ) ;
          rdf:type [ <ToDisassemble> ] ?
       )
    } OR @<ToCleave>
)

<ToDisassociate> CLOSED {
    (  $<ToDisassociate_tes> (  &<ToModify_tes> ;
          rdf:type [ <ToModify> ] ?
       ) ;
       rdf:type [ <ToDisassociate> ] ?
    )
}

<ToDistort> CLOSED {
    (  $<ToDistort_tes> (  &<ToChangeAppearance_tes> ;
          rdf:type [ <ToChangeAppearance> ] ?
       ) ;
       rdf:type [ <ToDistort> ] ?
    )
}

<ToEmit> CLOSED {
    (  $<ToEmit_tes> (  &<ToReduceEnergy_tes> ;
          rdf:type [ <ToReduceEnergy> ] ?
       ) ;
       rdf:type [ <ToEmit> ] ?
    )
}

<ToEncodeInformation> CLOSED {
    (  $<ToEncodeInformation_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToEncodeInformation> ] ?
    )
}

<ToExamine>  (
    CLOSED {
       (  $<ToExamine_tes> (  &<ToObserve_tes> ;
             rdf:type [ <ToObserve> ] ?
          ) ;
          rdf:type [ <ToExamine> ] ?
       )
    } OR @<ToCompare> OR @<ToTestAHypothesis>
)

<ToExcite> CLOSED {
    (  $<ToExcite_tes> (  &<ToSupplyEnergy_tes> ;
          rdf:type [ <ToSupplyEnergy> ] ?
       ) ;
       rdf:type [ <ToExcite> ] ?
    )
}

<ToExtract> CLOSED {
    (  $<ToExtract_tes> (  &<ToSeparate_tes> ;
          rdf:type [ <ToSeparate> ] ?
       ) ;
       rdf:type [ <ToExtract> ] ?
    )
}

<ToFilter> CLOSED {
    (  $<ToFilter_tes> (  &<ToSeparate_tes> ;
          rdf:type [ <ToSeparate> ] ?
       ) ;
       rdf:type [ <ToFilter> ] ?
    )
}

<ToFluoresce> CLOSED {
    (  $<ToFluoresce_tes> (  &<ToLuminesce_tes> ;
          rdf:type [ <ToLuminesce> ] ?
       ) ;
       rdf:type [ <ToFluoresce> ] ?
    )
}

<ToFreeze> CLOSED {
    (  $<ToFreeze_tes> (  &<ToCool_tes> ;
          rdf:type [ <ToCool> ] ?
       ) ;
       rdf:type [ <ToFreeze> ] ?
    )
}

<ToGainACovalentBond> CLOSED {
    (  $<ToGainACovalentBond_tes> (  &<ToBeCovalentlyModified_tes> ;
          rdf:type [ <ToBeCovalentlyModified> ] ?
       ) ;
       rdf:type [ <ToGainACovalentBond> ] ?
    )
}

<ToGainAnElectron> CLOSED {
    (  $<ToGainAnElectron_tes> (  &<ToBeElectronicallyModified_tes> ;
          rdf:type [ <ToBeElectronicallyModified> ] ?
       ) ;
       rdf:type [ <ToGainAnElectron> ] ?
    )
}

<ToHeat>  (
    CLOSED {
       (  $<ToHeat_tes> (  &<ToSupplyEnergy_tes> ;
             rdf:type [ <ToSupplyEnergy> ] ?
          ) ;
          rdf:type [ <ToHeat> ] ?
       )
    } OR @<ToBoil>
)

<ToIdentify> CLOSED {
    (  $<ToIdentify_tes> (  &<ToInvestigate_tes> ;
          rdf:type [ <ToInvestigate> ] ?
       ) ;
       rdf:type [ <ToIdentify> ] ?
    )
}

<ToImmobilize> CLOSED {
    (  $<ToImmobilize_tes> (  &<ToContain_tes> ;
          rdf:type [ <ToContain> ] ?
       ) ;
       rdf:type [ <ToImmobilize> ] ?
    )
}

<ToIncreaseTheActivationEnergy> CLOSED {
    (  $<ToIncreaseTheActivationEnergy_tes> (  &<ToChangeTheActivationEnergy_tes> ;
          rdf:type [ <ToChangeTheActivationEnergy> ] ?
       ) ;
       rdf:type [ <ToIncreaseTheActivationEnergy> ] ?
    )
}

<ToIncreaseTheRateOfFormation> CLOSED {
    (  $<ToIncreaseTheRateOfFormation_tes> (  &<ToRegulateTheRateOfFormation_tes> ;
          rdf:type [ <ToRegulateTheRateOfFormation> ] ?
       ) ;
       rdf:type [ <ToIncreaseTheRateOfFormation> ] ?
    )
}

<ToInfect> CLOSED {
    (  $<ToInfect_tes> (  &<ToInject_tes> ;
          rdf:type [ <ToInject> ] ?
       ) ;
       rdf:type [ <ToInfect> ] ?
    )
}

<ToIngest> CLOSED {
    (  $<ToIngest_tes> (  &<ToConsume_tes> ;
          rdf:type [ <ToConsume> ] ?
       ) ;
       rdf:type [ <ToIngest> ] ?
    )
}

<ToInject>  (
    CLOSED {
       (  $<ToInject_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToInject> ] ?
       )
    } OR @<ToInfect>
)

<ToInteractAndToBeInteractedWith> CLOSED {
    (  $<ToInteractAndToBeInteractedWith_tes> (  &<MutualDisposition_tes> ;
          rdf:type [ <MutualDisposition> ] ?
       ) ;
       rdf:type [ <ToInteractAndToBeInteractedWith> ] ?
    )
}

<ToInteractWith>  (
    CLOSED {
       (  $<ToInteractWith_tes> (  &<Capability_tes> ;
             rdf:type [ <Capability> ] ?
          ) ;
          rdf:type [ <ToInteractWith> ] ?
       )
    } OR @<ToActivelyInteractWith> OR @<ToPassivelyInteractWith> OR @<ToTranslocate>
)

<ToInvestigate>  (
    CLOSED {
       (  $<ToInvestigate_tes> (  &<ToActivelyInteractWith_tes> ;
             rdf:type [ <ToActivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToInvestigate> ] ?
       )
    } OR @<ToIdentify> OR @<ToMeasure>
)

<ToIonize>  (
    CLOSED {
       (  $<ToIonize_tes> (  &<ToModifyElectronically_tes> ;
             rdf:type [ <ToModifyElectronically> ] ?
          ) ;
          rdf:type [ <ToIonize> ] ?
       )
    } OR @<ToNegativelyCharge> OR @<ToPositivelyCharge>
)

<ToLoseACovalentBond> CLOSED {
    (  $<ToLoseACovalentBond_tes> (  &<ToBeCovalentlyModified_tes> ;
          rdf:type [ <ToBeCovalentlyModified> ] ?
       ) ;
       rdf:type [ <ToLoseACovalentBond> ] ?
    )
}

<ToLoseAnElectron> CLOSED {
    (  $<ToLoseAnElectron_tes> (  &<ToBeElectronicallyModified_tes> ;
          rdf:type [ <ToBeElectronicallyModified> ] ?
       ) ;
       rdf:type [ <ToLoseAnElectron> ] ?
    )
}

<ToLuminesce>  (
    CLOSED {
       (  $<ToLuminesce_tes> (  &<ToBeActivelyInteractedWith_tes> ;
             rdf:type [ <ToBeActivelyInteractedWith> ] ?
          ) ;
          rdf:type [ <ToLuminesce> ] ?
       )
    } OR @<ToFluoresce>
)

<ToMagnify> CLOSED {
    (  $<ToMagnify_tes> (  &<ToChangeAppearance_tes> ;
          rdf:type [ <ToChangeAppearance> ] ?
       ) ;
       rdf:type [ <ToMagnify> ] ?
    )
}

<ToMaintainInformation> CLOSED {
    (  $<ToMaintainInformation_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToMaintainInformation> ] ?
    )
}

<ToMeasure> CLOSED {
    (  $<ToMeasure_tes> (  &<ToInvestigate_tes> ;
          rdf:type [ <ToInvestigate> ] ?
       ) ;
       rdf:type [ <ToMeasure> ] ?
    )
}

<ToModify>  (
    CLOSED {
       (  $<ToModify_tes> (  &<ToActivelyInteractWith_tes> ;
             rdf:type [ <ToActivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToModify> ] ?
       )
    } OR @<ToChangeAppearance> OR @<ToChangeEnergetically> OR @<ToChangeMaterially> OR @<ToChangeSpatially> OR @<ToDisassociate> OR
    @<ToInject> OR @<ToModifyConformationOf> OR @<ToRegulate> OR @<ToSeparate>
)

<ToModifyConformationOf>  (
    CLOSED {
       (  $<ToModifyConformationOf_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToModifyConformationOf> ] ?
       )
    } OR @<ToConformationallyActivate> OR @<ToConformationallyInhibit>
)

<ToModifyElectronically>  (
    CLOSED {
       (  $<ToModifyElectronically_tes> (  &<ToChangeEnergetically_tes> ;
             rdf:type [ <ToChangeEnergetically> ] ?
          ) ;
          rdf:type [ <ToModifyElectronically> ] ?
       )
    } OR @<ToIonize> OR @<ToModifyOxidationStateOf>
)

<ToModifyOxidationStateOf>  (
    CLOSED {
       (  $<ToModifyOxidationStateOf_tes> (  &<ToModifyElectronically_tes> ;
             rdf:type [ <ToModifyElectronically> ] ?
          ) ;
          rdf:type [ <ToModifyOxidationStateOf> ] ?
       )
    } OR @<ToOxidize> OR @<ToReduce>
)

<ToNegativelyCharge> CLOSED {
    (  $<ToNegativelyCharge_tes> (  &<ToIonize_tes> ;
          rdf:type [ <ToIonize> ] ?
       ) ;
       rdf:type [ <ToNegativelyCharge> ] ?
    )
}

<ToObserve>  (
    CLOSED {
       (  $<ToObserve_tes> (  &<ToPassivelyInteractWith_tes> ;
             rdf:type [ <ToPassivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToObserve> ] ?
       )
    } OR @<ToExamine>
)

<ToOxidize> CLOSED {
    (  $<ToOxidize_tes> (  &<ToModifyOxidationStateOf_tes> ;
          rdf:type [ <ToModifyOxidationStateOf> ] ?
       ) ;
       rdf:type [ <ToOxidize> ] ?
    )
}

<ToPassivelyInteractWith>  (
    CLOSED {
       (  $<ToPassivelyInteractWith_tes> (  &<ToInteractWith_tes> ;
             rdf:type [ <ToInteractWith> ] ?
          ) ;
          rdf:type [ <ToPassivelyInteractWith> ] ?
       )
    } OR @<ToBeAMemberOf> OR @<ToDescribe> OR @<ToObserve>
)

<ToPositivelyCharge> CLOSED {
    (  $<ToPositivelyCharge_tes> (  &<ToIonize_tes> ;
          rdf:type [ <ToIonize> ] ?
       ) ;
       rdf:type [ <ToPositivelyCharge> ] ?
    )
}

<ToProduce> CLOSED {
    (  $<ToProduce_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToProduce> ] ?
    )
}

<ToProvide> CLOSED {
    (  $<ToProvide_tes> (  &<ToRetrieve_tes> ;
          rdf:type [ <ToRetrieve> ] ?
       ) ;
       rdf:type [ <ToProvide> ] ?
    )
}

<TopValueAxis> CLOSED {
    (  $<TopValueAxis_tes> (  &<ValueAxis_tes> ;
          rdf:type [ <ValueAxis> ] ?
       ) ;
       rdf:type [ <TopValueAxis> ] ?
    )
}

<ToRecord> CLOSED {
    (  $<ToRecord_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToRecord> ] ?
    )
}

<ToReduce> CLOSED {
    (  $<ToReduce_tes> (  &<ToModifyOxidationStateOf_tes> ;
          rdf:type [ <ToModifyOxidationStateOf> ] ?
       ) ;
       rdf:type [ <ToReduce> ] ?
    )
}

<ToReduceEnergy>  (
    CLOSED {
       (  $<ToReduceEnergy_tes> (  &<ToChangeEnergetically_tes> ;
             rdf:type [ <ToChangeEnergetically> ] ?
          ) ;
          rdf:type [ <ToReduceEnergy> ] ?
       )
    } OR @<ToCool> OR @<ToEmit>
)

<ToReduceTheActivationEnergy> CLOSED {
    (  $<ToReduceTheActivationEnergy_tes> (  &<ToChangeTheActivationEnergy_tes> ;
          rdf:type [ <ToChangeTheActivationEnergy> ] ?
       ) ;
       rdf:type [ <ToReduceTheActivationEnergy> ] ?
    )
}

<ToRegulate>  (
    CLOSED {
       (  $<ToRegulate_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToRegulate> ] ?
       )
    } OR @<ToRegulateTheRateOfFormation>
)

<ToRegulateTheRateOfFormation>  (
    CLOSED {
       (  $<ToRegulateTheRateOfFormation_tes> (  &<ToRegulate_tes> ;
             rdf:type [ <ToRegulate> ] ?
          ) ;
          rdf:type [ <ToRegulateTheRateOfFormation> ] ?
       )
    } OR @<ToDecreaseTheRateOfFormation> OR @<ToIncreaseTheRateOfFormation>
)

<ToRemoveACovalentBond> CLOSED {
    (  $<ToRemoveACovalentBond_tes> (  &<ToCovalentlyModify_tes> ;
          rdf:type [ <ToCovalentlyModify> ] ?
       ) ;
       rdf:type [ <ToRemoveACovalentBond> ] ?
    )
}

<ToRetrieve>  (
    CLOSED {
       (  $<ToRetrieve_tes> (  &<ToActivelyInteractWith_tes> ;
             rdf:type [ <ToActivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToRetrieve> ] ?
       )
    } OR @<ToProvide>
)

<ToSeparate>  (
    CLOSED {
       (  $<ToSeparate_tes> (  &<ToModify_tes> ;
             rdf:type [ <ToModify> ] ?
          ) ;
          rdf:type [ <ToSeparate> ] ?
       )
    } OR @<ToExtract> OR @<ToFilter>
)

<ToServeAs>  (
    CLOSED {
       (  $<ToServeAs_tes> (  &<ToActivelyInteractWith_tes> ;
             rdf:type [ <ToActivelyInteractWith> ] ?
          ) ;
          rdf:type [ <ToServeAs> ] ?
       )
    } OR @<ToServeAsAHost> OR @<ToServeAsAPrimerForDNASynthesis> OR @<ToServeAsATemplateForMolecularSynthesis>
)

<ToServeAsAHost> CLOSED {
    (  $<ToServeAsAHost_tes> (  &<ToServeAs_tes> ;
          rdf:type [ <ToServeAs> ] ?
       ) ;
       rdf:type [ <ToServeAsAHost> ] ?
    )
}

<ToServeAsAPrimerForDNASynthesis> CLOSED {
    (  $<ToServeAsAPrimerForDNASynthesis_tes> (  &<ToServeAs_tes> ;
          rdf:type [ <ToServeAs> ] ?
       ) ;
       rdf:type [ <ToServeAsAPrimerForDNASynthesis> ] ?
    )
}

<ToServeAsATemplateForDNASynthesis> CLOSED {
    (  $<ToServeAsATemplateForDNASynthesis_tes> (  &<ToServeAsATemplateForMolecularSynthesis_tes> ;
          rdf:type [ <ToServeAsATemplateForMolecularSynthesis> ] ?
       ) ;
       rdf:type [ <ToServeAsATemplateForDNASynthesis> ] ?
    )
}

<ToServeAsATemplateForMolecularSynthesis>  (
    CLOSED {
       (  $<ToServeAsATemplateForMolecularSynthesis_tes> (  &<ToServeAs_tes> ;
             rdf:type [ <ToServeAs> ] ?
          ) ;
          rdf:type [ <ToServeAsATemplateForMolecularSynthesis> ] ?
       )
    } OR @<ToServeAsATemplateForDNASynthesis> OR @<ToServeAsATemplateForProteinSynthesis> OR @<ToServeAsATemplateForRNASynthesis>
)

<ToServeAsATemplateForProteinSynthesis> CLOSED {
    (  $<ToServeAsATemplateForProteinSynthesis_tes> (  &<ToServeAsATemplateForMolecularSynthesis_tes> ;
          rdf:type [ <ToServeAsATemplateForMolecularSynthesis> ] ?
       ) ;
       rdf:type [ <ToServeAsATemplateForProteinSynthesis> ] ?
    )
}

<ToServeAsATemplateForRNASynthesis> CLOSED {
    (  $<ToServeAsATemplateForRNASynthesis_tes> (  &<ToServeAsATemplateForMolecularSynthesis_tes> ;
          rdf:type [ <ToServeAsATemplateForMolecularSynthesis> ] ?
       ) ;
       rdf:type [ <ToServeAsATemplateForRNASynthesis> ] ?
    )
}

<ToStore> CLOSED {
    (  $<ToStore_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToStore> ] ?
    )
}

<ToSupplyElectricity> CLOSED {
    (  $<ToSupplyElectricity_tes> (  &<ToSupplyEnergy_tes> ;
          rdf:type [ <ToSupplyEnergy> ] ?
       ) ;
       rdf:type [ <ToSupplyElectricity> ] ?
    )
}

<ToSupplyEnergy>  (
    CLOSED {
       (  $<ToSupplyEnergy_tes> (  &<ToChangeEnergetically_tes> ;
             rdf:type [ <ToChangeEnergetically> ] ?
          ) ;
          rdf:type [ <ToSupplyEnergy> ] ?
       )
    } OR @<ToExcite> OR @<ToHeat> OR @<ToSupplyElectricity>
)

<ToTestAHypothesis> CLOSED {
    (  $<ToTestAHypothesis_tes> (  &<ToExamine_tes> ;
          rdf:type [ <ToExamine> ] ?
       ) ;
       rdf:type [ <ToTestAHypothesis> ] ?
    )
}

<ToTranslocate> CLOSED {
    (  $<ToTranslocate_tes> (  &<ToInteractWith_tes> ;
          rdf:type [ <ToInteractWith> ] ?
       ) ;
       rdf:type [ <ToTranslocate> ] ?
    )
}

<ToTransport> CLOSED {
    (  $<ToTransport_tes> (  &<ToActivelyInteractWith_tes> ;
          rdf:type [ <ToActivelyInteractWith> ] ?
       ) ;
       rdf:type [ <ToTransport> ] ?
    )
}

<Township> CLOSED {
    (  $<Township_tes> (  &<GeopoliticalRegion_tes> ;
          rdf:type [ <GeopoliticalRegion> ] ?
       ) ;
       rdf:type [ <Township> ] ?
    )
}

<Toxic> CLOSED {
    (  $<Toxic_tes> (  &<Toxicity_tes> ;
          rdf:type [ <Toxicity> ] ?
       ) ;
       rdf:type [ <Toxic> ] ?
    )
}

<Toxicity>  (
    CLOSED {
       (  $<Toxicity_tes> (  &<ChemicalQuality_tes> ;
             rdf:type [ <ChemicalQuality> ] ?
          ) ;
          rdf:type [ <Toxicity> ] ?
       )
    } OR @<NonToxic> OR @<Toxic>
)

<ToxicRole>  (
    CLOSED {
       (  $<ToxicRole_tes> (  &<ChemicalSubstanceRole_tes> ;
             rdf:type [ <ChemicalSubstanceRole> ] ?
          ) ;
          rdf:type [ <ToxicRole> ] ?
       )
    } OR @<PoisonRole>
)

<ToxinRole> CLOSED {
    (  $<ToxinRole_tes> (  &<PoisonRole_tes> ;
          rdf:type [ <PoisonRole> ] ?
       ) ;
       rdf:type [ <ToxinRole> ] ?
    )
}

<Trans-regulatoryElement> CLOSED {
    (  $<Trans-regulatoryElement_tes> (  &<NucleicAcidPart_tes> ;
          rdf:type [ <NucleicAcidPart> ] ?
       ) ;
       rdf:type [ <Trans-regulatoryElement> ] ?
    )
}

<Transcription> CLOSED {
    (  $<Transcription_tes> (  &<Biosynthesis_tes> ;
          rdf:type [ <Biosynthesis> ] ?
       ) ;
       rdf:type [ <Transcription> ] ?
    )
}

<TransferRNAtRNA> CLOSED {
    (  $<TransferRNAtRNA_tes> (  &<Non-proteinCodingRNAncRNA_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNA> ] ?
       ) ;
       rdf:type [ <TransferRNAtRNA> ] ?
    )
}

<TransferRNAtRNAGene> CLOSED {
    (  $<TransferRNAtRNAGene_tes> (  &<Non-proteinCodingRNAncRNAGene_tes> ;
          rdf:type [ <Non-proteinCodingRNAncRNAGene> ] ?
       ) ;
       rdf:type [ <TransferRNAtRNAGene> ] ?
    )
}

<Translation> CLOSED {
    (  $<Translation_tes> (  &<Biosynthesis_tes> ;
          rdf:type [ <Biosynthesis> ] ?
       ) ;
       rdf:type [ <Translation> ] ?
    )
}

<Transporting>  (
    CLOSED {
       (  $<Transporting_tes> (  &<Interacting_tes> ;
             rdf:type [ <Interacting> ] ?
          ) ;
          rdf:type [ <Transporting> ] ?
       )
    } OR @<ChemicalTransport>
)

<TreeDiagram>  (
    CLOSED {
       (  $<TreeDiagram_tes> (  &<DirectedAcyclicGraph_tes> ;
             rdf:type [ <DirectedAcyclicGraph> ] ?
          ) ;
          rdf:type [ <TreeDiagram> ] ?
       )
    } OR @<Dendrogram>
)

<Treemap> CLOSED {
    (  $<Treemap_tes> (  &<MereologicalChart_tes> ;
          rdf:type [ <MereologicalChart> ] ?
       ) ;
       rdf:type [ <Treemap> ] ?
    )
}

<TrendLine>  (
    CLOSED {
       (  $<TrendLine_tes> (  &<StatisticalGraphLine_tes> ;
             rdf:type [ <StatisticalGraphLine> ] ?
          ) ;
          rdf:type [ <TrendLine> ] ?
       )
    } OR @<DecreasingLine> OR @<IncreasingLine> OR @<PlateauLine>
)

<Triangle> CLOSED {
    (  $<Triangle_tes> (  &<Polygon_tes> ;
          rdf:type [ <Polygon> ] ?
       ) ;
       rdf:type [ <Triangle> ] ?
    )
}

<TripleBond> CLOSED {
    (  $<TripleBond_tes> (  &<CovalentBond_tes> ;
          rdf:type [ <CovalentBond> ] ?
       ) ;
       rdf:type [ <TripleBond> ] ?
    )
}

<True> CLOSED {
    (  $<True_tes> (  &<TruthValue_tes> ;
          rdf:type [ <TruthValue> ] ?
       ) ;
       rdf:type [ <True> ] ?
    )
}

<TruthValue>  (
    CLOSED {
       (  $<TruthValue_tes> (  &<InformationalQuality_tes> ;
             rdf:type [ <InformationalQuality> ] ?
          ) ;
          rdf:type [ <TruthValue> ] ?
       )
    } OR @<False> OR @<True>
)

<TungstenAtom> CLOSED {
    (  $<TungstenAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <TungstenAtom> ] ?
    )
}

<UncertaintyValue> CLOSED {
    (  $<UncertaintyValue_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <UncertaintyValue> ] ?
    )
}

<Uncharged> CLOSED {
    (  $<Uncharged_tes> (  &<ChargeQuality_tes> ;
          rdf:type [ <ChargeQuality> ] ?
       ) ;
       rdf:type [ <Uncharged> ] ?
    )
}

<UndergraduateStudentAdvisorRole> CLOSED {
    (  $<UndergraduateStudentAdvisorRole_tes> (  &<StudentAdvisorRole_tes> ;
          rdf:type [ <StudentAdvisorRole> ] ?
       ) ;
       rdf:type [ <UndergraduateStudentAdvisorRole> ] ?
    )
}

<UnicellularOrganism>  (
    CLOSED {
       (  $<UnicellularOrganism_tes> (  &<Cell_tes> ;
             rdf:type [ <Cell> ] ?
          ) ;
          rdf:type [ <UnicellularOrganism> ] ?
       )
    } OR @<E.coli>
)

<UnigeneCluster> CLOSED {
    (  $<UnigeneCluster_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ?
       ) ;
       rdf:type [ <UnigeneCluster> ] ?
    )
}

<Union> CLOSED {
    (  $<Union_tes> (  &<List_tes> ;
          rdf:type [ <List> ] ?
       ) ;
       rdf:type [ <Union> ] ?
    )
}

<UniqueCell> CLOSED {
    (  $<UniqueCell_tes> (  &<Cellinformational_tes> ;
          rdf:type [ <Cellinformational> ] ?
       ) ;
       rdf:type [ <UniqueCell> ] ?
    )
}

<UniqueIdentifier> CLOSED {
    (  $<UniqueIdentifier_tes> (  &<Identifier_tes> ;
          rdf:type [ <Identifier> ] ? ;
          <isUniqueIdentifierFor> @<Entity> ?
       ) ;
       rdf:type [ <UniqueIdentifier> ] ?
    )
}

<UnitOfMeasurement> CLOSED {
    (  $<UnitOfMeasurement_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ? ;
          <isUnitOf> @<Entity> ?
       ) ;
       rdf:type [ <UnitOfMeasurement> ] ?
    )
}

<University> CLOSED {
    (  $<University_tes> (  &<AcademicOrganization_tes> ;
          rdf:type [ <AcademicOrganization> ] ?
       ) ;
       rdf:type [ <University> ] ?
    )
}

<Unsupported> CLOSED {
    (  $<Unsupported_tes> (  &<ExistenceQuality_tes> ;
          rdf:type [ <ExistenceQuality> ] ?
       ) ;
       rdf:type [ <Unsupported> ] ?
    )
}

<UnunhexiumAtom> CLOSED {
    (  $<UnunhexiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UnunhexiumAtom> ] ?
    )
}

<UnunoctiumAtom> CLOSED {
    (  $<UnunoctiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UnunoctiumAtom> ] ?
    )
}

<UnunpentiumAtom> CLOSED {
    (  $<UnunpentiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UnunpentiumAtom> ] ?
    )
}

<UnunquadiumAtom> CLOSED {
    (  $<UnunquadiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UnunquadiumAtom> ] ?
    )
}

<UnunseptiumAtom> CLOSED {
    (  $<UnunseptiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UnunseptiumAtom> ] ?
    )
}

<UnutriumAtom> CLOSED {
    (  $<UnutriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UnutriumAtom> ] ?
    )
}

<UraniumAtom> CLOSED {
    (  $<UraniumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <UraniumAtom> ] ?
    )
}

<URL> CLOSED {
    (  $<URL_tes> (  &<InformationalEntityIdentifier_tes> ;
          rdf:type [ <InformationalEntityIdentifier> ] ?
       ) ;
       rdf:type [ <URL> ] ?
    )
}

<UserAccount> CLOSED {
    (  $<UserAccount_tes> (  &<ComputationalEntity_tes> ;
          rdf:type [ <ComputationalEntity> ] ?
       ) ;
       rdf:type [ <UserAccount> ] ?
    )
}

<ValidArgument>  (
    CLOSED {
       (  $<ValidArgument_tes> (  &<Argument_tes> ;
             rdf:type [ <Argument> ] ?
          ) ;
          rdf:type [ <ValidArgument> ] ?
       )
    } OR @<SoundArgument>
)

<ValidatedGene> CLOSED {
    (  $<ValidatedGene_tes> (  &<Gene_tes> ;
          rdf:type [ <Gene> ] ?
       ) ;
       rdf:type [ <ValidatedGene> ] ?
    )
}

<ValueAxis>  (
    CLOSED {
       (  $<ValueAxis_tes> (  &<Axis_tes> ;
             rdf:type [ <Axis> ] ?
          ) ;
          rdf:type [ <ValueAxis> ] ?
       )
    } OR @<BottomValueAxis> OR @<CartesianCoordinateAxis> OR @<LeftValueAxis> OR @<RightValueAxis> OR @<ScaledValueAxis> OR
    @<TopValueAxis>
)

<VanadiumAtom> CLOSED {
    (  $<VanadiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <VanadiumAtom> ] ?
    )
}

<VanDerWaalsInteraction> CLOSED {
    (  $<VanDerWaalsInteraction_tes> (  &<WeakSubmolecularComponent_tes> ;
          rdf:type [ <WeakSubmolecularComponent> ] ?
       ) ;
       rdf:type [ <VanDerWaalsInteraction> ] ?
    )
}

<Variable>  (
    CLOSED {
       (  $<Variable_tes> (  &<MathematicalEntity_tes> ;
             rdf:type [ <MathematicalEntity> ] ?
          ) ;
          rdf:type [ <Variable> ] ?
       )
    } OR @<ControlVariable> OR @<DependentVariable> OR @<IndependentVariable>
)

<VariantRole>  (
    CLOSED {
       (  $<VariantRole_tes> (  &<ComparativeRole_tes> ;
             rdf:type [ <ComparativeRole> ] ?
          ) ;
          rdf:type [ <VariantRole> ] ?
       )
    } OR @<SequenceVariantRole>
)

<Vector> CLOSED {
    (  $<Vector_tes> (  &<RankNonzeroTensor_tes> ;
          rdf:type [ <RankNonzeroTensor> ] ?
       ) ;
       rdf:type [ <Vector> ] ?
    )
}

<VectorLine>  (
    CLOSED {
       (  $<VectorLine_tes> (  &<Ray_tes> ;
             rdf:type [ <Ray> ] ?
          ) ;
          rdf:type [ <VectorLine> ] ?
       )
    } OR @<SurfaceNormal> OR @<VertexNormal>
)

<VectorSpace> CLOSED {
    (  $<VectorSpace_tes> (  &<MathematicalEntity_tes> ;
          rdf:type [ <MathematicalEntity> ] ?
       ) ;
       rdf:type [ <VectorSpace> ] ?
    )
}

<Velocity> CLOSED {
    (  $<Velocity_tes> (  &<Speed_tes> ;
          rdf:type [ <Speed> ] ?
       ) ;
       rdf:type [ <Velocity> ] ?
    )
}

<VennDiagram> CLOSED {
    (  $<VennDiagram_tes> (  &<Chart_tes> ;
          rdf:type [ <Chart> ] ?
       ) ;
       rdf:type [ <VennDiagram> ] ?
    )
}

<VerbalLanguage> CLOSED {
    (  $<VerbalLanguage_tes> (  &<Language_tes> ;
          rdf:type [ <Language> ] ?
       ) ;
       rdf:type [ <VerbalLanguage> ] ?
    )
}

<VerbalLanguageEntity>  (
    CLOSED {
       (  $<VerbalLanguageEntity_tes> (  &<LanguageEntity_tes> ;
             rdf:type [ <LanguageEntity> ] ?
          ) ;
          rdf:type [ <VerbalLanguageEntity> ] ?
       )
    } OR @<Consonant> OR @<Syllable> OR @<Vowel>
)

<VersionedDataset> CLOSED {
    (  $<VersionedDataset_tes> (  &<Dataset_tes> ;
          rdf:type [ <Dataset> ] ?
       ) ;
       rdf:type [ <VersionedDataset> ] ?
    )
}

<VersionedRecord> CLOSED {
    (  $<VersionedRecord_tes> (  &<Record_tes> ;
          rdf:type [ <Record> ] ?
       ) ;
       rdf:type [ <VersionedRecord> ] ?
    )
}

<VersionLabel>  (
    CLOSED {
       (  $<VersionLabel_tes> (  &<Identifier_tes> ;
             rdf:type [ <Identifier> ] ?
          ) ;
          rdf:type [ <VersionLabel> ] ?
       )
    } OR @<DocumentVersion> OR @<SoftwareVersionLabel>
)

<VertexNormal> CLOSED {
    (  $<VertexNormal_tes> (  &<VectorLine_tes> ;
          rdf:type [ <VectorLine> ] ?
       ) ;
       rdf:type [ <VertexNormal> ] ?
    )
}

<VerticalBarGraph> CLOSED {
    (  $<VerticalBarGraph_tes> (  &<BarGraph_tes> ;
          rdf:type [ <BarGraph> ] ?
       ) ;
       rdf:type [ <VerticalBarGraph> ] ?
    )
}

<VerticalLine> CLOSED {
    (  $<VerticalLine_tes> (  &<PositionallyOrientedLine_tes> ;
          rdf:type [ <PositionallyOrientedLine> ] ?
       ) ;
       rdf:type [ <VerticalLine> ] ?
    )
}

<VeryDissatisfiedQualifier> CLOSED {
    (  $<VeryDissatisfiedQualifier_tes> (  &<SatisfactionQualifier_tes> ;
          rdf:type [ <SatisfactionQualifier> ] ?
       ) ;
       rdf:type [ <VeryDissatisfiedQualifier> ] ?
    )
}

<VeryGoodQuality> CLOSED {
    (  $<VeryGoodQuality_tes> (  &<QualityDescriptor_tes> ;
          rdf:type [ <QualityDescriptor> ] ?
       ) ;
       rdf:type [ <VeryGoodQuality> ] ?
    )
}

<VeryPoorQuality> CLOSED {
    (  $<VeryPoorQuality_tes> (  &<QualityDescriptor_tes> ;
          rdf:type [ <QualityDescriptor> ] ?
       ) ;
       rdf:type [ <VeryPoorQuality> ] ?
    )
}

<Viroid> CLOSED {
    (  $<Viroid_tes> (  &<Non-cellularOrganism_tes> ;
          rdf:type [ <Non-cellularOrganism> ] ?
       ) ;
       rdf:type [ <Viroid> ] ?
    )
}

<Virtual> CLOSED {
    (  $<Virtual_tes> (  &<ExistenceQuality_tes> ;
          rdf:type [ <ExistenceQuality> ] ?
       ) ;
       rdf:type [ <Virtual> ] ?
    )
}

<Virus> CLOSED {
    (  $<Virus_tes> (  &<Non-cellularOrganism_tes> ;
          rdf:type [ <Non-cellularOrganism> ] ?
       ) ;
       rdf:type [ <Virus> ] ?
    )
}

<VisualLanguageEntity> CLOSED {
    (  $<VisualLanguageEntity_tes> (  &<LanguageEntity_tes> ;
          rdf:type [ <LanguageEntity> ] ?
       ) ;
       rdf:type [ <VisualLanguageEntity> ] ?
    )
}

<Vocabulary>  (
    CLOSED {
       (  $<Vocabulary_tes> (  &<FormalSpecification_tes> ;
             rdf:type [ <FormalSpecification> ] ?
          ) ;
          rdf:type [ <Vocabulary> ] ?
       )
    } OR @<Terminology>
)

<Volume> CLOSED {
    (  $<Volume_tes> (  &<3DExtentQuantity_tes> ;
          rdf:type [ <3DExtentQuantity> ] ?
       ) ;
       rdf:type [ <Volume> ] ?
    )
}

<VolumeNumber> CLOSED {
    (  $<VolumeNumber_tes> (  &<Count_tes> ;
          rdf:type [ <Count> ] ?
       ) ;
       rdf:type [ <VolumeNumber> ] ?
    )
}

<Vowel> CLOSED {
    (  $<Vowel_tes> (  &<VerbalLanguageEntity_tes> ;
          rdf:type [ <VerbalLanguageEntity> ] ?
       ) ;
       rdf:type [ <Vowel> ] ?
    )
}

<Wave>  (
    CLOSED {
       (  $<Wave_tes> (  &<HeterogeneousSubstance_tes> ;
             rdf:type [ <HeterogeneousSubstance> ] ?
          ) ;
          rdf:type [ <Wave> ] ?
       )
    } OR @<SoundWave>
)

<Weak> CLOSED {
    (  $<Weak_tes> (  &<Intensity_tes> ;
          rdf:type [ <Intensity> ] ?
       ) ;
       rdf:type [ <Weak> ] ?
    )
}

<WeakChemicalSalt> CLOSED {
    (  $<WeakChemicalSalt_tes> (  &<ChemicalSalt_tes> ;
          rdf:type [ <ChemicalSalt> ] ?
       ) ;
       rdf:type [ <WeakChemicalSalt> ] ?
    )
}

<WeakSubmolecularComponent>  (
    CLOSED {
       (  $<WeakSubmolecularComponent_tes> (  &<SubmolecularEntity_tes> ;
             rdf:type [ <SubmolecularEntity> ] ?
          ) ;
          rdf:type [ <WeakSubmolecularComponent> ] ?
       )
    } OR @<BasePair> OR @<BaseStack> OR @<Dipole-dipoleInteraction> OR @<HydrogenBond> OR @<IonicInteraction> OR
    @<VanDerWaalsInteraction>
)

<WebPage> CLOSED {
    (  $<WebPage_tes> (  &<Document_tes> ;
          rdf:type [ <Document> ] ?
       ) ;
       rdf:type [ <WebPage> ] ?
    )
}

<WebService>  (
    CLOSED {
       (  $<WebService_tes> (  &<SoftwareApplication_tes> ;
             rdf:type [ <SoftwareApplication> ] ?
          ) ;
          rdf:type [ <WebService> ] ?
       )
    } OR @<RESTWebService> OR @<SOAPWebService> OR @<SemanticWebService>
)

<WebServiceInvocation>  (
    CLOSED {
       (  $<WebServiceInvocation_tes> (  &<SofwareExecution_tes> ;
             rdf:type [ <SofwareExecution> ] ?
          ) ;
          rdf:type [ <WebServiceInvocation> ] ?
       )
    } OR @<SADIWebServiceInvocation>
)

<Website> CLOSED {
    (  $<Website_tes> (  &<CollectionOfDocuments_tes> ;
          rdf:type [ <CollectionOfDocuments> ] ?
       ) ;
       rdf:type [ <Website> ] ?
    )
}

<Week> CLOSED {
    (  $<Week_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Week> ] ?
    )
}

<Width> CLOSED {
    (  $<Width_tes> (  &<1DExtentQuantity_tes> ;
          rdf:type [ <1DExtentQuantity> ] ?
       ) ;
       rdf:type [ <Width> ] ?
    )
}

<Wonder> CLOSED {
    (  $<Wonder_tes> (  &<Surprise_tes> ;
          rdf:type [ <Surprise> ] ?
       ) ;
       rdf:type [ <Wonder> ] ?
    )
}

<Word> CLOSED {
    (  $<Word_tes> (  &<LanguageEntity_tes> ;
          rdf:type [ <LanguageEntity> ] ?
       ) ;
       rdf:type [ <Word> ] ?
    )
}

<WordEndPosition> CLOSED {
    (  $<WordEndPosition_tes> (  &<TextSpanEndPosition_tes> ;
          rdf:type [ <TextSpanEndPosition> ] ?
       ) ;
       rdf:type [ <WordEndPosition> ] ?
    )
}

<WordStartPosition> CLOSED {
    (  $<WordStartPosition_tes> (  &<TextSpanStartPosition_tes> ;
          rdf:type [ <TextSpanStartPosition> ] ?
       ) ;
       rdf:type [ <WordStartPosition> ] ?
    )
}

<WordTree> CLOSED {
    (  $<WordTree_tes> (  &<TextualChart_tes> ;
          rdf:type [ <TextualChart> ] ?
       ) ;
       rdf:type [ <WordTree> ] ?
    )
}

<Workflow> CLOSED {
    (  $<Workflow_tes> (  &<Algorithm_tes> ;
          rdf:type [ <Algorithm> ] ?
       ) ;
       rdf:type [ <Workflow> ] ?
    )
}

<WorkPhoneNumber> CLOSED {
    (  $<WorkPhoneNumber_tes> (  &<TelephoneNumber_tes> ;
          rdf:type [ <TelephoneNumber> ] ?
       ) ;
       rdf:type [ <WorkPhoneNumber> ] ?
    )
}

<Worm> CLOSED {
    (  $<Worm_tes> (  &<MulticellularOrganism_tes> ;
          rdf:type [ <MulticellularOrganism> ] ?
       ) ;
       rdf:type [ <Worm> ] ?
    )
}

<Worry>  (
    CLOSED {
       (  $<Worry_tes> (  &<Apprehension_tes> ;
             rdf:type [ <Apprehension> ] ?
          ) ;
          rdf:type [ <Worry> ] ?
       )
    } OR @<Regret>
)

<Written>  (
    CLOSED {
       (  $<Written_tes> (  &<TextQuality_tes> ;
             rdf:type [ <TextQuality> ] ?
          ) ;
          rdf:type [ <Written> ] ?
       )
    } OR @<Draft> OR @<Finalized> OR @<Reviewed>
)

<WrittenLanguage> CLOSED {
    (  $<WrittenLanguage_tes> (  &<Language_tes> ;
          rdf:type [ <Language> ] ?
       ) ;
       rdf:type [ <WrittenLanguage> ] ?
    )
}

<X-axis> CLOSED {
    (  $<X-axis_tes> (  &<CartesianCoordinateAxis_tes> ;
          rdf:type [ <CartesianCoordinateAxis> ] ?
       ) ;
       rdf:type [ <X-axis> ] ?
    )
}

<XCartesianCoordinate> CLOSED {
    (  $<XCartesianCoordinate_tes> (  &<CartesianCoordinate_tes> ;
          rdf:type [ <CartesianCoordinate> ] ?
       ) ;
       rdf:type [ <XCartesianCoordinate> ] ?
    )
}

<XenonAtom> CLOSED {
    (  $<XenonAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <XenonAtom> ] ?
    )
}

<Y-axis> CLOSED {
    (  $<Y-axis_tes> (  &<CartesianCoordinateAxis_tes> ;
          rdf:type [ <CartesianCoordinateAxis> ] ?
       ) ;
       rdf:type [ <Y-axis> ] ?
    )
}

<YCartesianCoordinate> CLOSED {
    (  $<YCartesianCoordinate_tes> (  &<CartesianCoordinate_tes> ;
          rdf:type [ <CartesianCoordinate> ] ?
       ) ;
       rdf:type [ <YCartesianCoordinate> ] ?
    )
}

<Year> CLOSED {
    (  $<Year_tes> (  &<TimeInterval_tes> ;
          rdf:type [ <TimeInterval> ] ?
       ) ;
       rdf:type [ <Year> ] ?
    )
}

<YtterbiumAtom> CLOSED {
    (  $<YtterbiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <YtterbiumAtom> ] ?
    )
}

<YttriumAtom> CLOSED {
    (  $<YttriumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <YttriumAtom> ] ?
    )
}

<Z-axis> CLOSED {
    (  $<Z-axis_tes> (  &<CartesianCoordinateAxis_tes> ;
          rdf:type [ <CartesianCoordinateAxis> ] ?
       ) ;
       rdf:type [ <Z-axis> ] ?
    )
}

<ZCartesianCoordinate> CLOSED {
    (  $<ZCartesianCoordinate_tes> (  &<CartesianCoordinate_tes> ;
          rdf:type [ <CartesianCoordinate> ] ?
       ) ;
       rdf:type [ <ZCartesianCoordinate> ] ?
    )
}

<ZincAtom> CLOSED {
    (  $<ZincAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ZincAtom> ] ?
    )
}

<ZirconiumAtom> CLOSED {
    (  $<ZirconiumAtom_tes> (  &<Atom_tes> ;
          rdf:type [ <Atom> ] ?
       ) ;
       rdf:type [ <ZirconiumAtom> ] ?
    )
}

<Zygosity>  (
    CLOSED {
       (  $<Zygosity_tes> (  &<BiologicalQuality_tes> ;
             rdf:type [ <BiologicalQuality> ] ?
          ) ;
          rdf:type [ <Zygosity> ] ?
       )
    } OR @<Hemizygous> OR @<Heterozygous> OR @<Homozygous> OR @<Nullizygous>
)



