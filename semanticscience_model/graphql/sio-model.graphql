type 1DCartesianPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type 1DExtentQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type 2DCartesianPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type 2DExtentQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type 3%27SpliceSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type 3%27UntranslatedRegion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type 3DCartesianCoordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type 3DCartesianPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type 3DExtentQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type 3dStructureModel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type 5%27SpliceSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type 5%27UntranslatedRegion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Abnormal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Aborted
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type AbstractRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type AbstractSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Academic
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AcademicDepartment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AcademicOrganization
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AcademicRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Acid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Acid-baseReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type AcknowledgementsSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ACollectionOfDuplicates
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type ACollectionOfReplicates
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type ActiniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type ActionSpecification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Activator
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ActivatorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ActiveIngredient
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ActiveMovement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ActiveSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ActiveTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type AdditionReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Address
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type AdministrativeRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Affection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Affiliation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Age
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type AggregatedCarbonNanorods
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Agreement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type AgreementQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Algorithm
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ALittleQuantifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Alive
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Allele
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AllostericSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Allotrope
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AlphaHelix
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Altitude
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type AluminiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Always
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type AmericiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type AminoAcid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AminoAcidPolymer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AminoAcidPolymerSubmolecule
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AminoAcidResidue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AmorphousCarbon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Anabolism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Analyte
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AnatomicalEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Anger
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Angst
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Anion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Annotation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Annoyance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Answer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Antibody
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Antigen
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AntimonyAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type AntiportEnabledSecondaryActiveTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Antonym
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Anxiety
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ApartmentNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Apathy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Apprehension
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Arc
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Area
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type ArgonAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Argument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type AromaticBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AromaticRing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Arousal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ArrowedLineSegment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ArsenicAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Article
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type AspectRatio
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Assay
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type AssertionalQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type AssertionOvopub
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Association
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type AstatineAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Atom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Attribute
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
  }

type AudioRecording
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type AuthorContributionSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type AuthorList
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type AuthorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type AuthorSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Awe
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Axis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Bar
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BarGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BariumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Base
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BasePair
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BaseStack
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Behaviour
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Belief
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Bent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type BerkeliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type BerylliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type BetaStrand
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BibliographySection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Bill
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BinaryCompound
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BinaryScale
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BindingSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BiochemicalActivation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BiochemicalInhibition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BiochemicalPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BiochemicalReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BioinformaticData
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Biologic
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BiologicalData
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BiologicalEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BiologicalFluid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BiologicalQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type BiologicalReproduction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BiologicalSex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type BiomolecularStructureDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Biopolymer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BiopolymerSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Biosynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Birthing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BismuthAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type BlockHistogram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Blog
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BohriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Boldness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Book
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Booklet
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BookSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BookSeries
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type BookVolume
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Boredom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BoronAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type BottomValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Boxplot
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BrandName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Brief
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type BromineAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type BrownianMotion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type BubbleChart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Buffer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type BufferRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type CadmiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CaesiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CalciumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CaliforniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Cancelled
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Capability
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type Carbohydrate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CarbohydrateResidue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CarbonAllotrope
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CarbonAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CarbonNanofoam
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CartesianCoordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type CartesianCoordinateAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CartesianCoordinateSystem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Catabolism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Catalog
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type Catalyst
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CatalyticRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type CatalyzedReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Category
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type CategoryAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Cation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CationPiInteraction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Cell
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Cellinformational
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CellLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CellularOrganism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CellularPhoneNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type CellularQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type CenterOfMass
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type CentralityMeasure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type CentrifugationPellet
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CentrifugationSubstance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Century
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type CeriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Chaoite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Chapter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Character
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type CharacterPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type Charged
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ChargeQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Chart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Chemical-diseaseAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Chemical-geneAssocation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Chemical-pathwayAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ChemicalComplex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalData
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalDegradationPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ChemicalDestruction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChemicalEffect
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChemicalElement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalEntityRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ChemicalExposure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChemicalFunctionalGroup
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type ChemicalInteraction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChemicalNotation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ChemicalQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ChemicalReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChemicalReactionPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ChemicalSalt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalStructure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ChemicalSubstance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ChemicalSubstanceRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ChemicalSynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChemicalSynthesisPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ChemicalTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ChlorineAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type ChromiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Chromosome
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CircularlyHelical
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Circumference
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type CisRegulatoryElement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Citation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type City
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Class
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Clause
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ClinicalTrial
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ClosedInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Co-enzymeRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Co-substrateRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type CobaltAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CodingFrameOffset
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type CodingSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type CofactorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Collection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type CollectionItem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type CollectionOf3dMolecularStructureModels
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type CollectionOfDocuments
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type CollectionOfPoints
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type CollectionOvopub
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Collective
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Column
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Comment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type CommonName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Communicating
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type CommunicationDevice
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Community
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ComparativeRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Comparing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type CompleteCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Completed
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type CompletelyQuantifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type CompositionalQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ComputationalEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Concentration
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Concept
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Conclusion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ConferenceProceedings
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Conjunctionand
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Consensus
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Consonant
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ContainmentQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Contempt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Contentment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ControlGroup
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ControlledObservationalCohortStudy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ControlRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ControlVariable
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Conversing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Coordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type CoordinateSystem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type CoperniciumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CopperAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type CopyNumberVariation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type CopyrightSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Corporation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Correlation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type CorrespondenceSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Count
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Country
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CovalentBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Creating
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Criterion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type CrystalStructure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Curiosity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type CuriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Curvature
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Curve
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Curved
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type CurveSegment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type CylindricalCoordinateSystem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DarmstadtiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type DataAnalysis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Database
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DatabaseColumn
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DatabaseCross-reference
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type DatabaseEntry
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DatabaseKey
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DatabaseRow
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DatabaseTable
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DataCollection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DataCollectionDevice
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DataItem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DataPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DataSeries
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Dataset
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasDataItem: Entity
  }

type DataStorageDevice
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DataTransformation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DateOfDatabaseSubmission
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type DateOfIssue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type Day
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Dead
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type DecimalScale
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DecompositionReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Decreased
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type DecreasedChemicalDestruction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedDurationOfProcessFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedFrequencyOfProcessFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedMolecularDegradationFromDecreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedMolecularDegradationFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedMolecularProductionFromDecreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedMolecularProductionFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedObjectConsumptionFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedObjectProductionFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreasedSpatialExtentOfProcessFromDecreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DecreaseInNumberOfObjectsProduced
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type DecreasingLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DeductiveArgument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DefaultParameter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Definition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DeletionVariantRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Dendrogram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Density
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type DentistRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type DeoxyribonucleicAcid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DeoxyribonucleicAcidPrimer
  {
  }

type DeoxyribonucleicAcidSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type DeoxyribonucleicAcidTemplate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DeoxyribonucleotideResidue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DepartmentChairRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type DependentVariable
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Depression
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Depth
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Description
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Descriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Design
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DesignSpecification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Desire
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Despair
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Destroying
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Device
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Diagnosis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DiagnosticOpinion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DiagnosticTest
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Diamond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Diary
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Diastereomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DifferenceInNumberOfObjectsProduced
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type DifferentialDiagnosis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DifferentialEquation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type DifferentialGeneExpressionRatio
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Diffusion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DiffusionEquation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type DimensionalQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type DimensionlessQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Dipole-dipoleInteraction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DirectedAcyclicGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DirectedLineSegment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Disagreement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Disappointment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Discouragement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DiscussionSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Disease
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type DisGeNETDiseaseSpecificity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type DisGeNETPleiotropyIndex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Disgust
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Disjunctionor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Disordered
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type DisplacementReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Disposition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
    isDispositionOf: Entity
  }

type DissatisfiedQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type DisulfideBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DnaGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Doctor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DoctorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Document
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DocumentComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DocumentSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type DocumentTitle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type DocumentVersion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Dose
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type DoubleArrowedLineSegment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DoubleBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DoubleDisplacementReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DoubleStrandedDNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DoubleStrandedNucleicAcid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DoubleStrandedRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Draft
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Dread
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DropLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Drug
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DrugDrugInteraction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type DrugRegulatoryAuthority
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type DubniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Duplicate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type DuplicateRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Dying
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Dysfunction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type DysprosiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type E.coli
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Ecstasy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Edge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type EditedPublication
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type EditionNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type EditorReviewed
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type EffectiveDose
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type EinsteiniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type ElectronicStructure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ElectrophilicAdditionReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Email
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type EmailAddress
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Embarassment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Emotion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Empty
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type EmptySet
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Enantiomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type EndDate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type Endpoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type EndPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type EndTime
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type Entity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
  }

type Environment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Envy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Enzyme
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Epimer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type EpimerAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Equation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ErbiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type EthnicGroup
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Ethnicity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Euphoria
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type EuropiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type EvaluationRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Evidence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type EvolutionaryLineage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Evolving
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ExactCross-reference
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ExcellentQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Excerpt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Excitement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ExclusionCriterion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ExclusiveDisjunctionxor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ExistenceQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Exon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ExpectedValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Experiment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ExperimentalProtocol
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type False
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Family
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type FamilyHistory
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Fatal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type FaxNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Fear
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Female
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type FermiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Fictional
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Figure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type FigurePart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type File
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Finalized
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type FirstName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Fitness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Flowchart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type FluorineAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type ForeignDatabaseKey
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type FormalSpecification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type FranciumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type FreeRadicalAddition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Frequency
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Frustration
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Full
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type FullAgreement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type FullDisagreement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Fullerene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Function
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
    isFunctionOf: Entity
  }

type FunctionalRnaCodingGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type FunctionalSpecification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type FusionGene-diseaseAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type GadoliniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type GalliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type GanttChart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Gene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Gene-diseaseAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithAlteredGeneExpression
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithCausalMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithChromosomalRearrangement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithGeneticVariation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithGenomicAlterations
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithGermlineCausalMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithGermlineModifyingMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithModifyingMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithPost-translationalModification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithSomaticCausalMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithSomaticModifyingMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseAssociationLinkedWithSusceptibilityMutation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Gene-diseaseBiomarkerAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type GeneComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeneEnhancer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeneExpressionValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type GenePromoter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GenerationNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type GeneRegulatoryComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GenericName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type GeneSymbol
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type GeneticData
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeneticPolymorphism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Genome
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GenomicSequenceVariant
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Genotype
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type GeographicHeatmap
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeographicImage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeographicPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type GeographicRegion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeolegalRegion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeometricEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GeopoliticalRegion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GermaniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Gesturing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type GlassyCarbon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GlobalMaximalStationaryPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GlobalMinimalStationaryPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GoldAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type GoodQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type GraduateStudentAdvisorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Graphite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type GraphTitle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Gratitude
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Grief
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Guilt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type HafniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Haplotype
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Happiness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type HardDiskDrive
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type HassiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Hate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Healthy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Heatmap
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Height
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Helicity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type HeliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Hemizygous
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Hermaphrodite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type HeterocyclicRing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Heterogeneous
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type HeterogeneousSubstance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Heterozygous
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type HgvsNotation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Histogram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type History
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Hole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type HolmiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type HomePhoneNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type HomocyclicRing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Homogeneous
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type HomogeneousSubstance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Homonym
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Homozygous
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Honor%27sThesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Hope
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type HorizontalBarGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type HorizontalLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Host
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Hostility
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type HostRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Hour
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Human
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type HumanPopulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Humiliation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Hunger
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Hurt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type HydrogenAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type HydrogenBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Hypernym
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Hyponym
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Hypothesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Hypothetical
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Hysteria
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Idea
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Identifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Image
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Implies-%3E
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type InactiveIngredient
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type InCHINotation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type InclusionCriterion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Increased
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type IncreasedChemicalDestruction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedDurationOfProcessFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedFrequencyOfProcessFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedMolecularDegradationFromDecreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedMolecularDegradationFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedMolecularProductionFromDecreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedMolecularProductionFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedObjectConsumptionFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedObjectProductionFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreasedSpatialExtentOfProcessFromIncreasedRegulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IncreaseInNumberOfObjectsProduced
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type IncreasingLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Indecision
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IndependentVariable
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Indifference
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IndiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type InductiveArgument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type InfiniteLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type InformationalEntityIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type InformationalQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type InformationContentEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type InformationDecoding
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type InformationEncoding
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type InformationMaintenance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type InformationProcessing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type InformationTranslation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Ingredient
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Inhibitor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type InhibitorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type InorganicReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type InsertionVariantRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Institute
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type IntegerScale
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Intensity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Intent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Interacting
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Interest
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Intersection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Intersex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Interval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type InterventionGroup
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type InterventionStudy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type IntroductionSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Intron
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type InvalidArgument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Investigation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type InvestigationalRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type IodineAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Ion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type IonicCompound
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type IonicInteraction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Ionsdaleite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type IPNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type IridiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type IronAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Irritability
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Isomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type IsomerizationReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Issue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Jealousy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Journal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type Joy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Justification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Keyword
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type KryptonAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Label
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Language
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type LanguageEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type LanguageLabel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type LanthanumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type LastName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Latitude
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type LawrenciumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type LeadAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Learning
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Left-handedHelical
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type LeftClosedInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type LeftOpenInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type LeftValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LegalDocument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type LegalName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Legend
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Legislation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Length
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type LengthOfPerimeter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Letter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type LifeStatus
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Ligand
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Likelihood
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Line
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Line-barGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LinearPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type LinearValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LineGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LineSegment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Lipid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LipidResidue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LiquidSolution
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LiquidSolutionComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type List
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ListItem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type LiteratureCuration
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type LithiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Loathing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type LocalMaximumStationaryPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LocalMinimumStationaryPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Locomotion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type LogarithmicValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type LogicalOperator
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type LogLikelihood
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Loneliness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Longitude
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type Love
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type LowBarrierHydrogenBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Lust
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type LutetiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Magazine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type MagnesiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type MaintenanceOfDurationOfProcess
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MaintenanceOfFrequencyOfProcess
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MaintenanceOfLevelOfObjectConsumption
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MaintenanceOfQuantityOfObjectProduction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MaintenanceOfSpatialExtentOfProcess
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MajorTickMark
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MajorVersionNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Male
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ManganeseAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Manual
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Manuscript
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Map
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Mass
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type MassSpectrometer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MassSpectrometryExperiment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Master%27sThesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MaterialBoundary
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MaterialEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MaterialsAndMethodsSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MaterialsSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MaternallyTransmitted
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type MathematicalEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Matrix
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type MatrixChart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MatureMRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MaximalValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Mean
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type MeasurementScale
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MeasurementValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type Measuring
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Media
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Median
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type MedicalData
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MedicalDiagnosis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MedicalHealthRecord
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MedicalHistory
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MedicalIntervention
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MedicalPractitioner
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MedicalProcedure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MedicalReport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MedicalRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type MedicalScreening
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MeitneriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type MemberCount
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type MembraneTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MendeleviumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type MercuryAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type MereologicalChart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MereologicalQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Messenger
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MessengerRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MetabolicPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Metabolism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Metadata
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MethodsSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MicroarrayDevice
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MicroarrayExperiment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MicroarrayProbeSetIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type MicroRNAmiRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MiddleInitial
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type MiddleName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Mild
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Millennium
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type MinimalValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type MinorTickMark
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MinorVersionNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Minute
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Misery
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Mode
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Model
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Moderate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ModeratelyQuantifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Modifying
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MolecularComplex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MolecularComplexDissociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MolecularComplexFormation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MolecularEntityRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type MolecularIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type MolecularModification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MolecularOrbital
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type MolecularPocket
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MolecularRegulator
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MolecularSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MolecularStructure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MolecularStructureDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type MolecularStructureFile
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MolecularTracerRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Molecule
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MolybdemumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Monomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Monosaccharide
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Month
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Morpheme
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type MostlyQuantifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type MostOfTheTime
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Mouse
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Movement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type MovementEquation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Movie
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MRNASpliceVariant
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MulticellularOrganism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type MultipleSequenceAlignment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type MutualDisposition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
    isDispositionOf: Entity
  }

type Name
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Namespace
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NamespaceLabel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Negationnot
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Negative
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type NegativeCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type NegativeEmotion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type NegativeNucleicAcidStrand
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NeitherGoodNorPoorQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type NeitherSatisfiedOrDissatisfiedQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type NeodymiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type NeonAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type NeptuniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type NetworkDiagram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Never
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Newspaper
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type NickelAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type NiobiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type NitrogenAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type NmrDevice
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NobeliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Node
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NomimalScale
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Non-cellularOrganism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Non-polar
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Non-polarAdditionReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Non-proteinCodingRNAncRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Non-proteinCodingRNAncRNAGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NoneQuantifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type NonpolarSolvent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NonToxic
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Normal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Normality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Notation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Note
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type NotStarted
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Novel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type NucleicAcid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NucleicAcidPart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NucleicAcidSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type NucleicAcidStrand
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NucleophilicAdditionReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type NucleotideResidue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Nullizygous
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Number
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type NumberOfObjectsConsumed
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type NumberOfObjectsProduced
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type NumericLabel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type NumericScale
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Nurse
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type NurseRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Object
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Objective
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ObjectModel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ObjectQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ObjectRelationalQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type OBOOntology
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ObservationalStudy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Observing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type OccupationalRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Oligopeptide
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Ongoing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Ontology
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type OntologyDocument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type OpenInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type OpenReadingFrame
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Operon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Opinion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type OpticalIsomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type OrderedList
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type OrderedListItem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type OrdinalPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type OrdinaryDifferentialEquation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Organ
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type OrganicMolecule
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type OrganicPolymer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type OrganicReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type OrganicSubmolecule
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Organism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Organization
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Orientation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type OsmiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Osmosis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Ovopub
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type OWLOntology
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type OxygenAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type PageNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type PageRange
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type PageTotal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Pain
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PairwiseSequenceAlignment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type PalladiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Panic
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Paragraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Parameter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ParameterizedDataTransformation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ParentalTransmission
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PartialCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PartialDifferentialEquation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type PartialNegativeCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PartialPositiveCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Passion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PassiveMovement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PassiveTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Patent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PaternallyTransmitted
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Pathogen
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Pathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Patient
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PatientRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Pattern
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type PDBChainIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type PDBFile
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PDBRecordIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Peer-reviewed
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PeerReviewedArticle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Peptide
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Percentage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Percentile
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Perception
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Periodical
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type Person
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PersonalName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type PH
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type PharmaceuticalDrug
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PharmaceuticalIngredient
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PharmacodynamicPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PharmacokineticPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PhdThesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Phenotype
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PhosphorusAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Photograph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Phrase
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PhraseNetDiagram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PhysicalEntityIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type PieChart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Pity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Placebo
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Plan
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Planned
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Planning
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PlateauLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PlatinumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Pleasure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Ploidy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Plot
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PlutoniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Point
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Poison
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PoisonRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Polar
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PolarAdditionReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PolarCoordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type PolarCoordinateSystem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PolarQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PolarSolvent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PoloniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Polygon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PolygonalFace
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PolygonEdge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PolygonVertex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PolyhedralSkeleton
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PolyhedralSurface
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Polyline
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Polymer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Polypeptide
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PoorQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Population
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Position
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type PositionalIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type PositionallyOrientedLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PositionalRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Positive
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PositiveCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PositiveEmotion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PositiveNucleicAcidStrand
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Post-translationalModification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PostalCode
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type PotassiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type PraseodymiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Pre-mRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Predicted
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PredictedGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Predicting
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PreferredName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Premise
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Pride
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PrimaryActiveTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type PrimaryCategoryAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PrimaryDatabaseKey
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type PrimaryGraphTitle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type PrimaryStructureDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type PrimaryTitle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Primer
  {
  }

type ProbabilityMeasure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type ProbabilityValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Procedure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Process
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ProcessDown-regulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ProcessMaintenance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ProcessModel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProcessNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type ProcessQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ProcessStatus
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ProcessualRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ProcessUp-regulation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Product
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProductRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Professor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProfessorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Prognosis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PromethiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Proposition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ProstheticGroupRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ProtactiniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Protein
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProteinCodingGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProteinCodingSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProteinComplex
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProteinDomain
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ProteinExpressionValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type ProteinFamily
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type ProteinMediatedRegulationOfTranslation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ProteinSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Province
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Pseudogene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Publication
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type PublisherRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type PublishingRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Purpose
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Quadrilateral
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Quality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type QualityDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Quantile
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Quantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type QuantityModifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type QuaternaryStructure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Question
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Quote
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Race
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Radar
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RadioReceiver
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RadiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type RadonAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Rage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RankNonzeroTensor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Rat
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RateOfChange
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Ratio
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Ray
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RDFSOntology
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ReactantRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Reagent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ReagentRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Real
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type RealizableEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
  }

type Reason
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Reasoning
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Receptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Recipe
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Record
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type RecordIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Rectangle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RedoxReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Reference
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ReferencingCell
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ReferentCell
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Regret
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Regulating
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfBiochemicalProcess
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfCapability
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfCatalyticCapability
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfMolecularDegradation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfMolecularProduction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfMolecularQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfObjectConsumption
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfObjectProduction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfObjectQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfProcess
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfProcessDuration
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfProcessFrequency
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfProcessSpatialExtent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfTranscription
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulationOfTranslation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RegulatorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type RegulatoryAuthority
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RegulatoryPathway
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Remorse
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type ReplicaQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Replicate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ReplicateRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Report
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Representation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Reproducing
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Resentment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RESTWebService
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ResultsSection
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Reviewed
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type RevisionNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type RheniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type RhodiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type RibonucleicAcid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RibonucleicAcidSequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type RibonucleotideResidue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RibosomalRNAGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Right-handedHelical
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type RightClosedInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type RightOpenInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type RightValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Rigid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Ring
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RnaGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RnaMediatedRegulationOfTranslation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type RNATranscript
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RNATranscriptComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RoentgeniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Role
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Row
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type RubidiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type RutheniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type RutherfordiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type SADISemanticWebService
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SADIWebServiceInvocation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Sadness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SamariumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Sample
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SampleQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Sampling
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Satisfaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SatisfactionQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type SatisfiedQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Scalar
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ScaledValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ScandiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Scatterplot
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ScientificData
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ScientificName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type SeaborgiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Second
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type SecondaryActiveTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SecondaryCategoryAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SecondaryGraphTitle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type SecondaryStructureDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type SecondaryTitle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type SecondMessenger
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SecretaryRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type SeleniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type SemanticWebService
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Sentence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Sequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type SequenceAlignment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type SequenceAssembly
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type SequenceElementPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type SequenceEndPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type SequenceMotif
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type SequenceProfile
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type SequenceStartPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type SequenceVariantRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type SequenceVariationNotation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Set
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type SetItem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Severe
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Shame
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Shape
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Shock
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Shyness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Sick
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Signal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SignalTransducer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SignLanguage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type SiliconAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type SilverAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type SingleArrowedLineSegment
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SingleBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SingleDisplacementReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SingleNucleotidePolymorphism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Site
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Slide
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Slideshow
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Slope
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type SmallCytoplasmicRNAscRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SmallCytoplasmicRNAscRNAGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SmallNuclearRNAsnRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SmallNuclearRNAsnRNAGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SmallNucleolarRNAsnoRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SmallNucleolarRNAsnoRNAGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SOAPWebService
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SocialEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SocialRelation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SocialRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type SocialStructure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SodiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type SoftwareApplication
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareInterpreter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareLibrary
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareMethod
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareModule
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareProcessIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type SoftwareScript
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SoftwareVersionLabel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type SofwareExecution
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SolidStateHardDrive
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Solute
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Solvent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SomeOfTheTime
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Sorrow
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SoundArgument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type SoundWave
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SpatialBoundary
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SpatialQuantity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type SpatialRegion
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SpatialSpecification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type SpecializedMaterialEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SpecializedObject
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Specification
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type SpecificGravity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Specimen
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Speculation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Speech
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Speed
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type SphericalCoordinateSystem
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type SpliceSite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StackedBarGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StackGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Standard
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type StandardDeviation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type StandardOperatingProcedure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type StandardScore
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type StartCodon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StartDate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type StartPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StartPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type StartTime
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type State
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Statement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type StatementOfConsequence
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type StationaryPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StatisticalAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type StatisticalGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StatisticalGraphLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StatusDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Statute
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Stereoisomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StopCodon
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Straight
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Strain
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Streamgraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StreetName
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Strong
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type StrongChemicalSalt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StrongSubmolecularComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StrontiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type StructuralIsomer
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StructuralMotif
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type StructuralQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Structure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Student
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StudentAdvisorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type StudentRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Study
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type StudyDesign
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type StudyGroup
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type StudySubject
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SubcellularEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SubjectRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type SubmolecularEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Submolecule
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Substrate
  {
  }

type SubstrateRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Suffering
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Suicidal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SulfurAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Sum
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Supernatant
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SurfaceArea
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type SurfaceNormal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Surprise
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Suspended
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Syllable
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Symbol
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type SymportEnabledSecondaryActiveTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Syndrome
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Synonym
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type SynthesisReaction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type SyntheticQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type T-statistic
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type T-statisticBasedDecreasedDifferentialGeneExpression
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type T-statisticBasedIncreasedDifferentialGeneExpression
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Table
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TableOfContents
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type TagCloud
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TantalumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Target
  {
  }

type TechnetiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type TechnicalReport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Telephone
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TelephoneNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type TelevisionProgram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TelluriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type TemporalQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Tensor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type TerbiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Term
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type TerminalPoint
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Terminology
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type TermVariant
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type Territory
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Terror
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type TertiaryStructureDescriptor
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type TestRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type TextQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type TextSpan
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type TextSpanEndPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type TextSpanStartPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type TextualChart
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TextualEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ThalliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type TherapeuticGene-diseaseAssociation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type ThesisDocument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Thickness
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type ThoriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type ThuliumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type TickMark
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TimeInstant
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isStartTimeOf: Entity
    isTimeBoundaryOf: Entity
    isEndTimeOf: Entity
  }

type TimeInterval
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type TimeMeasurement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type TinAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Tissue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TitaniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Title
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
  }

type ToActivelyInteractWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToAddACovalentBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToAssemble
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToAssociate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeActivated
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeActivelyInteractedWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeAMemberOf
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeAPartOf
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeCleaved
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeCombined
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeCompared
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeConformationallyChanged
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeCovalentlyModified
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeElectronicallyModified
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeExamined
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeInhibited
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeInteractedWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeModified
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeObserved
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBePassivelyInteractedWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeRecorded
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeTranslocated
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBeTransported
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBindTo
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBoil
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToBreathe
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCauseDisease
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToChangeAppearance
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToChangeEnergetically
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToChangeMaterially
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToChangeSpatially
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToChangeTheActivationEnergy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCharacterize
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCleave
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCombine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCompare
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToConformationallyActivate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToConformationallyInhibit
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToConsume
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToContain
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCool
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToCovalentlyModify
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDecodeInformation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDecreaseTheRateOfFormation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDemagnify
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDescribe
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDisassemble
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDisassociate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToDistort
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToEmit
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToEncodeInformation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToExamine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToExcite
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToExtract
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToFilter
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToFluoresce
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToFreeze
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToGainACovalentBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToGainAnElectron
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToHeat
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToIdentify
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToImmobilize
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToIncreaseTheActivationEnergy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToIncreaseTheRateOfFormation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToInfect
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToIngest
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToInject
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToInteractAndToBeInteractedWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
    isDispositionOf: Entity
  }

type ToInteractWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToInvestigate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToIonize
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToLoseACovalentBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToLoseAnElectron
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToLuminesce
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToMagnify
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToMaintainInformation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToMeasure
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToModify
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToModifyConformationOf
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToModifyElectronically
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToModifyOxidationStateOf
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToNegativelyCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToObserve
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToOxidize
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToPassivelyInteractWith
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToPositivelyCharge
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToProduce
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToProvide
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type TopValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ToRecord
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToReduce
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToReduceEnergy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToReduceTheActivationEnergy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToRegulate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToRegulateTheRateOfFormation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToRemoveACovalentBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToRetrieve
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToSeparate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAs
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAsAHost
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAsAPrimerForDNASynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAsATemplateForDNASynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAsATemplateForMolecularSynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAsATemplateForProteinSynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToServeAsATemplateForRNASynthesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToStore
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToSupplyElectricity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToSupplyEnergy
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToTestAHypothesis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToTranslocate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type ToTransport
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isCapabilityOf: Entity
  }

type Township
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Toxic
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Toxicity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type ToxicRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type ToxinRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Trans-regulatoryElement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Transcription
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type TransferRNAtRNA
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TransferRNAtRNAGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Translation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Transporting
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type TreeDiagram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Treemap
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TrendLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Triangle
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type TripleBond
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type True
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type TruthValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type TungstenAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UncertaintyValue
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Uncharged
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type UndergraduateStudentAdvisorRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type UnicellularOrganism
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type UnigeneCluster
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type Union
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type UniqueCell
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type UniqueIdentifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
    isUniqueIdentifierFor: Entity
  }

type UnitOfMeasurement
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
    isUnitOf: Entity
  }

type University
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Unsupported
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type UnunhexiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UnunoctiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UnunpentiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UnunquadiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UnunseptiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UnutriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type UraniumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type URL
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type UserAccount
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ValidArgument
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type ValidatedGene
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ValueAxis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VanadiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type VanDerWaalsInteraction
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Variable
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type VariantRole
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasBasis: Quality
    isRoleOf: Entity
  }

type Vector
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type VectorLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VectorSpace
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type Velocity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type VennDiagram
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VerbalLanguage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type VerbalLanguageEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type VersionedDataset
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasDataItem: Entity
  }

type VersionedRecord
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type VersionLabel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type VertexNormal
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VerticalBarGraph
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VerticalLine
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VeryDissatisfiedQualifier
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type VeryGoodQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type VeryPoorQuality
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Viroid
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Virtual
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type Virus
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type VisualLanguageEntity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Vocabulary
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Volume
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type VolumeNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Vowel
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type Wave
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Weak
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type WeakChemicalSalt
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type WeakSubmolecularComponent
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type WebPage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type WebService
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type WebServiceInvocation
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Website
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    hasMember: Entity
  }

type Week
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Width
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type Wonder
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Word
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type WordEndPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type WordStartPosition
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type WordTree
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Workflow
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
  }

type WorkPhoneNumber
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
    isNarrowerThant: Term
    isMatchTo: Term
    isBroaderThant: Term
    isIdentifierFor: Entity
  }

type Worm
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type Worry
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    hasParticipant: Entity
  }

type Written
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }

type WrittenLanguage
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isAnnotationOf: Entity
  }

type X-axis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type XCartesianCoordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type XenonAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Y-axis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type YCartesianCoordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type Year
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
    isNumericallyComparableTo: Quantity
  }

type YtterbiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type YttriumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Z-axis
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
  }

type ZCartesianCoordinate
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    hasUnit: UnitOfMeasurement
    isMeasurementValueOf: Entity
  }

type ZincAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type ZirconiumAtom
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    derivesInto: Object
    isCovalentlyConnectedTotransitive: Atom
  }

type Zygosity
  {
    hasCreator: Entity
    hasAttribute: Entity
    satisfies: Description
    isRelatedTo: Entity
    isQualityOf: Entity
    isBaseFor: RealizableEntity
  }


